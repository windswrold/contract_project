{
	"id": "018087171d08993495bffc1a82fdfac5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/common/CapybaraNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\n\ncontract CapybaraNFT is ERC1155, Ownable, ERC1155Burnable {\n    uint256 private _nextTokenId;\n\n    constructor(\n        address initialOwner,\n        string memory newuri\n    ) ERC1155(newuri) Ownable(initialOwner) {\n        _nextTokenId = 1;\n    }\n\n    function setURI(string memory newuri) public onlyOwner {\n        _setURI(newuri);\n    }\n\n    function mint(address account, bytes memory data) public onlyOwner {\n        uint256 tokenId = _nextTokenId;\n        _mint(account, tokenId, 1, data);\n        _nextTokenId += 1;\n    }\n\n    function mintBatch(\n        address to,\n        uint256 count,\n        bytes memory data\n    ) public onlyOwner {\n        for (uint256 i = 0; i < count; i++) {\n            mint(to, data);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e08f1d50717c6a7be8ddec85a51f1a756b0bae2c2967c3175bfda73ada5e92e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e08f1d50717c6a7be8ddec85a51f1a756b0bae2c2967c3175bfda73ada5e92e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADDMOD CALL 0xD5 SMOD OR 0xC6 0xA7 0xBE DUP14 0xDE 0xC8 GAS MLOAD CALL 0xA7 JUMP 0xB0 0xBA 0xE2 0xC2 SWAP7 PUSH29 0x3175BFDA73ADA5E92E64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "276:4526:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e08f1d50717c6a7be8ddec85a51f1a756b0bae2c2967c3175bfda73ada5e92e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 ADDMOD CALL 0xD5 SMOD OR 0xC6 0xA7 0xBE DUP14 0xDE 0xC8 GAS MLOAD CALL 0xA7 JUMP 0xB0 0xBA 0xE2 0xC2 SWAP7 PUSH29 0x3175BFDA73ADA5E92E64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "276:4526:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e08f1d50717c6a7be8ddec85a51f1a756b0bae2c2967c3175bfda73ada5e92e64736f6c634300081a0033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/common/CapybaraNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/common/CapybaraNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/common/CapybaraNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/common/CapybaraNFT.sol": {
				"CapybaraNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/common/CapybaraNFT.sol\":300:1041  contract CapybaraNFT is ERC1155, Ownable, ERC1155Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/common/CapybaraNFT.sol\":399:548  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/common/CapybaraNFT.sol\":501:513  initialOwner */\n  dup2\n    /* \"contracts/common/CapybaraNFT.sol\":485:491  newuri */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/common/CapybaraNFT.sol\":540:541  1 */\n  0x01\n    /* \"contracts/common/CapybaraNFT.sol\":525:537  _nextTokenId */\n  0x04\n    /* \"contracts/common/CapybaraNFT.sol\":525:541  _nextTokenId = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/common/CapybaraNFT.sol\":399:548  constructor(... */\n  pop\n  pop\n    /* \"contracts/common/CapybaraNFT.sol\":300:1041  contract CapybaraNFT is ERC1155, Ownable, ERC1155Burnable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_22:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_24:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_65\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_67\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_68:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_70\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_29:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_30:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_31:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_32:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_33:\n    /* \"#utility.yul\":1468:1495   */\n  tag_76\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_31\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_78\n  tag_32\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1541:1629   */\ntag_77:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_34:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_80\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_81\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_33\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_35:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_84\n  tag_32\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1945:2001   */\ntag_83:\n    /* \"#utility.yul\":2019:2048   */\n  tag_85\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_31\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2260   */\ntag_36:\n    /* \"#utility.yul\":2210:2216   */\n  dup3\n    /* \"#utility.yul\":2205:2208   */\n  dup2\n    /* \"#utility.yul\":2200:2203   */\n  dup4\n    /* \"#utility.yul\":2194:2217   */\n  mcopy\n    /* \"#utility.yul\":2251:2252   */\n  0x00\n    /* \"#utility.yul\":2242:2248   */\n  dup4\n    /* \"#utility.yul\":2237:2240   */\n  dup4\n    /* \"#utility.yul\":2233:2249   */\n  add\n    /* \"#utility.yul\":2226:2253   */\n  mstore\n    /* \"#utility.yul\":2121:2260   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2266:2700   */\ntag_37:\n    /* \"#utility.yul\":2355:2360   */\n  0x00\n    /* \"#utility.yul\":2380:2446   */\n  tag_88\n    /* \"#utility.yul\":2396:2445   */\n  tag_89\n    /* \"#utility.yul\":2438:2444   */\n  dup5\n    /* \"#utility.yul\":2396:2445   */\n  tag_35\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2380:2446   */\n  tag_34\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2371:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2462:2467   */\n  dup2\n    /* \"#utility.yul\":2455:2476   */\n  mstore\n    /* \"#utility.yul\":2507:2511   */\n  0x20\n    /* \"#utility.yul\":2500:2505   */\n  dup2\n    /* \"#utility.yul\":2496:2512   */\n  add\n    /* \"#utility.yul\":2545:2548   */\n  dup5\n    /* \"#utility.yul\":2536:2542   */\n  dup5\n    /* \"#utility.yul\":2531:2534   */\n  dup5\n    /* \"#utility.yul\":2527:2543   */\n  add\n    /* \"#utility.yul\":2524:2549   */\n  gt\n    /* \"#utility.yul\":2521:2633   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2552:2631   */\n  tag_91\n  tag_30\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2521:2633   */\ntag_90:\n    /* \"#utility.yul\":2642:2694   */\n  tag_92\n    /* \"#utility.yul\":2687:2693   */\n  dup5\n    /* \"#utility.yul\":2682:2685   */\n  dup3\n    /* \"#utility.yul\":2677:2680   */\n  dup6\n    /* \"#utility.yul\":2642:2694   */\n  tag_36\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2361:2700   */\n  pop\n    /* \"#utility.yul\":2266:2700   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2720:3075   */\ntag_38:\n    /* \"#utility.yul\":2787:2792   */\n  0x00\n    /* \"#utility.yul\":2836:2839   */\n  dup3\n    /* \"#utility.yul\":2829:2833   */\n  0x1f\n    /* \"#utility.yul\":2821:2827   */\n  dup4\n    /* \"#utility.yul\":2817:2834   */\n  add\n    /* \"#utility.yul\":2813:2840   */\n  slt\n    /* \"#utility.yul\":2803:2925   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":2844:2923   */\n  tag_95\n  tag_29\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":2803:2925   */\ntag_94:\n    /* \"#utility.yul\":2954:2960   */\n  dup2\n    /* \"#utility.yul\":2948:2961   */\n  mload\n    /* \"#utility.yul\":2979:3069   */\n  tag_96\n    /* \"#utility.yul\":3065:3068   */\n  dup5\n    /* \"#utility.yul\":3057:3063   */\n  dup3\n    /* \"#utility.yul\":3050:3054   */\n  0x20\n    /* \"#utility.yul\":3042:3048   */\n  dup7\n    /* \"#utility.yul\":3038:3055   */\n  add\n    /* \"#utility.yul\":2979:3069   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2970:3069   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:3075   */\n  pop\n    /* \"#utility.yul\":2720:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3761   */\ntag_3:\n    /* \"#utility.yul\":3170:3176   */\n  0x00\n    /* \"#utility.yul\":3178:3184   */\n  dup1\n    /* \"#utility.yul\":3227:3229   */\n  0x40\n    /* \"#utility.yul\":3215:3224   */\n  dup4\n    /* \"#utility.yul\":3206:3213   */\n  dup6\n    /* \"#utility.yul\":3202:3225   */\n  sub\n    /* \"#utility.yul\":3198:3230   */\n  slt\n    /* \"#utility.yul\":3195:3314   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3233:3312   */\n  tag_99\n  tag_23\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3195:3314   */\ntag_98:\n    /* \"#utility.yul\":3353:3354   */\n  0x00\n    /* \"#utility.yul\":3378:3442   */\n  tag_100\n    /* \"#utility.yul\":3434:3441   */\n  dup6\n    /* \"#utility.yul\":3425:3431   */\n  dup3\n    /* \"#utility.yul\":3414:3423   */\n  dup7\n    /* \"#utility.yul\":3410:3432   */\n  add\n    /* \"#utility.yul\":3378:3442   */\n  tag_28\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3368:3442   */\n  swap3\n  pop\n    /* \"#utility.yul\":3324:3452   */\n  pop\n    /* \"#utility.yul\":3512:3514   */\n  0x20\n    /* \"#utility.yul\":3501:3510   */\n  dup4\n    /* \"#utility.yul\":3497:3515   */\n  add\n    /* \"#utility.yul\":3491:3516   */\n  mload\n    /* \"#utility.yul\":3543:3561   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3535:3541   */\n  dup2\n    /* \"#utility.yul\":3532:3562   */\n  gt\n    /* \"#utility.yul\":3529:3646   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":3565:3644   */\n  tag_102\n  tag_24\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3529:3646   */\ntag_101:\n    /* \"#utility.yul\":3670:3744   */\n  tag_103\n    /* \"#utility.yul\":3736:3743   */\n  dup6\n    /* \"#utility.yul\":3727:3733   */\n  dup3\n    /* \"#utility.yul\":3716:3725   */\n  dup7\n    /* \"#utility.yul\":3712:3734   */\n  add\n    /* \"#utility.yul\":3670:3744   */\n  tag_38\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3660:3744   */\n  swap2\n  pop\n    /* \"#utility.yul\":3462:3754   */\n  pop\n    /* \"#utility.yul\":3081:3761   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3767:3885   */\ntag_39:\n    /* \"#utility.yul\":3854:3878   */\n  tag_105\n    /* \"#utility.yul\":3872:3877   */\n  dup2\n    /* \"#utility.yul\":3854:3878   */\n  tag_26\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3849:3852   */\n  dup3\n    /* \"#utility.yul\":3842:3879   */\n  mstore\n    /* \"#utility.yul\":3767:3885   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3891:4113   */\ntag_13:\n    /* \"#utility.yul\":3984:3988   */\n  0x00\n    /* \"#utility.yul\":4022:4024   */\n  0x20\n    /* \"#utility.yul\":4011:4020   */\n  dup3\n    /* \"#utility.yul\":4007:4025   */\n  add\n    /* \"#utility.yul\":3999:4025   */\n  swap1\n  pop\n    /* \"#utility.yul\":4035:4106   */\n  tag_107\n    /* \"#utility.yul\":4103:4104   */\n  0x00\n    /* \"#utility.yul\":4092:4101   */\n  dup4\n    /* \"#utility.yul\":4088:4105   */\n  add\n    /* \"#utility.yul\":4079:4085   */\n  dup5\n    /* \"#utility.yul\":4035:4106   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3891:4113   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4119:4218   */\ntag_40:\n    /* \"#utility.yul\":4171:4177   */\n  0x00\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4199:4211   */\n  mload\n    /* \"#utility.yul\":4189:4211   */\n  swap1\n  pop\n    /* \"#utility.yul\":4119:4218   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4224:4404   */\ntag_41:\n    /* \"#utility.yul\":4272:4349   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4269:4270   */\n  0x00\n    /* \"#utility.yul\":4262:4350   */\n  mstore\n    /* \"#utility.yul\":4369:4373   */\n  0x22\n    /* \"#utility.yul\":4366:4367   */\n  0x04\n    /* \"#utility.yul\":4359:4374   */\n  mstore\n    /* \"#utility.yul\":4393:4397   */\n  0x24\n    /* \"#utility.yul\":4390:4391   */\n  0x00\n    /* \"#utility.yul\":4383:4398   */\n  revert\n    /* \"#utility.yul\":4410:4730   */\ntag_42:\n    /* \"#utility.yul\":4454:4460   */\n  0x00\n    /* \"#utility.yul\":4491:4492   */\n  0x02\n    /* \"#utility.yul\":4485:4489   */\n  dup3\n    /* \"#utility.yul\":4481:4493   */\n  div\n    /* \"#utility.yul\":4471:4493   */\n  swap1\n  pop\n    /* \"#utility.yul\":4538:4539   */\n  0x01\n    /* \"#utility.yul\":4532:4536   */\n  dup3\n    /* \"#utility.yul\":4528:4540   */\n  and\n    /* \"#utility.yul\":4559:4577   */\n  dup1\n    /* \"#utility.yul\":4549:4630   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":4615:4619   */\n  0x7f\n    /* \"#utility.yul\":4607:4613   */\n  dup3\n    /* \"#utility.yul\":4603:4620   */\n  and\n    /* \"#utility.yul\":4593:4620   */\n  swap2\n  pop\n    /* \"#utility.yul\":4549:4630   */\ntag_111:\n    /* \"#utility.yul\":4677:4679   */\n  0x20\n    /* \"#utility.yul\":4669:4675   */\n  dup3\n    /* \"#utility.yul\":4666:4680   */\n  lt\n    /* \"#utility.yul\":4646:4664   */\n  dup2\n    /* \"#utility.yul\":4643:4681   */\n  sub\n    /* \"#utility.yul\":4640:4724   */\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4696:4714   */\n  tag_113\n  tag_41\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4640:4724   */\ntag_112:\n    /* \"#utility.yul\":4461:4730   */\n  pop\n    /* \"#utility.yul\":4410:4730   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4736:4877   */\ntag_43:\n    /* \"#utility.yul\":4785:4789   */\n  0x00\n    /* \"#utility.yul\":4808:4811   */\n  dup2\n    /* \"#utility.yul\":4800:4811   */\n  swap1\n  pop\n    /* \"#utility.yul\":4831:4834   */\n  dup2\n    /* \"#utility.yul\":4828:4829   */\n  0x00\n    /* \"#utility.yul\":4821:4835   */\n  mstore\n    /* \"#utility.yul\":4865:4869   */\n  0x20\n    /* \"#utility.yul\":4862:4863   */\n  0x00\n    /* \"#utility.yul\":4852:4870   */\n  keccak256\n    /* \"#utility.yul\":4844:4870   */\n  swap1\n  pop\n    /* \"#utility.yul\":4736:4877   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4883:4976   */\ntag_44:\n    /* \"#utility.yul\":4920:4926   */\n  0x00\n    /* \"#utility.yul\":4967:4969   */\n  0x20\n    /* \"#utility.yul\":4962:4964   */\n  0x1f\n    /* \"#utility.yul\":4955:4960   */\n  dup4\n    /* \"#utility.yul\":4951:4965   */\n  add\n    /* \"#utility.yul\":4947:4970   */\n  div\n    /* \"#utility.yul\":4937:4970   */\n  swap1\n  pop\n    /* \"#utility.yul\":4883:4976   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4982:5089   */\ntag_45:\n    /* \"#utility.yul\":5026:5034   */\n  0x00\n    /* \"#utility.yul\":5076:5081   */\n  dup3\n    /* \"#utility.yul\":5070:5074   */\n  dup3\n    /* \"#utility.yul\":5066:5082   */\n  shl\n    /* \"#utility.yul\":5045:5082   */\n  swap1\n  pop\n    /* \"#utility.yul\":4982:5089   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5095:5488   */\ntag_46:\n    /* \"#utility.yul\":5164:5170   */\n  0x00\n    /* \"#utility.yul\":5214:5215   */\n  0x08\n    /* \"#utility.yul\":5202:5212   */\n  dup4\n    /* \"#utility.yul\":5198:5216   */\n  mul\n    /* \"#utility.yul\":5237:5334   */\n  tag_118\n    /* \"#utility.yul\":5267:5333   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5256:5265   */\n  dup3\n    /* \"#utility.yul\":5237:5334   */\n  tag_45\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5355:5394   */\n  tag_119\n    /* \"#utility.yul\":5385:5393   */\n  dup7\n    /* \"#utility.yul\":5374:5383   */\n  dup4\n    /* \"#utility.yul\":5355:5394   */\n  tag_45\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5343:5394   */\n  swap6\n  pop\n    /* \"#utility.yul\":5427:5431   */\n  dup1\n    /* \"#utility.yul\":5423:5432   */\n  not\n    /* \"#utility.yul\":5416:5421   */\n  dup5\n    /* \"#utility.yul\":5412:5433   */\n  and\n    /* \"#utility.yul\":5403:5433   */\n  swap4\n  pop\n    /* \"#utility.yul\":5476:5480   */\n  dup1\n    /* \"#utility.yul\":5466:5474   */\n  dup7\n    /* \"#utility.yul\":5462:5481   */\n  and\n    /* \"#utility.yul\":5455:5460   */\n  dup5\n    /* \"#utility.yul\":5452:5482   */\n  or\n    /* \"#utility.yul\":5442:5482   */\n  swap3\n  pop\n    /* \"#utility.yul\":5171:5488   */\n  pop\n  pop\n    /* \"#utility.yul\":5095:5488   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5494:5571   */\ntag_47:\n    /* \"#utility.yul\":5531:5538   */\n  0x00\n    /* \"#utility.yul\":5560:5565   */\n  dup2\n    /* \"#utility.yul\":5549:5565   */\n  swap1\n  pop\n    /* \"#utility.yul\":5494:5571   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5577:5637   */\ntag_48:\n    /* \"#utility.yul\":5605:5608   */\n  0x00\n    /* \"#utility.yul\":5626:5631   */\n  dup2\n    /* \"#utility.yul\":5619:5631   */\n  swap1\n  pop\n    /* \"#utility.yul\":5577:5637   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5643:5785   */\ntag_49:\n    /* \"#utility.yul\":5693:5702   */\n  0x00\n    /* \"#utility.yul\":5726:5779   */\n  tag_123\n    /* \"#utility.yul\":5744:5778   */\n  tag_124\n    /* \"#utility.yul\":5753:5777   */\n  tag_125\n    /* \"#utility.yul\":5771:5776   */\n  dup5\n    /* \"#utility.yul\":5753:5777   */\n  tag_47\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5744:5778   */\n  tag_48\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5726:5779   */\n  tag_47\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":5713:5779   */\n  swap1\n  pop\n    /* \"#utility.yul\":5643:5785   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5791:5866   */\ntag_50:\n    /* \"#utility.yul\":5834:5837   */\n  0x00\n    /* \"#utility.yul\":5855:5860   */\n  dup2\n    /* \"#utility.yul\":5848:5860   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5866   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5872:6141   */\ntag_51:\n    /* \"#utility.yul\":5982:6021   */\n  tag_128\n    /* \"#utility.yul\":6013:6020   */\n  dup4\n    /* \"#utility.yul\":5982:6021   */\n  tag_49\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6043:6134   */\n  tag_129\n    /* \"#utility.yul\":6092:6133   */\n  tag_130\n    /* \"#utility.yul\":6116:6132   */\n  dup3\n    /* \"#utility.yul\":6092:6133   */\n  tag_50\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6084:6090   */\n  dup5\n    /* \"#utility.yul\":6077:6081   */\n  dup5\n    /* \"#utility.yul\":6071:6082   */\n  sload\n    /* \"#utility.yul\":6043:6134   */\n  tag_46\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6037:6041   */\n  dup3\n    /* \"#utility.yul\":6030:6135   */\n  sstore\n    /* \"#utility.yul\":5948:6141   */\n  pop\n    /* \"#utility.yul\":5872:6141   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6147:6220   */\ntag_52:\n    /* \"#utility.yul\":6192:6195   */\n  0x00\n    /* \"#utility.yul\":6147:6220   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6226:6415   */\ntag_53:\n    /* \"#utility.yul\":6303:6335   */\n  tag_133\n  tag_52\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6344:6409   */\n  tag_134\n    /* \"#utility.yul\":6402:6408   */\n  dup2\n    /* \"#utility.yul\":6394:6400   */\n  dup5\n    /* \"#utility.yul\":6388:6392   */\n  dup5\n    /* \"#utility.yul\":6344:6409   */\n  tag_51\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6279:6415   */\n  pop\n    /* \"#utility.yul\":6226:6415   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6421:6607   */\ntag_54:\n    /* \"#utility.yul\":6481:6601   */\ntag_136:\n    /* \"#utility.yul\":6498:6501   */\n  dup2\n    /* \"#utility.yul\":6491:6496   */\n  dup2\n    /* \"#utility.yul\":6488:6502   */\n  lt\n    /* \"#utility.yul\":6481:6601   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6552:6591   */\n  tag_139\n    /* \"#utility.yul\":6589:6590   */\n  0x00\n    /* \"#utility.yul\":6582:6587   */\n  dup3\n    /* \"#utility.yul\":6552:6591   */\n  tag_53\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6525:6526   */\n  0x01\n    /* \"#utility.yul\":6518:6523   */\n  dup2\n    /* \"#utility.yul\":6514:6527   */\n  add\n    /* \"#utility.yul\":6505:6527   */\n  swap1\n  pop\n    /* \"#utility.yul\":6481:6601   */\n  jump(tag_136)\ntag_138:\n    /* \"#utility.yul\":6421:6607   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6613:7156   */\ntag_55:\n    /* \"#utility.yul\":6714:6716   */\n  0x1f\n    /* \"#utility.yul\":6709:6712   */\n  dup3\n    /* \"#utility.yul\":6706:6717   */\n  gt\n    /* \"#utility.yul\":6703:7149   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6748:6786   */\n  tag_142\n    /* \"#utility.yul\":6780:6785   */\n  dup2\n    /* \"#utility.yul\":6748:6786   */\n  tag_43\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6832:6861   */\n  tag_143\n    /* \"#utility.yul\":6850:6860   */\n  dup5\n    /* \"#utility.yul\":6832:6861   */\n  tag_44\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6822:6830   */\n  dup2\n    /* \"#utility.yul\":6818:6862   */\n  add\n    /* \"#utility.yul\":7015:7017   */\n  0x20\n    /* \"#utility.yul\":7003:7013   */\n  dup6\n    /* \"#utility.yul\":7000:7018   */\n  lt\n    /* \"#utility.yul\":6997:7046   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":7036:7044   */\n  dup2\n    /* \"#utility.yul\":7021:7044   */\n  swap1\n  pop\n    /* \"#utility.yul\":6997:7046   */\ntag_144:\n    /* \"#utility.yul\":7059:7139   */\n  tag_145\n    /* \"#utility.yul\":7115:7137   */\n  tag_146\n    /* \"#utility.yul\":7133:7136   */\n  dup6\n    /* \"#utility.yul\":7115:7137   */\n  tag_44\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7105:7113   */\n  dup4\n    /* \"#utility.yul\":7101:7138   */\n  add\n    /* \"#utility.yul\":7088:7099   */\n  dup3\n    /* \"#utility.yul\":7059:7139   */\n  tag_54\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6718:7149   */\n  pop\n  pop\n    /* \"#utility.yul\":6703:7149   */\ntag_141:\n    /* \"#utility.yul\":6613:7156   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7162:7279   */\ntag_56:\n    /* \"#utility.yul\":7216:7224   */\n  0x00\n    /* \"#utility.yul\":7266:7271   */\n  dup3\n    /* \"#utility.yul\":7260:7264   */\n  dup3\n    /* \"#utility.yul\":7256:7272   */\n  shr\n    /* \"#utility.yul\":7235:7272   */\n  swap1\n  pop\n    /* \"#utility.yul\":7162:7279   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7285:7454   */\ntag_57:\n    /* \"#utility.yul\":7329:7335   */\n  0x00\n    /* \"#utility.yul\":7362:7413   */\n  tag_149\n    /* \"#utility.yul\":7410:7411   */\n  0x00\n    /* \"#utility.yul\":7406:7412   */\n  not\n    /* \"#utility.yul\":7398:7403   */\n  dup5\n    /* \"#utility.yul\":7395:7396   */\n  0x08\n    /* \"#utility.yul\":7391:7404   */\n  mul\n    /* \"#utility.yul\":7362:7413   */\n  tag_56\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7358:7414   */\n  not\n    /* \"#utility.yul\":7443:7447   */\n  dup1\n    /* \"#utility.yul\":7437:7441   */\n  dup4\n    /* \"#utility.yul\":7433:7448   */\n  and\n    /* \"#utility.yul\":7423:7448   */\n  swap2\n  pop\n    /* \"#utility.yul\":7336:7454   */\n  pop\n    /* \"#utility.yul\":7285:7454   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7459:7754   */\ntag_58:\n    /* \"#utility.yul\":7535:7539   */\n  0x00\n    /* \"#utility.yul\":7681:7710   */\n  tag_151\n    /* \"#utility.yul\":7706:7709   */\n  dup4\n    /* \"#utility.yul\":7700:7704   */\n  dup4\n    /* \"#utility.yul\":7681:7710   */\n  tag_57\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":7673:7710   */\n  swap2\n  pop\n    /* \"#utility.yul\":7743:7746   */\n  dup3\n    /* \"#utility.yul\":7740:7741   */\n  0x02\n    /* \"#utility.yul\":7736:7747   */\n  mul\n    /* \"#utility.yul\":7730:7734   */\n  dup3\n    /* \"#utility.yul\":7727:7748   */\n  or\n    /* \"#utility.yul\":7719:7748   */\n  swap1\n  pop\n    /* \"#utility.yul\":7459:7754   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7759:9154   */\ntag_20:\n    /* \"#utility.yul\":7876:7913   */\n  tag_153\n    /* \"#utility.yul\":7909:7912   */\n  dup3\n    /* \"#utility.yul\":7876:7913   */\n  tag_40\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7978:7996   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7970:7976   */\n  dup2\n    /* \"#utility.yul\":7967:7997   */\n  gt\n    /* \"#utility.yul\":7964:8020   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":8000:8018   */\n  tag_155\n  tag_32\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7964:8020   */\ntag_154:\n    /* \"#utility.yul\":8044:8082   */\n  tag_156\n    /* \"#utility.yul\":8076:8080   */\n  dup3\n    /* \"#utility.yul\":8070:8081   */\n  sload\n    /* \"#utility.yul\":8044:8082   */\n  tag_42\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":8129:8196   */\n  tag_157\n    /* \"#utility.yul\":8189:8195   */\n  dup3\n    /* \"#utility.yul\":8181:8187   */\n  dup3\n    /* \"#utility.yul\":8175:8179   */\n  dup6\n    /* \"#utility.yul\":8129:8196   */\n  tag_55\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":8223:8224   */\n  0x00\n    /* \"#utility.yul\":8247:8251   */\n  0x20\n    /* \"#utility.yul\":8234:8251   */\n  swap1\n  pop\n    /* \"#utility.yul\":8279:8281   */\n  0x1f\n    /* \"#utility.yul\":8271:8277   */\n  dup4\n    /* \"#utility.yul\":8268:8282   */\n  gt\n    /* \"#utility.yul\":8296:8297   */\n  0x01\n    /* \"#utility.yul\":8291:8909   */\n  dup2\n  eq\n  tag_159\n  jumpi\n    /* \"#utility.yul\":8953:8954   */\n  0x00\n    /* \"#utility.yul\":8970:8976   */\n  dup5\n    /* \"#utility.yul\":8967:9044   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":9019:9028   */\n  dup3\n    /* \"#utility.yul\":9014:9017   */\n  dup8\n    /* \"#utility.yul\":9010:9029   */\n  add\n    /* \"#utility.yul\":9004:9030   */\n  mload\n    /* \"#utility.yul\":8995:9030   */\n  swap1\n  pop\n    /* \"#utility.yul\":8967:9044   */\ntag_160:\n    /* \"#utility.yul\":9070:9137   */\n  tag_161\n    /* \"#utility.yul\":9130:9136   */\n  dup6\n    /* \"#utility.yul\":9123:9128   */\n  dup3\n    /* \"#utility.yul\":9070:9137   */\n  tag_58\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":9064:9068   */\n  dup7\n    /* \"#utility.yul\":9057:9138   */\n  sstore\n    /* \"#utility.yul\":8926:9148   */\n  pop\n    /* \"#utility.yul\":8261:9148   */\n  jump(tag_158)\n    /* \"#utility.yul\":8291:8909   */\ntag_159:\n    /* \"#utility.yul\":8343:8347   */\n  0x1f\n    /* \"#utility.yul\":8339:8348   */\n  not\n    /* \"#utility.yul\":8331:8337   */\n  dup5\n    /* \"#utility.yul\":8327:8349   */\n  and\n    /* \"#utility.yul\":8377:8414   */\n  tag_162\n    /* \"#utility.yul\":8409:8413   */\n  dup7\n    /* \"#utility.yul\":8377:8414   */\n  tag_43\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":8436:8437   */\n  0x00\n    /* \"#utility.yul\":8450:8658   */\ntag_163:\n    /* \"#utility.yul\":8464:8471   */\n  dup3\n    /* \"#utility.yul\":8461:8462   */\n  dup2\n    /* \"#utility.yul\":8458:8472   */\n  lt\n    /* \"#utility.yul\":8450:8658   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":8543:8552   */\n  dup5\n    /* \"#utility.yul\":8538:8541   */\n  dup10\n    /* \"#utility.yul\":8534:8553   */\n  add\n    /* \"#utility.yul\":8528:8554   */\n  mload\n    /* \"#utility.yul\":8520:8526   */\n  dup3\n    /* \"#utility.yul\":8513:8555   */\n  sstore\n    /* \"#utility.yul\":8594:8595   */\n  0x01\n    /* \"#utility.yul\":8586:8592   */\n  dup3\n    /* \"#utility.yul\":8582:8596   */\n  add\n    /* \"#utility.yul\":8572:8596   */\n  swap2\n  pop\n    /* \"#utility.yul\":8641:8643   */\n  0x20\n    /* \"#utility.yul\":8630:8639   */\n  dup6\n    /* \"#utility.yul\":8626:8644   */\n  add\n    /* \"#utility.yul\":8613:8644   */\n  swap5\n  pop\n    /* \"#utility.yul\":8487:8491   */\n  0x20\n    /* \"#utility.yul\":8484:8485   */\n  dup2\n    /* \"#utility.yul\":8480:8492   */\n  add\n    /* \"#utility.yul\":8475:8492   */\n  swap1\n  pop\n    /* \"#utility.yul\":8450:8658   */\n  jump(tag_163)\ntag_165:\n    /* \"#utility.yul\":8686:8692   */\n  dup7\n    /* \"#utility.yul\":8677:8684   */\n  dup4\n    /* \"#utility.yul\":8674:8693   */\n  lt\n    /* \"#utility.yul\":8671:8850   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":8744:8753   */\n  dup5\n    /* \"#utility.yul\":8739:8742   */\n  dup10\n    /* \"#utility.yul\":8735:8754   */\n  add\n    /* \"#utility.yul\":8729:8755   */\n  mload\n    /* \"#utility.yul\":8787:8835   */\n  tag_167\n    /* \"#utility.yul\":8829:8833   */\n  0x1f\n    /* \"#utility.yul\":8821:8827   */\n  dup10\n    /* \"#utility.yul\":8817:8834   */\n  and\n    /* \"#utility.yul\":8806:8815   */\n  dup3\n    /* \"#utility.yul\":8787:8835   */\n  tag_57\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8779:8785   */\n  dup4\n    /* \"#utility.yul\":8772:8836   */\n  sstore\n    /* \"#utility.yul\":8694:8850   */\n  pop\n    /* \"#utility.yul\":8671:8850   */\ntag_166:\n    /* \"#utility.yul\":8896:8897   */\n  0x01\n    /* \"#utility.yul\":8892:8893   */\n  0x02\n    /* \"#utility.yul\":8884:8890   */\n  dup9\n    /* \"#utility.yul\":8880:8894   */\n  mul\n    /* \"#utility.yul\":8876:8898   */\n  add\n    /* \"#utility.yul\":8870:8874   */\n  dup9\n    /* \"#utility.yul\":8863:8899   */\n  sstore\n    /* \"#utility.yul\":8298:8909   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8261:9148   */\ntag_158:\n  pop\n    /* \"#utility.yul\":7851:9154   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7759:9154   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/common/CapybaraNFT.sol\":300:1041  contract CapybaraNFT is ERC1155, Ownable, ERC1155Burnable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/common/CapybaraNFT.sol\":300:1041  contract CapybaraNFT is ERC1155, Ownable, ERC1155Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb510391f\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x31f0e6c8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6b20c454\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/common/CapybaraNFT.sol\":554:641  function setURI(string memory newuri) public onlyOwner {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/common/CapybaraNFT.sol\":836:1039  function mintBatch(... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/common/CapybaraNFT.sol\":647:830  function mint(address account, bytes memory data) public onlyOwner {... */\n    tag_14:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_15:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_16:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_18:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_96\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/common/CapybaraNFT.sol\":554:641  function setURI(string memory newuri) public onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/common/CapybaraNFT.sol\":619:634  _setURI(newuri) */\n      tag_103\n        /* \"contracts/common/CapybaraNFT.sol\":627:633  newuri */\n      dup2\n        /* \"contracts/common/CapybaraNFT.sol\":619:626  _setURI */\n      tag_104\n        /* \"contracts/common/CapybaraNFT.sol\":619:634  _setURI(newuri) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/common/CapybaraNFT.sol\":554:641  function setURI(string memory newuri) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_115\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/common/CapybaraNFT.sol\":836:1039  function mintBatch(... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/common/CapybaraNFT.sol\":963:972  uint256 i */\n      0x00\n        /* \"contracts/common/CapybaraNFT.sol\":958:1033  for (uint256 i = 0; i < count; i++) {... */\n    tag_125:\n        /* \"contracts/common/CapybaraNFT.sol\":982:987  count */\n      dup3\n        /* \"contracts/common/CapybaraNFT.sol\":978:979  i */\n      dup2\n        /* \"contracts/common/CapybaraNFT.sol\":978:987  i < count */\n      lt\n        /* \"contracts/common/CapybaraNFT.sol\":958:1033  for (uint256 i = 0; i < count; i++) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/common/CapybaraNFT.sol\":1008:1022  mint(to, data) */\n      tag_128\n        /* \"contracts/common/CapybaraNFT.sol\":1013:1015  to */\n      dup5\n        /* \"contracts/common/CapybaraNFT.sol\":1017:1021  data */\n      dup4\n        /* \"contracts/common/CapybaraNFT.sol\":1008:1012  mint */\n      tag_75\n        /* \"contracts/common/CapybaraNFT.sol\":1008:1022  mint(to, data) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/common/CapybaraNFT.sol\":989:992  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/common/CapybaraNFT.sol\":958:1033  for (uint256 i = 0; i < count; i++) {... */\n      jump(tag_125)\n    tag_126:\n      pop\n        /* \"contracts/common/CapybaraNFT.sol\":836:1039  function mintBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_133\n      jumpi\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n    tag_133:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_136:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_142\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_144\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_25\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n    tag_145:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_137)\n    tag_138:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:816  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:814  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:816  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:816  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:800  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:816  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:860  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:860  isApprovedForAll(account, _msgSender()) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":838:845  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:859  _msgSender() */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:857  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:859  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:837  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:860  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":820:860  !isApprovedForAll(account, _msgSender()) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:860  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":789:945  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:924  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:922  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:924  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":926:933  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":883:934  ERC1155MissingApprovalForAll(_msgSender(), account) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":789:945  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:987  _burnBatch(account, ids, values) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":966:973  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":975:978  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":980:986  values */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:965  _burnBatch */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:987  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/common/CapybaraNFT.sol\":647:830  function mint(address account, bytes memory data) public onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/common/CapybaraNFT.sol\":724:739  uint256 tokenId */\n      0x00\n        /* \"contracts/common/CapybaraNFT.sol\":742:754  _nextTokenId */\n      sload(0x04)\n        /* \"contracts/common/CapybaraNFT.sol\":724:754  uint256 tokenId = _nextTokenId */\n      swap1\n      pop\n        /* \"contracts/common/CapybaraNFT.sol\":764:796  _mint(account, tokenId, 1, data) */\n      tag_171\n        /* \"contracts/common/CapybaraNFT.sol\":770:777  account */\n      dup4\n        /* \"contracts/common/CapybaraNFT.sol\":779:786  tokenId */\n      dup3\n        /* \"contracts/common/CapybaraNFT.sol\":788:789  1 */\n      0x01\n        /* \"contracts/common/CapybaraNFT.sol\":791:795  data */\n      dup6\n        /* \"contracts/common/CapybaraNFT.sol\":764:769  _mint */\n      tag_172\n        /* \"contracts/common/CapybaraNFT.sol\":764:796  _mint(account, tokenId, 1, data) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/common/CapybaraNFT.sol\":822:823  1 */\n      0x01\n        /* \"contracts/common/CapybaraNFT.sol\":806:818  _nextTokenId */\n      0x04\n      0x00\n        /* \"contracts/common/CapybaraNFT.sol\":806:823  _nextTokenId += 1 */\n      dup3\n      dup3\n      sload\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/common/CapybaraNFT.sol\":714:830  {... */\n      pop\n        /* \"contracts/common/CapybaraNFT.sol\":647:830  function mint(address account, bytes memory data) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_178\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:504  _msgSender() */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:502  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:504  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:504  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:488  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:504  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:548  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:548  isApprovedForAll(account, _msgSender()) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":526:533  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:547  _msgSender() */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:545  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:547  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:525  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:548  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":508:548  !isApprovedForAll(account, _msgSender()) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:548  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":477:633  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:612  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:610  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:612  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":614:621  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":571:622  ERC1155MissingApprovalForAll(_msgSender(), account) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":477:633  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:668  _burn(account, id, value) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":649:656  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":658:660  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":662:667  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:648  _burn */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:668  _burn(account, id, value) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n      swap1\n      dup2\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12784:13049  function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12904:12905  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12906  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12892  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12906  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12884:12972  if (from == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12958:12959  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12929:12961  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12884:12972  if (from == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13008:13012  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13022:13023  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13026:13029  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13031:13037  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13007  _updateWithAcceptanceCheck */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12784:13049  function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12194:12195  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12182  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12248:12249  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12272:12292  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12294:12317  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12340:12342  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12344:12349  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12339  _asSingletonArrays */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12271:12350  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12387:12391  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12401:12402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12405:12408  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12410:12416  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12386  _updateWithAcceptanceCheck */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12164:12428  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_144\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_144\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_257)\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_144\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_269\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_144\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_275\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_275:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_265)\n    tag_266:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_144\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_144\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_279\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_280)\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_281\n      swap3\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_287\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_288\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      0x01\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_290\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_295\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_294)\n    tag_295:\n      0x60\n      swap2\n      pop\n    tag_294:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_301\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_306\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_307\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_307:\n      0x01\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_308\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_313\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_312)\n    tag_313:\n      0x60\n      swap2\n      pop\n    tag_312:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_320:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_321:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_322:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_323:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_324:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_396\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_323\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_325:\n        /* \"#utility.yul\":641:665   */\n      tag_398\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_324\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_399:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_326:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_401\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_325\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_327:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_328:\n        /* \"#utility.yul\":997:1021   */\n      tag_404\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_327\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_405:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_329:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_407\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_328\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_24:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_410\n      tag_321\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1290:1409   */\n    tag_409:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_411\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_326\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_412\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_329\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_330:\n        /* \"#utility.yul\":1764:1788   */\n      tag_414\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_327\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_27:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_416\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_330\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_331:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_332:\n        /* \"#utility.yul\":2256:2279   */\n      tag_419\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_331\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_420:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_333:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_422\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_332\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_30:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_425\n      tag_321\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2528:2647   */\n    tag_424:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_426\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_333\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_334:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_335:\n        /* \"#utility.yul\":2963:2984   */\n      tag_429\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_334\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_33:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_431\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_335\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3330   */\n    tag_336:\n        /* \"#utility.yul\":3322:3323   */\n      0x00\n        /* \"#utility.yul\":3319:3320   */\n      dup1\n        /* \"#utility.yul\":3312:3324   */\n      revert\n        /* \"#utility.yul\":3336:3453   */\n    tag_337:\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      dup1\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3459:3561   */\n    tag_338:\n        /* \"#utility.yul\":3500:3506   */\n      0x00\n        /* \"#utility.yul\":3551:3553   */\n      0x1f\n        /* \"#utility.yul\":3547:3554   */\n      not\n        /* \"#utility.yul\":3542:3544   */\n      0x1f\n        /* \"#utility.yul\":3535:3540   */\n      dup4\n        /* \"#utility.yul\":3531:3545   */\n      add\n        /* \"#utility.yul\":3527:3555   */\n      and\n        /* \"#utility.yul\":3517:3555   */\n      swap1\n      pop\n        /* \"#utility.yul\":3459:3561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3747   */\n    tag_135:\n        /* \"#utility.yul\":3615:3692   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3612:3613   */\n      0x00\n        /* \"#utility.yul\":3605:3693   */\n      mstore\n        /* \"#utility.yul\":3712:3716   */\n      0x41\n        /* \"#utility.yul\":3709:3710   */\n      0x04\n        /* \"#utility.yul\":3702:3717   */\n      mstore\n        /* \"#utility.yul\":3736:3740   */\n      0x24\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3726:3741   */\n      revert\n        /* \"#utility.yul\":3753:4034   */\n    tag_339:\n        /* \"#utility.yul\":3836:3863   */\n      tag_437\n        /* \"#utility.yul\":3858:3862   */\n      dup3\n        /* \"#utility.yul\":3836:3863   */\n      tag_338\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":3828:3834   */\n      dup2\n        /* \"#utility.yul\":3824:3864   */\n      add\n        /* \"#utility.yul\":3966:3972   */\n      dup2\n        /* \"#utility.yul\":3954:3964   */\n      dup2\n        /* \"#utility.yul\":3951:3973   */\n      lt\n        /* \"#utility.yul\":3930:3948   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3918:3928   */\n      dup3\n        /* \"#utility.yul\":3915:3949   */\n      gt\n        /* \"#utility.yul\":3912:3974   */\n      or\n        /* \"#utility.yul\":3909:3997   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3977:3995   */\n      tag_439\n      tag_135\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3909:3997   */\n    tag_438:\n        /* \"#utility.yul\":4017:4027   */\n      dup1\n        /* \"#utility.yul\":4013:4015   */\n      0x40\n        /* \"#utility.yul\":4006:4028   */\n      mstore\n        /* \"#utility.yul\":3796:4034   */\n      pop\n        /* \"#utility.yul\":3753:4034   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4040:4169   */\n    tag_340:\n        /* \"#utility.yul\":4074:4080   */\n      0x00\n        /* \"#utility.yul\":4101:4121   */\n      tag_441\n      tag_320\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4091:4121   */\n      swap1\n      pop\n        /* \"#utility.yul\":4130:4163   */\n      tag_442\n        /* \"#utility.yul\":4158:4162   */\n      dup3\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4130:4163   */\n      tag_339\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4040:4169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4175:4483   */\n    tag_341:\n        /* \"#utility.yul\":4237:4241   */\n      0x00\n        /* \"#utility.yul\":4327:4345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4316:4346   */\n      gt\n        /* \"#utility.yul\":4313:4369   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":4349:4367   */\n      tag_445\n      tag_135\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4313:4369   */\n    tag_444:\n        /* \"#utility.yul\":4387:4416   */\n      tag_446\n        /* \"#utility.yul\":4409:4415   */\n      dup3\n        /* \"#utility.yul\":4387:4416   */\n      tag_338\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4379:4416   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4475   */\n      0x20\n        /* \"#utility.yul\":4465:4469   */\n      dup2\n        /* \"#utility.yul\":4461:4476   */\n      add\n        /* \"#utility.yul\":4453:4476   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4489:4637   */\n    tag_342:\n        /* \"#utility.yul\":4587:4593   */\n      dup3\n        /* \"#utility.yul\":4582:4585   */\n      dup2\n        /* \"#utility.yul\":4577:4580   */\n      dup4\n        /* \"#utility.yul\":4564:4594   */\n      calldatacopy\n        /* \"#utility.yul\":4628:4629   */\n      0x00\n        /* \"#utility.yul\":4619:4625   */\n      dup4\n        /* \"#utility.yul\":4614:4617   */\n      dup4\n        /* \"#utility.yul\":4610:4626   */\n      add\n        /* \"#utility.yul\":4603:4630   */\n      mstore\n        /* \"#utility.yul\":4489:4637   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4643:5068   */\n    tag_343:\n        /* \"#utility.yul\":4721:4726   */\n      0x00\n        /* \"#utility.yul\":4746:4812   */\n      tag_449\n        /* \"#utility.yul\":4762:4811   */\n      tag_450\n        /* \"#utility.yul\":4804:4810   */\n      dup5\n        /* \"#utility.yul\":4762:4811   */\n      tag_341\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4746:4812   */\n      tag_340\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":4737:4812   */\n      swap1\n      pop\n        /* \"#utility.yul\":4835:4841   */\n      dup3\n        /* \"#utility.yul\":4828:4833   */\n      dup2\n        /* \"#utility.yul\":4821:4842   */\n      mstore\n        /* \"#utility.yul\":4873:4877   */\n      0x20\n        /* \"#utility.yul\":4866:4871   */\n      dup2\n        /* \"#utility.yul\":4862:4878   */\n      add\n        /* \"#utility.yul\":4911:4914   */\n      dup5\n        /* \"#utility.yul\":4902:4908   */\n      dup5\n        /* \"#utility.yul\":4897:4900   */\n      dup5\n        /* \"#utility.yul\":4893:4909   */\n      add\n        /* \"#utility.yul\":4890:4915   */\n      gt\n        /* \"#utility.yul\":4887:4999   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":4918:4997   */\n      tag_452\n      tag_337\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":4887:4999   */\n    tag_451:\n        /* \"#utility.yul\":5008:5062   */\n      tag_453\n        /* \"#utility.yul\":5055:5061   */\n      dup5\n        /* \"#utility.yul\":5050:5053   */\n      dup3\n        /* \"#utility.yul\":5045:5048   */\n      dup6\n        /* \"#utility.yul\":5008:5062   */\n      tag_342\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":4727:5068   */\n      pop\n        /* \"#utility.yul\":4643:5068   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5088:5428   */\n    tag_344:\n        /* \"#utility.yul\":5144:5149   */\n      0x00\n        /* \"#utility.yul\":5193:5196   */\n      dup3\n        /* \"#utility.yul\":5186:5190   */\n      0x1f\n        /* \"#utility.yul\":5178:5184   */\n      dup4\n        /* \"#utility.yul\":5174:5191   */\n      add\n        /* \"#utility.yul\":5170:5197   */\n      slt\n        /* \"#utility.yul\":5160:5282   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":5201:5280   */\n      tag_456\n      tag_336\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5160:5282   */\n    tag_455:\n        /* \"#utility.yul\":5318:5324   */\n      dup2\n        /* \"#utility.yul\":5305:5325   */\n      calldataload\n        /* \"#utility.yul\":5343:5422   */\n      tag_457\n        /* \"#utility.yul\":5418:5421   */\n      dup5\n        /* \"#utility.yul\":5410:5416   */\n      dup3\n        /* \"#utility.yul\":5403:5407   */\n      0x20\n        /* \"#utility.yul\":5395:5401   */\n      dup7\n        /* \"#utility.yul\":5391:5408   */\n      add\n        /* \"#utility.yul\":5343:5422   */\n      tag_343\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5334:5422   */\n      swap2\n      pop\n        /* \"#utility.yul\":5150:5428   */\n      pop\n        /* \"#utility.yul\":5088:5428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5434:5943   */\n    tag_36:\n        /* \"#utility.yul\":5503:5509   */\n      0x00\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"#utility.yul\":5540:5549   */\n      dup3\n        /* \"#utility.yul\":5531:5538   */\n      dup5\n        /* \"#utility.yul\":5527:5550   */\n      sub\n        /* \"#utility.yul\":5523:5555   */\n      slt\n        /* \"#utility.yul\":5520:5639   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":5558:5637   */\n      tag_460\n      tag_321\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5520:5639   */\n    tag_459:\n        /* \"#utility.yul\":5706:5707   */\n      0x00\n        /* \"#utility.yul\":5695:5704   */\n      dup3\n        /* \"#utility.yul\":5691:5708   */\n      add\n        /* \"#utility.yul\":5678:5709   */\n      calldataload\n        /* \"#utility.yul\":5736:5754   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5728:5734   */\n      dup2\n        /* \"#utility.yul\":5725:5755   */\n      gt\n        /* \"#utility.yul\":5722:5839   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":5758:5837   */\n      tag_462\n      tag_322\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5722:5839   */\n    tag_461:\n        /* \"#utility.yul\":5863:5926   */\n      tag_463\n        /* \"#utility.yul\":5918:5925   */\n      dup5\n        /* \"#utility.yul\":5909:5915   */\n      dup3\n        /* \"#utility.yul\":5898:5907   */\n      dup6\n        /* \"#utility.yul\":5894:5916   */\n      add\n        /* \"#utility.yul\":5863:5926   */\n      tag_344\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":5853:5926   */\n      swap2\n      pop\n        /* \"#utility.yul\":5649:5936   */\n      pop\n        /* \"#utility.yul\":5434:5943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5949:6278   */\n    tag_40:\n        /* \"#utility.yul\":6008:6014   */\n      0x00\n        /* \"#utility.yul\":6057:6059   */\n      0x20\n        /* \"#utility.yul\":6045:6054   */\n      dup3\n        /* \"#utility.yul\":6036:6043   */\n      dup5\n        /* \"#utility.yul\":6032:6055   */\n      sub\n        /* \"#utility.yul\":6028:6060   */\n      slt\n        /* \"#utility.yul\":6025:6144   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":6063:6142   */\n      tag_466\n      tag_321\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6025:6144   */\n    tag_465:\n        /* \"#utility.yul\":6183:6184   */\n      0x00\n        /* \"#utility.yul\":6208:6261   */\n      tag_467\n        /* \"#utility.yul\":6253:6260   */\n      dup5\n        /* \"#utility.yul\":6244:6250   */\n      dup3\n        /* \"#utility.yul\":6233:6242   */\n      dup6\n        /* \"#utility.yul\":6229:6251   */\n      add\n        /* \"#utility.yul\":6208:6261   */\n      tag_329\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6198:6261   */\n      swap2\n      pop\n        /* \"#utility.yul\":6154:6271   */\n      pop\n        /* \"#utility.yul\":5949:6278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6284:6383   */\n    tag_345:\n        /* \"#utility.yul\":6336:6342   */\n      0x00\n        /* \"#utility.yul\":6370:6375   */\n      dup2\n        /* \"#utility.yul\":6364:6376   */\n      mload\n        /* \"#utility.yul\":6354:6376   */\n      swap1\n      pop\n        /* \"#utility.yul\":6284:6383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6389:6558   */\n    tag_346:\n        /* \"#utility.yul\":6473:6484   */\n      0x00\n        /* \"#utility.yul\":6507:6513   */\n      dup3\n        /* \"#utility.yul\":6502:6505   */\n      dup3\n        /* \"#utility.yul\":6495:6514   */\n      mstore\n        /* \"#utility.yul\":6547:6551   */\n      0x20\n        /* \"#utility.yul\":6542:6545   */\n      dup3\n        /* \"#utility.yul\":6538:6552   */\n      add\n        /* \"#utility.yul\":6523:6552   */\n      swap1\n      pop\n        /* \"#utility.yul\":6389:6558   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6564:6703   */\n    tag_347:\n        /* \"#utility.yul\":6653:6659   */\n      dup3\n        /* \"#utility.yul\":6648:6651   */\n      dup2\n        /* \"#utility.yul\":6643:6646   */\n      dup4\n        /* \"#utility.yul\":6637:6660   */\n      mcopy\n        /* \"#utility.yul\":6694:6695   */\n      0x00\n        /* \"#utility.yul\":6685:6691   */\n      dup4\n        /* \"#utility.yul\":6680:6683   */\n      dup4\n        /* \"#utility.yul\":6676:6692   */\n      add\n        /* \"#utility.yul\":6669:6696   */\n      mstore\n        /* \"#utility.yul\":6564:6703   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6709:7086   */\n    tag_348:\n        /* \"#utility.yul\":6797:6800   */\n      0x00\n        /* \"#utility.yul\":6825:6864   */\n      tag_472\n        /* \"#utility.yul\":6858:6863   */\n      dup3\n        /* \"#utility.yul\":6825:6864   */\n      tag_345\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6880:6951   */\n      tag_473\n        /* \"#utility.yul\":6944:6950   */\n      dup2\n        /* \"#utility.yul\":6939:6942   */\n      dup6\n        /* \"#utility.yul\":6880:6951   */\n      tag_346\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":6873:6951   */\n      swap4\n      pop\n        /* \"#utility.yul\":6960:7025   */\n      tag_474\n        /* \"#utility.yul\":7018:7024   */\n      dup2\n        /* \"#utility.yul\":7013:7016   */\n      dup6\n        /* \"#utility.yul\":7006:7010   */\n      0x20\n        /* \"#utility.yul\":6999:7004   */\n      dup7\n        /* \"#utility.yul\":6995:7011   */\n      add\n        /* \"#utility.yul\":6960:7025   */\n      tag_347\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7050:7079   */\n      tag_475\n        /* \"#utility.yul\":7072:7078   */\n      dup2\n        /* \"#utility.yul\":7050:7079   */\n      tag_338\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7045:7048   */\n      dup5\n        /* \"#utility.yul\":7041:7080   */\n      add\n        /* \"#utility.yul\":7034:7080   */\n      swap2\n      pop\n        /* \"#utility.yul\":6801:7086   */\n      pop\n        /* \"#utility.yul\":6709:7086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7092:7405   */\n    tag_43:\n        /* \"#utility.yul\":7205:7209   */\n      0x00\n        /* \"#utility.yul\":7243:7245   */\n      0x20\n        /* \"#utility.yul\":7232:7241   */\n      dup3\n        /* \"#utility.yul\":7228:7246   */\n      add\n        /* \"#utility.yul\":7220:7246   */\n      swap1\n      pop\n        /* \"#utility.yul\":7292:7301   */\n      dup2\n        /* \"#utility.yul\":7286:7290   */\n      dup2\n        /* \"#utility.yul\":7282:7302   */\n      sub\n        /* \"#utility.yul\":7278:7279   */\n      0x00\n        /* \"#utility.yul\":7267:7276   */\n      dup4\n        /* \"#utility.yul\":7263:7280   */\n      add\n        /* \"#utility.yul\":7256:7303   */\n      mstore\n        /* \"#utility.yul\":7320:7398   */\n      tag_477\n        /* \"#utility.yul\":7393:7397   */\n      dup2\n        /* \"#utility.yul\":7384:7390   */\n      dup5\n        /* \"#utility.yul\":7320:7398   */\n      tag_348\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":7312:7398   */\n      swap1\n      pop\n        /* \"#utility.yul\":7092:7405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7411:7722   */\n    tag_349:\n        /* \"#utility.yul\":7488:7492   */\n      0x00\n        /* \"#utility.yul\":7578:7596   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7570:7576   */\n      dup3\n        /* \"#utility.yul\":7567:7597   */\n      gt\n        /* \"#utility.yul\":7564:7620   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":7600:7618   */\n      tag_480\n      tag_135\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7564:7620   */\n    tag_479:\n        /* \"#utility.yul\":7650:7654   */\n      0x20\n        /* \"#utility.yul\":7642:7648   */\n      dup3\n        /* \"#utility.yul\":7638:7655   */\n      mul\n        /* \"#utility.yul\":7630:7655   */\n      swap1\n      pop\n        /* \"#utility.yul\":7710:7714   */\n      0x20\n        /* \"#utility.yul\":7704:7708   */\n      dup2\n        /* \"#utility.yul\":7700:7715   */\n      add\n        /* \"#utility.yul\":7692:7715   */\n      swap1\n      pop\n        /* \"#utility.yul\":7411:7722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7728:7845   */\n    tag_350:\n        /* \"#utility.yul\":7837:7838   */\n      0x00\n        /* \"#utility.yul\":7834:7835   */\n      dup1\n        /* \"#utility.yul\":7827:7839   */\n      revert\n        /* \"#utility.yul\":7868:8578   */\n    tag_351:\n        /* \"#utility.yul\":7964:7969   */\n      0x00\n        /* \"#utility.yul\":7989:8070   */\n      tag_483\n        /* \"#utility.yul\":8005:8069   */\n      tag_484\n        /* \"#utility.yul\":8062:8068   */\n      dup5\n        /* \"#utility.yul\":8005:8069   */\n      tag_349\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7989:8070   */\n      tag_340\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":7980:8070   */\n      swap1\n      pop\n        /* \"#utility.yul\":8090:8095   */\n      dup1\n        /* \"#utility.yul\":8119:8125   */\n      dup4\n        /* \"#utility.yul\":8112:8117   */\n      dup3\n        /* \"#utility.yul\":8105:8126   */\n      mstore\n        /* \"#utility.yul\":8153:8157   */\n      0x20\n        /* \"#utility.yul\":8146:8151   */\n      dup3\n        /* \"#utility.yul\":8142:8158   */\n      add\n        /* \"#utility.yul\":8135:8158   */\n      swap1\n      pop\n        /* \"#utility.yul\":8206:8210   */\n      0x20\n        /* \"#utility.yul\":8198:8204   */\n      dup5\n        /* \"#utility.yul\":8194:8211   */\n      mul\n        /* \"#utility.yul\":8186:8192   */\n      dup4\n        /* \"#utility.yul\":8182:8212   */\n      add\n        /* \"#utility.yul\":8235:8238   */\n      dup6\n        /* \"#utility.yul\":8227:8233   */\n      dup2\n        /* \"#utility.yul\":8224:8239   */\n      gt\n        /* \"#utility.yul\":8221:8343   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":8254:8333   */\n      tag_486\n      tag_350\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8221:8343   */\n    tag_485:\n        /* \"#utility.yul\":8369:8375   */\n      dup4\n        /* \"#utility.yul\":8352:8572   */\n    tag_487:\n        /* \"#utility.yul\":8386:8392   */\n      dup2\n        /* \"#utility.yul\":8381:8384   */\n      dup2\n        /* \"#utility.yul\":8378:8393   */\n      lt\n        /* \"#utility.yul\":8352:8572   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":8461:8464   */\n      dup1\n        /* \"#utility.yul\":8490:8527   */\n      tag_490\n        /* \"#utility.yul\":8523:8526   */\n      dup9\n        /* \"#utility.yul\":8511:8521   */\n      dup3\n        /* \"#utility.yul\":8490:8527   */\n      tag_329\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8485:8488   */\n      dup5\n        /* \"#utility.yul\":8478:8528   */\n      mstore\n        /* \"#utility.yul\":8557:8561   */\n      0x20\n        /* \"#utility.yul\":8552:8555   */\n      dup5\n        /* \"#utility.yul\":8548:8562   */\n      add\n        /* \"#utility.yul\":8541:8562   */\n      swap4\n      pop\n        /* \"#utility.yul\":8428:8572   */\n      pop\n        /* \"#utility.yul\":8412:8416   */\n      0x20\n        /* \"#utility.yul\":8407:8410   */\n      dup2\n        /* \"#utility.yul\":8403:8417   */\n      add\n        /* \"#utility.yul\":8396:8417   */\n      swap1\n      pop\n        /* \"#utility.yul\":8352:8572   */\n      jump(tag_487)\n    tag_489:\n        /* \"#utility.yul\":8356:8377   */\n      pop\n        /* \"#utility.yul\":7970:8578   */\n      pop\n      pop\n        /* \"#utility.yul\":7868:8578   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8601:8971   */\n    tag_352:\n        /* \"#utility.yul\":8672:8677   */\n      0x00\n        /* \"#utility.yul\":8721:8724   */\n      dup3\n        /* \"#utility.yul\":8714:8718   */\n      0x1f\n        /* \"#utility.yul\":8706:8712   */\n      dup4\n        /* \"#utility.yul\":8702:8719   */\n      add\n        /* \"#utility.yul\":8698:8725   */\n      slt\n        /* \"#utility.yul\":8688:8810   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":8729:8808   */\n      tag_493\n      tag_336\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8688:8810   */\n    tag_492:\n        /* \"#utility.yul\":8846:8852   */\n      dup2\n        /* \"#utility.yul\":8833:8853   */\n      calldataload\n        /* \"#utility.yul\":8871:8965   */\n      tag_494\n        /* \"#utility.yul\":8961:8964   */\n      dup5\n        /* \"#utility.yul\":8953:8959   */\n      dup3\n        /* \"#utility.yul\":8946:8950   */\n      0x20\n        /* \"#utility.yul\":8938:8944   */\n      dup7\n        /* \"#utility.yul\":8934:8951   */\n      add\n        /* \"#utility.yul\":8871:8965   */\n      tag_351\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8862:8965   */\n      swap2\n      pop\n        /* \"#utility.yul\":8678:8971   */\n      pop\n        /* \"#utility.yul\":8601:8971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8977:9284   */\n    tag_353:\n        /* \"#utility.yul\":9038:9042   */\n      0x00\n        /* \"#utility.yul\":9128:9146   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9120:9126   */\n      dup3\n        /* \"#utility.yul\":9117:9147   */\n      gt\n        /* \"#utility.yul\":9114:9170   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":9150:9168   */\n      tag_497\n      tag_135\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9114:9170   */\n    tag_496:\n        /* \"#utility.yul\":9188:9217   */\n      tag_498\n        /* \"#utility.yul\":9210:9216   */\n      dup3\n        /* \"#utility.yul\":9188:9217   */\n      tag_338\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9180:9217   */\n      swap1\n      pop\n        /* \"#utility.yul\":9272:9276   */\n      0x20\n        /* \"#utility.yul\":9266:9270   */\n      dup2\n        /* \"#utility.yul\":9262:9277   */\n      add\n        /* \"#utility.yul\":9254:9277   */\n      swap1\n      pop\n        /* \"#utility.yul\":8977:9284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9290:9713   */\n    tag_354:\n        /* \"#utility.yul\":9367:9372   */\n      0x00\n        /* \"#utility.yul\":9392:9457   */\n      tag_500\n        /* \"#utility.yul\":9408:9456   */\n      tag_501\n        /* \"#utility.yul\":9449:9455   */\n      dup5\n        /* \"#utility.yul\":9408:9456   */\n      tag_353\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":9392:9457   */\n      tag_340\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":9383:9457   */\n      swap1\n      pop\n        /* \"#utility.yul\":9480:9486   */\n      dup3\n        /* \"#utility.yul\":9473:9478   */\n      dup2\n        /* \"#utility.yul\":9466:9487   */\n      mstore\n        /* \"#utility.yul\":9518:9522   */\n      0x20\n        /* \"#utility.yul\":9511:9516   */\n      dup2\n        /* \"#utility.yul\":9507:9523   */\n      add\n        /* \"#utility.yul\":9556:9559   */\n      dup5\n        /* \"#utility.yul\":9547:9553   */\n      dup5\n        /* \"#utility.yul\":9542:9545   */\n      dup5\n        /* \"#utility.yul\":9538:9554   */\n      add\n        /* \"#utility.yul\":9535:9560   */\n      gt\n        /* \"#utility.yul\":9532:9644   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":9563:9642   */\n      tag_503\n      tag_337\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9532:9644   */\n    tag_502:\n        /* \"#utility.yul\":9653:9707   */\n      tag_504\n        /* \"#utility.yul\":9700:9706   */\n      dup5\n        /* \"#utility.yul\":9695:9698   */\n      dup3\n        /* \"#utility.yul\":9690:9693   */\n      dup6\n        /* \"#utility.yul\":9653:9707   */\n      tag_342\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9373:9713   */\n      pop\n        /* \"#utility.yul\":9290:9713   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9732:10070   */\n    tag_355:\n        /* \"#utility.yul\":9787:9792   */\n      0x00\n        /* \"#utility.yul\":9836:9839   */\n      dup3\n        /* \"#utility.yul\":9829:9833   */\n      0x1f\n        /* \"#utility.yul\":9821:9827   */\n      dup4\n        /* \"#utility.yul\":9817:9834   */\n      add\n        /* \"#utility.yul\":9813:9840   */\n      slt\n        /* \"#utility.yul\":9803:9925   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_507\n      tag_336\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9803:9925   */\n    tag_506:\n        /* \"#utility.yul\":9961:9967   */\n      dup2\n        /* \"#utility.yul\":9948:9968   */\n      calldataload\n        /* \"#utility.yul\":9986:10064   */\n      tag_508\n        /* \"#utility.yul\":10060:10063   */\n      dup5\n        /* \"#utility.yul\":10052:10058   */\n      dup3\n        /* \"#utility.yul\":10045:10049   */\n      0x20\n        /* \"#utility.yul\":10037:10043   */\n      dup7\n        /* \"#utility.yul\":10033:10050   */\n      add\n        /* \"#utility.yul\":9986:10064   */\n      tag_354\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":9977:10064   */\n      swap2\n      pop\n        /* \"#utility.yul\":9793:10070   */\n      pop\n        /* \"#utility.yul\":9732:10070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10076:11585   */\n    tag_46:\n        /* \"#utility.yul\":10230:10236   */\n      0x00\n        /* \"#utility.yul\":10238:10244   */\n      dup1\n        /* \"#utility.yul\":10246:10252   */\n      0x00\n        /* \"#utility.yul\":10254:10260   */\n      dup1\n        /* \"#utility.yul\":10262:10268   */\n      0x00\n        /* \"#utility.yul\":10311:10314   */\n      0xa0\n        /* \"#utility.yul\":10299:10308   */\n      dup7\n        /* \"#utility.yul\":10290:10297   */\n      dup9\n        /* \"#utility.yul\":10286:10309   */\n      sub\n        /* \"#utility.yul\":10282:10315   */\n      slt\n        /* \"#utility.yul\":10279:10399   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":10318:10397   */\n      tag_511\n      tag_321\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10279:10399   */\n    tag_510:\n        /* \"#utility.yul\":10438:10439   */\n      0x00\n        /* \"#utility.yul\":10463:10516   */\n      tag_512\n        /* \"#utility.yul\":10508:10515   */\n      dup9\n        /* \"#utility.yul\":10499:10505   */\n      dup3\n        /* \"#utility.yul\":10488:10497   */\n      dup10\n        /* \"#utility.yul\":10484:10506   */\n      add\n        /* \"#utility.yul\":10463:10516   */\n      tag_326\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10453:10516   */\n      swap6\n      pop\n        /* \"#utility.yul\":10409:10526   */\n      pop\n        /* \"#utility.yul\":10565:10567   */\n      0x20\n        /* \"#utility.yul\":10591:10644   */\n      tag_513\n        /* \"#utility.yul\":10636:10643   */\n      dup9\n        /* \"#utility.yul\":10627:10633   */\n      dup3\n        /* \"#utility.yul\":10616:10625   */\n      dup10\n        /* \"#utility.yul\":10612:10634   */\n      add\n        /* \"#utility.yul\":10591:10644   */\n      tag_326\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10581:10644   */\n      swap5\n      pop\n        /* \"#utility.yul\":10536:10654   */\n      pop\n        /* \"#utility.yul\":10721:10723   */\n      0x40\n        /* \"#utility.yul\":10710:10719   */\n      dup7\n        /* \"#utility.yul\":10706:10724   */\n      add\n        /* \"#utility.yul\":10693:10725   */\n      calldataload\n        /* \"#utility.yul\":10752:10770   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10744:10750   */\n      dup2\n        /* \"#utility.yul\":10741:10771   */\n      gt\n        /* \"#utility.yul\":10738:10855   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":10774:10853   */\n      tag_515\n      tag_322\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10738:10855   */\n    tag_514:\n        /* \"#utility.yul\":10879:10957   */\n      tag_516\n        /* \"#utility.yul\":10949:10956   */\n      dup9\n        /* \"#utility.yul\":10940:10946   */\n      dup3\n        /* \"#utility.yul\":10929:10938   */\n      dup10\n        /* \"#utility.yul\":10925:10947   */\n      add\n        /* \"#utility.yul\":10879:10957   */\n      tag_352\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":10869:10957   */\n      swap4\n      pop\n        /* \"#utility.yul\":10664:10967   */\n      pop\n        /* \"#utility.yul\":11034:11036   */\n      0x60\n        /* \"#utility.yul\":11023:11032   */\n      dup7\n        /* \"#utility.yul\":11019:11037   */\n      add\n        /* \"#utility.yul\":11006:11038   */\n      calldataload\n        /* \"#utility.yul\":11065:11083   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11057:11063   */\n      dup2\n        /* \"#utility.yul\":11054:11084   */\n      gt\n        /* \"#utility.yul\":11051:11168   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":11087:11166   */\n      tag_518\n      tag_322\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11051:11168   */\n    tag_517:\n        /* \"#utility.yul\":11192:11270   */\n      tag_519\n        /* \"#utility.yul\":11262:11269   */\n      dup9\n        /* \"#utility.yul\":11253:11259   */\n      dup3\n        /* \"#utility.yul\":11242:11251   */\n      dup10\n        /* \"#utility.yul\":11238:11260   */\n      add\n        /* \"#utility.yul\":11192:11270   */\n      tag_352\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":11182:11270   */\n      swap3\n      pop\n        /* \"#utility.yul\":10977:11280   */\n      pop\n        /* \"#utility.yul\":11347:11350   */\n      0x80\n        /* \"#utility.yul\":11336:11345   */\n      dup7\n        /* \"#utility.yul\":11332:11351   */\n      add\n        /* \"#utility.yul\":11319:11352   */\n      calldataload\n        /* \"#utility.yul\":11379:11397   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11371:11377   */\n      dup2\n        /* \"#utility.yul\":11368:11398   */\n      gt\n        /* \"#utility.yul\":11365:11482   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":11401:11480   */\n      tag_521\n      tag_322\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11365:11482   */\n    tag_520:\n        /* \"#utility.yul\":11506:11568   */\n      tag_522\n        /* \"#utility.yul\":11560:11567   */\n      dup9\n        /* \"#utility.yul\":11551:11557   */\n      dup3\n        /* \"#utility.yul\":11540:11549   */\n      dup10\n        /* \"#utility.yul\":11536:11558   */\n      add\n        /* \"#utility.yul\":11506:11568   */\n      tag_355\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":11496:11568   */\n      swap2\n      pop\n        /* \"#utility.yul\":11290:11578   */\n      pop\n        /* \"#utility.yul\":10076:11585   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11591:12388   */\n    tag_50:\n        /* \"#utility.yul\":11677:11683   */\n      0x00\n        /* \"#utility.yul\":11685:11691   */\n      dup1\n        /* \"#utility.yul\":11693:11699   */\n      0x00\n        /* \"#utility.yul\":11742:11744   */\n      0x60\n        /* \"#utility.yul\":11730:11739   */\n      dup5\n        /* \"#utility.yul\":11721:11728   */\n      dup7\n        /* \"#utility.yul\":11717:11740   */\n      sub\n        /* \"#utility.yul\":11713:11745   */\n      slt\n        /* \"#utility.yul\":11710:11829   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":11748:11827   */\n      tag_525\n      tag_321\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11710:11829   */\n    tag_524:\n        /* \"#utility.yul\":11868:11869   */\n      0x00\n        /* \"#utility.yul\":11893:11946   */\n      tag_526\n        /* \"#utility.yul\":11938:11945   */\n      dup7\n        /* \"#utility.yul\":11929:11935   */\n      dup3\n        /* \"#utility.yul\":11918:11927   */\n      dup8\n        /* \"#utility.yul\":11914:11936   */\n      add\n        /* \"#utility.yul\":11893:11946   */\n      tag_326\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11883:11946   */\n      swap4\n      pop\n        /* \"#utility.yul\":11839:11956   */\n      pop\n        /* \"#utility.yul\":11995:11997   */\n      0x20\n        /* \"#utility.yul\":12021:12074   */\n      tag_527\n        /* \"#utility.yul\":12066:12073   */\n      dup7\n        /* \"#utility.yul\":12057:12063   */\n      dup3\n        /* \"#utility.yul\":12046:12055   */\n      dup8\n        /* \"#utility.yul\":12042:12064   */\n      add\n        /* \"#utility.yul\":12021:12074   */\n      tag_329\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":12011:12074   */\n      swap3\n      pop\n        /* \"#utility.yul\":11966:12084   */\n      pop\n        /* \"#utility.yul\":12151:12153   */\n      0x40\n        /* \"#utility.yul\":12140:12149   */\n      dup5\n        /* \"#utility.yul\":12136:12154   */\n      add\n        /* \"#utility.yul\":12123:12155   */\n      calldataload\n        /* \"#utility.yul\":12182:12200   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12174:12180   */\n      dup2\n        /* \"#utility.yul\":12171:12201   */\n      gt\n        /* \"#utility.yul\":12168:12285   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":12204:12283   */\n      tag_529\n      tag_322\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":12168:12285   */\n    tag_528:\n        /* \"#utility.yul\":12309:12371   */\n      tag_530\n        /* \"#utility.yul\":12363:12370   */\n      dup7\n        /* \"#utility.yul\":12354:12360   */\n      dup3\n        /* \"#utility.yul\":12343:12352   */\n      dup8\n        /* \"#utility.yul\":12339:12361   */\n      add\n        /* \"#utility.yul\":12309:12371   */\n      tag_355\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":12299:12371   */\n      swap2\n      pop\n        /* \"#utility.yul\":12094:12381   */\n      pop\n        /* \"#utility.yul\":11591:12388   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":12394:12705   */\n    tag_356:\n        /* \"#utility.yul\":12471:12475   */\n      0x00\n        /* \"#utility.yul\":12561:12579   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12553:12559   */\n      dup3\n        /* \"#utility.yul\":12550:12580   */\n      gt\n        /* \"#utility.yul\":12547:12603   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":12583:12601   */\n      tag_533\n      tag_135\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12547:12603   */\n    tag_532:\n        /* \"#utility.yul\":12633:12637   */\n      0x20\n        /* \"#utility.yul\":12625:12631   */\n      dup3\n        /* \"#utility.yul\":12621:12638   */\n      mul\n        /* \"#utility.yul\":12613:12638   */\n      swap1\n      pop\n        /* \"#utility.yul\":12693:12697   */\n      0x20\n        /* \"#utility.yul\":12687:12691   */\n      dup2\n        /* \"#utility.yul\":12683:12698   */\n      add\n        /* \"#utility.yul\":12675:12698   */\n      swap1\n      pop\n        /* \"#utility.yul\":12394:12705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12728:13438   */\n    tag_357:\n        /* \"#utility.yul\":12824:12829   */\n      0x00\n        /* \"#utility.yul\":12849:12930   */\n      tag_535\n        /* \"#utility.yul\":12865:12929   */\n      tag_536\n        /* \"#utility.yul\":12922:12928   */\n      dup5\n        /* \"#utility.yul\":12865:12929   */\n      tag_356\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12849:12930   */\n      tag_340\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12840:12930   */\n      swap1\n      pop\n        /* \"#utility.yul\":12950:12955   */\n      dup1\n        /* \"#utility.yul\":12979:12985   */\n      dup4\n        /* \"#utility.yul\":12972:12977   */\n      dup3\n        /* \"#utility.yul\":12965:12986   */\n      mstore\n        /* \"#utility.yul\":13013:13017   */\n      0x20\n        /* \"#utility.yul\":13006:13011   */\n      dup3\n        /* \"#utility.yul\":13002:13018   */\n      add\n        /* \"#utility.yul\":12995:13018   */\n      swap1\n      pop\n        /* \"#utility.yul\":13066:13070   */\n      0x20\n        /* \"#utility.yul\":13058:13064   */\n      dup5\n        /* \"#utility.yul\":13054:13071   */\n      mul\n        /* \"#utility.yul\":13046:13052   */\n      dup4\n        /* \"#utility.yul\":13042:13072   */\n      add\n        /* \"#utility.yul\":13095:13098   */\n      dup6\n        /* \"#utility.yul\":13087:13093   */\n      dup2\n        /* \"#utility.yul\":13084:13099   */\n      gt\n        /* \"#utility.yul\":13081:13203   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":13114:13193   */\n      tag_538\n      tag_350\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":13081:13203   */\n    tag_537:\n        /* \"#utility.yul\":13229:13235   */\n      dup4\n        /* \"#utility.yul\":13212:13432   */\n    tag_539:\n        /* \"#utility.yul\":13246:13252   */\n      dup2\n        /* \"#utility.yul\":13241:13244   */\n      dup2\n        /* \"#utility.yul\":13238:13253   */\n      lt\n        /* \"#utility.yul\":13212:13432   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":13321:13324   */\n      dup1\n        /* \"#utility.yul\":13350:13387   */\n      tag_542\n        /* \"#utility.yul\":13383:13386   */\n      dup9\n        /* \"#utility.yul\":13371:13381   */\n      dup3\n        /* \"#utility.yul\":13350:13387   */\n      tag_326\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":13345:13348   */\n      dup5\n        /* \"#utility.yul\":13338:13388   */\n      mstore\n        /* \"#utility.yul\":13417:13421   */\n      0x20\n        /* \"#utility.yul\":13412:13415   */\n      dup5\n        /* \"#utility.yul\":13408:13422   */\n      add\n        /* \"#utility.yul\":13401:13422   */\n      swap4\n      pop\n        /* \"#utility.yul\":13288:13432   */\n      pop\n        /* \"#utility.yul\":13272:13276   */\n      0x20\n        /* \"#utility.yul\":13267:13270   */\n      dup2\n        /* \"#utility.yul\":13263:13277   */\n      add\n        /* \"#utility.yul\":13256:13277   */\n      swap1\n      pop\n        /* \"#utility.yul\":13212:13432   */\n      jump(tag_539)\n    tag_541:\n        /* \"#utility.yul\":13216:13237   */\n      pop\n        /* \"#utility.yul\":12830:13438   */\n      pop\n      pop\n        /* \"#utility.yul\":12728:13438   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13461:13831   */\n    tag_358:\n        /* \"#utility.yul\":13532:13537   */\n      0x00\n        /* \"#utility.yul\":13581:13584   */\n      dup3\n        /* \"#utility.yul\":13574:13578   */\n      0x1f\n        /* \"#utility.yul\":13566:13572   */\n      dup4\n        /* \"#utility.yul\":13562:13579   */\n      add\n        /* \"#utility.yul\":13558:13585   */\n      slt\n        /* \"#utility.yul\":13548:13670   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":13589:13668   */\n      tag_545\n      tag_336\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13548:13670   */\n    tag_544:\n        /* \"#utility.yul\":13706:13712   */\n      dup2\n        /* \"#utility.yul\":13693:13713   */\n      calldataload\n        /* \"#utility.yul\":13731:13825   */\n      tag_546\n        /* \"#utility.yul\":13821:13824   */\n      dup5\n        /* \"#utility.yul\":13813:13819   */\n      dup3\n        /* \"#utility.yul\":13806:13810   */\n      0x20\n        /* \"#utility.yul\":13798:13804   */\n      dup7\n        /* \"#utility.yul\":13794:13811   */\n      add\n        /* \"#utility.yul\":13731:13825   */\n      tag_357\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":13722:13825   */\n      swap2\n      pop\n        /* \"#utility.yul\":13538:13831   */\n      pop\n        /* \"#utility.yul\":13461:13831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13837:14731   */\n    tag_54:\n        /* \"#utility.yul\":13955:13961   */\n      0x00\n        /* \"#utility.yul\":13963:13969   */\n      dup1\n        /* \"#utility.yul\":14012:14014   */\n      0x40\n        /* \"#utility.yul\":14000:14009   */\n      dup4\n        /* \"#utility.yul\":13991:13998   */\n      dup6\n        /* \"#utility.yul\":13987:14010   */\n      sub\n        /* \"#utility.yul\":13983:14015   */\n      slt\n        /* \"#utility.yul\":13980:14099   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":14018:14097   */\n      tag_549\n      tag_321\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":13980:14099   */\n    tag_548:\n        /* \"#utility.yul\":14166:14167   */\n      0x00\n        /* \"#utility.yul\":14155:14164   */\n      dup4\n        /* \"#utility.yul\":14151:14168   */\n      add\n        /* \"#utility.yul\":14138:14169   */\n      calldataload\n        /* \"#utility.yul\":14196:14214   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14188:14194   */\n      dup2\n        /* \"#utility.yul\":14185:14215   */\n      gt\n        /* \"#utility.yul\":14182:14299   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":14218:14297   */\n      tag_551\n      tag_322\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":14182:14299   */\n    tag_550:\n        /* \"#utility.yul\":14323:14401   */\n      tag_552\n        /* \"#utility.yul\":14393:14400   */\n      dup6\n        /* \"#utility.yul\":14384:14390   */\n      dup3\n        /* \"#utility.yul\":14373:14382   */\n      dup7\n        /* \"#utility.yul\":14369:14391   */\n      add\n        /* \"#utility.yul\":14323:14401   */\n      tag_358\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":14313:14401   */\n      swap3\n      pop\n        /* \"#utility.yul\":14109:14411   */\n      pop\n        /* \"#utility.yul\":14478:14480   */\n      0x20\n        /* \"#utility.yul\":14467:14476   */\n      dup4\n        /* \"#utility.yul\":14463:14481   */\n      add\n        /* \"#utility.yul\":14450:14482   */\n      calldataload\n        /* \"#utility.yul\":14509:14527   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14501:14507   */\n      dup2\n        /* \"#utility.yul\":14498:14528   */\n      gt\n        /* \"#utility.yul\":14495:14612   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":14531:14610   */\n      tag_554\n      tag_322\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":14495:14612   */\n    tag_553:\n        /* \"#utility.yul\":14636:14714   */\n      tag_555\n        /* \"#utility.yul\":14706:14713   */\n      dup6\n        /* \"#utility.yul\":14697:14703   */\n      dup3\n        /* \"#utility.yul\":14686:14695   */\n      dup7\n        /* \"#utility.yul\":14682:14704   */\n      add\n        /* \"#utility.yul\":14636:14714   */\n      tag_352\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":14626:14714   */\n      swap2\n      pop\n        /* \"#utility.yul\":14421:14724   */\n      pop\n        /* \"#utility.yul\":13837:14731   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14737:14851   */\n    tag_359:\n        /* \"#utility.yul\":14804:14810   */\n      0x00\n        /* \"#utility.yul\":14838:14843   */\n      dup2\n        /* \"#utility.yul\":14832:14844   */\n      mload\n        /* \"#utility.yul\":14822:14844   */\n      swap1\n      pop\n        /* \"#utility.yul\":14737:14851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14857:15041   */\n    tag_360:\n        /* \"#utility.yul\":14956:14967   */\n      0x00\n        /* \"#utility.yul\":14990:14996   */\n      dup3\n        /* \"#utility.yul\":14985:14988   */\n      dup3\n        /* \"#utility.yul\":14978:14997   */\n      mstore\n        /* \"#utility.yul\":15030:15034   */\n      0x20\n        /* \"#utility.yul\":15025:15028   */\n      dup3\n        /* \"#utility.yul\":15021:15035   */\n      add\n        /* \"#utility.yul\":15006:15035   */\n      swap1\n      pop\n        /* \"#utility.yul\":14857:15041   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15047:15179   */\n    tag_361:\n        /* \"#utility.yul\":15114:15118   */\n      0x00\n        /* \"#utility.yul\":15137:15140   */\n      dup2\n        /* \"#utility.yul\":15129:15140   */\n      swap1\n      pop\n        /* \"#utility.yul\":15167:15171   */\n      0x20\n        /* \"#utility.yul\":15162:15165   */\n      dup3\n        /* \"#utility.yul\":15158:15172   */\n      add\n        /* \"#utility.yul\":15150:15172   */\n      swap1\n      pop\n        /* \"#utility.yul\":15047:15179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15185:15293   */\n    tag_362:\n        /* \"#utility.yul\":15262:15286   */\n      tag_560\n        /* \"#utility.yul\":15280:15285   */\n      dup2\n        /* \"#utility.yul\":15262:15286   */\n      tag_327\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":15257:15260   */\n      dup3\n        /* \"#utility.yul\":15250:15287   */\n      mstore\n        /* \"#utility.yul\":15185:15293   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15299:15478   */\n    tag_363:\n        /* \"#utility.yul\":15368:15378   */\n      0x00\n        /* \"#utility.yul\":15389:15435   */\n      tag_562\n        /* \"#utility.yul\":15431:15434   */\n      dup4\n        /* \"#utility.yul\":15423:15429   */\n      dup4\n        /* \"#utility.yul\":15389:15435   */\n      tag_362\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":15467:15471   */\n      0x20\n        /* \"#utility.yul\":15462:15465   */\n      dup4\n        /* \"#utility.yul\":15458:15472   */\n      add\n        /* \"#utility.yul\":15444:15472   */\n      swap1\n      pop\n        /* \"#utility.yul\":15299:15478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15484:15597   */\n    tag_364:\n        /* \"#utility.yul\":15554:15558   */\n      0x00\n        /* \"#utility.yul\":15586:15590   */\n      0x20\n        /* \"#utility.yul\":15581:15584   */\n      dup3\n        /* \"#utility.yul\":15577:15591   */\n      add\n        /* \"#utility.yul\":15569:15591   */\n      swap1\n      pop\n        /* \"#utility.yul\":15484:15597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15633:16365   */\n    tag_365:\n        /* \"#utility.yul\":15752:15755   */\n      0x00\n        /* \"#utility.yul\":15781:15835   */\n      tag_565\n        /* \"#utility.yul\":15829:15834   */\n      dup3\n        /* \"#utility.yul\":15781:15835   */\n      tag_359\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15851:15937   */\n      tag_566\n        /* \"#utility.yul\":15930:15936   */\n      dup2\n        /* \"#utility.yul\":15925:15928   */\n      dup6\n        /* \"#utility.yul\":15851:15937   */\n      tag_360\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15844:15937   */\n      swap4\n      pop\n        /* \"#utility.yul\":15961:16017   */\n      tag_567\n        /* \"#utility.yul\":16011:16016   */\n      dup4\n        /* \"#utility.yul\":15961:16017   */\n      tag_361\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":16040:16047   */\n      dup1\n        /* \"#utility.yul\":16071:16072   */\n      0x00\n        /* \"#utility.yul\":16056:16340   */\n    tag_568:\n        /* \"#utility.yul\":16081:16087   */\n      dup4\n        /* \"#utility.yul\":16078:16079   */\n      dup2\n        /* \"#utility.yul\":16075:16088   */\n      lt\n        /* \"#utility.yul\":16056:16340   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":16157:16163   */\n      dup2\n        /* \"#utility.yul\":16151:16164   */\n      mload\n        /* \"#utility.yul\":16184:16247   */\n      tag_571\n        /* \"#utility.yul\":16243:16246   */\n      dup9\n        /* \"#utility.yul\":16228:16241   */\n      dup3\n        /* \"#utility.yul\":16184:16247   */\n      tag_363\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16177:16247   */\n      swap8\n      pop\n        /* \"#utility.yul\":16270:16330   */\n      tag_572\n        /* \"#utility.yul\":16323:16329   */\n      dup4\n        /* \"#utility.yul\":16270:16330   */\n      tag_364\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16260:16330   */\n      swap3\n      pop\n        /* \"#utility.yul\":16116:16340   */\n      pop\n        /* \"#utility.yul\":16103:16104   */\n      0x01\n        /* \"#utility.yul\":16100:16101   */\n      dup2\n        /* \"#utility.yul\":16096:16105   */\n      add\n        /* \"#utility.yul\":16091:16105   */\n      swap1\n      pop\n        /* \"#utility.yul\":16056:16340   */\n      jump(tag_568)\n    tag_570:\n        /* \"#utility.yul\":16060:16074   */\n      pop\n        /* \"#utility.yul\":16356:16359   */\n      dup6\n        /* \"#utility.yul\":16349:16359   */\n      swap4\n      pop\n        /* \"#utility.yul\":15757:16365   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15633:16365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16371:16744   */\n    tag_57:\n        /* \"#utility.yul\":16514:16518   */\n      0x00\n        /* \"#utility.yul\":16552:16554   */\n      0x20\n        /* \"#utility.yul\":16541:16550   */\n      dup3\n        /* \"#utility.yul\":16537:16555   */\n      add\n        /* \"#utility.yul\":16529:16555   */\n      swap1\n      pop\n        /* \"#utility.yul\":16601:16610   */\n      dup2\n        /* \"#utility.yul\":16595:16599   */\n      dup2\n        /* \"#utility.yul\":16591:16611   */\n      sub\n        /* \"#utility.yul\":16587:16588   */\n      0x00\n        /* \"#utility.yul\":16576:16585   */\n      dup4\n        /* \"#utility.yul\":16572:16589   */\n      add\n        /* \"#utility.yul\":16565:16612   */\n      mstore\n        /* \"#utility.yul\":16629:16737   */\n      tag_574\n        /* \"#utility.yul\":16732:16736   */\n      dup2\n        /* \"#utility.yul\":16723:16729   */\n      dup5\n        /* \"#utility.yul\":16629:16737   */\n      tag_365\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":16621:16737   */\n      swap1\n      pop\n        /* \"#utility.yul\":16371:16744   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16750:17789   */\n    tag_60:\n        /* \"#utility.yul\":16877:16883   */\n      0x00\n        /* \"#utility.yul\":16885:16891   */\n      dup1\n        /* \"#utility.yul\":16893:16899   */\n      0x00\n        /* \"#utility.yul\":16942:16944   */\n      0x60\n        /* \"#utility.yul\":16930:16939   */\n      dup5\n        /* \"#utility.yul\":16921:16928   */\n      dup7\n        /* \"#utility.yul\":16917:16940   */\n      sub\n        /* \"#utility.yul\":16913:16945   */\n      slt\n        /* \"#utility.yul\":16910:17029   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":16948:17027   */\n      tag_577\n      tag_321\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":16910:17029   */\n    tag_576:\n        /* \"#utility.yul\":17068:17069   */\n      0x00\n        /* \"#utility.yul\":17093:17146   */\n      tag_578\n        /* \"#utility.yul\":17138:17145   */\n      dup7\n        /* \"#utility.yul\":17129:17135   */\n      dup3\n        /* \"#utility.yul\":17118:17127   */\n      dup8\n        /* \"#utility.yul\":17114:17136   */\n      add\n        /* \"#utility.yul\":17093:17146   */\n      tag_326\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":17083:17146   */\n      swap4\n      pop\n        /* \"#utility.yul\":17039:17156   */\n      pop\n        /* \"#utility.yul\":17223:17225   */\n      0x20\n        /* \"#utility.yul\":17212:17221   */\n      dup5\n        /* \"#utility.yul\":17208:17226   */\n      add\n        /* \"#utility.yul\":17195:17227   */\n      calldataload\n        /* \"#utility.yul\":17254:17272   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17246:17252   */\n      dup2\n        /* \"#utility.yul\":17243:17273   */\n      gt\n        /* \"#utility.yul\":17240:17357   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":17276:17355   */\n      tag_580\n      tag_322\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":17240:17357   */\n    tag_579:\n        /* \"#utility.yul\":17381:17459   */\n      tag_581\n        /* \"#utility.yul\":17451:17458   */\n      dup7\n        /* \"#utility.yul\":17442:17448   */\n      dup3\n        /* \"#utility.yul\":17431:17440   */\n      dup8\n        /* \"#utility.yul\":17427:17449   */\n      add\n        /* \"#utility.yul\":17381:17459   */\n      tag_352\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17371:17459   */\n      swap3\n      pop\n        /* \"#utility.yul\":17166:17469   */\n      pop\n        /* \"#utility.yul\":17536:17538   */\n      0x40\n        /* \"#utility.yul\":17525:17534   */\n      dup5\n        /* \"#utility.yul\":17521:17539   */\n      add\n        /* \"#utility.yul\":17508:17540   */\n      calldataload\n        /* \"#utility.yul\":17567:17585   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17559:17565   */\n      dup2\n        /* \"#utility.yul\":17556:17586   */\n      gt\n        /* \"#utility.yul\":17553:17670   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":17589:17668   */\n      tag_583\n      tag_322\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":17553:17670   */\n    tag_582:\n        /* \"#utility.yul\":17694:17772   */\n      tag_584\n        /* \"#utility.yul\":17764:17771   */\n      dup7\n        /* \"#utility.yul\":17755:17761   */\n      dup3\n        /* \"#utility.yul\":17744:17753   */\n      dup8\n        /* \"#utility.yul\":17740:17762   */\n      add\n        /* \"#utility.yul\":17694:17772   */\n      tag_352\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":17684:17772   */\n      swap2\n      pop\n        /* \"#utility.yul\":17479:17782   */\n      pop\n        /* \"#utility.yul\":16750:17789   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":17795:17913   */\n    tag_366:\n        /* \"#utility.yul\":17882:17906   */\n      tag_586\n        /* \"#utility.yul\":17900:17905   */\n      dup2\n        /* \"#utility.yul\":17882:17906   */\n      tag_324\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":17877:17880   */\n      dup3\n        /* \"#utility.yul\":17870:17907   */\n      mstore\n        /* \"#utility.yul\":17795:17913   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17919:18141   */\n    tag_67:\n        /* \"#utility.yul\":18012:18016   */\n      0x00\n        /* \"#utility.yul\":18050:18052   */\n      0x20\n        /* \"#utility.yul\":18039:18048   */\n      dup3\n        /* \"#utility.yul\":18035:18053   */\n      add\n        /* \"#utility.yul\":18027:18053   */\n      swap1\n      pop\n        /* \"#utility.yul\":18063:18134   */\n      tag_588\n        /* \"#utility.yul\":18131:18132   */\n      0x00\n        /* \"#utility.yul\":18120:18129   */\n      dup4\n        /* \"#utility.yul\":18116:18133   */\n      add\n        /* \"#utility.yul\":18107:18113   */\n      dup5\n        /* \"#utility.yul\":18063:18134   */\n      tag_366\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":17919:18141   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18147:18263   */\n    tag_367:\n        /* \"#utility.yul\":18217:18238   */\n      tag_590\n        /* \"#utility.yul\":18232:18237   */\n      dup2\n        /* \"#utility.yul\":18217:18238   */\n      tag_334\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18210:18215   */\n      dup2\n        /* \"#utility.yul\":18207:18239   */\n      eq\n        /* \"#utility.yul\":18197:18257   */\n      tag_591\n      jumpi\n        /* \"#utility.yul\":18253:18254   */\n      0x00\n        /* \"#utility.yul\":18250:18251   */\n      dup1\n        /* \"#utility.yul\":18243:18255   */\n      revert\n        /* \"#utility.yul\":18197:18257   */\n    tag_591:\n        /* \"#utility.yul\":18147:18263   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18269:18402   */\n    tag_368:\n        /* \"#utility.yul\":18312:18317   */\n      0x00\n        /* \"#utility.yul\":18350:18356   */\n      dup2\n        /* \"#utility.yul\":18337:18357   */\n      calldataload\n        /* \"#utility.yul\":18328:18357   */\n      swap1\n      pop\n        /* \"#utility.yul\":18366:18396   */\n      tag_593\n        /* \"#utility.yul\":18390:18395   */\n      dup2\n        /* \"#utility.yul\":18366:18396   */\n      tag_367\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":18269:18402   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18408:18876   */\n    tag_70:\n        /* \"#utility.yul\":18473:18479   */\n      0x00\n        /* \"#utility.yul\":18481:18487   */\n      dup1\n        /* \"#utility.yul\":18530:18532   */\n      0x40\n        /* \"#utility.yul\":18518:18527   */\n      dup4\n        /* \"#utility.yul\":18509:18516   */\n      dup6\n        /* \"#utility.yul\":18505:18528   */\n      sub\n        /* \"#utility.yul\":18501:18533   */\n      slt\n        /* \"#utility.yul\":18498:18617   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":18536:18615   */\n      tag_596\n      tag_321\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":18498:18617   */\n    tag_595:\n        /* \"#utility.yul\":18656:18657   */\n      0x00\n        /* \"#utility.yul\":18681:18734   */\n      tag_597\n        /* \"#utility.yul\":18726:18733   */\n      dup6\n        /* \"#utility.yul\":18717:18723   */\n      dup3\n        /* \"#utility.yul\":18706:18715   */\n      dup7\n        /* \"#utility.yul\":18702:18724   */\n      add\n        /* \"#utility.yul\":18681:18734   */\n      tag_326\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":18671:18734   */\n      swap3\n      pop\n        /* \"#utility.yul\":18627:18744   */\n      pop\n        /* \"#utility.yul\":18783:18785   */\n      0x20\n        /* \"#utility.yul\":18809:18859   */\n      tag_598\n        /* \"#utility.yul\":18851:18858   */\n      dup6\n        /* \"#utility.yul\":18842:18848   */\n      dup3\n        /* \"#utility.yul\":18831:18840   */\n      dup7\n        /* \"#utility.yul\":18827:18849   */\n      add\n        /* \"#utility.yul\":18809:18859   */\n      tag_368\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":18799:18859   */\n      swap2\n      pop\n        /* \"#utility.yul\":18754:18869   */\n      pop\n        /* \"#utility.yul\":18408:18876   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18882:19534   */\n    tag_74:\n        /* \"#utility.yul\":18959:18965   */\n      0x00\n        /* \"#utility.yul\":18967:18973   */\n      dup1\n        /* \"#utility.yul\":19016:19018   */\n      0x40\n        /* \"#utility.yul\":19004:19013   */\n      dup4\n        /* \"#utility.yul\":18995:19002   */\n      dup6\n        /* \"#utility.yul\":18991:19014   */\n      sub\n        /* \"#utility.yul\":18987:19019   */\n      slt\n        /* \"#utility.yul\":18984:19103   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":19022:19101   */\n      tag_601\n      tag_321\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":18984:19103   */\n    tag_600:\n        /* \"#utility.yul\":19142:19143   */\n      0x00\n        /* \"#utility.yul\":19167:19220   */\n      tag_602\n        /* \"#utility.yul\":19212:19219   */\n      dup6\n        /* \"#utility.yul\":19203:19209   */\n      dup3\n        /* \"#utility.yul\":19192:19201   */\n      dup7\n        /* \"#utility.yul\":19188:19210   */\n      add\n        /* \"#utility.yul\":19167:19220   */\n      tag_326\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":19157:19220   */\n      swap3\n      pop\n        /* \"#utility.yul\":19113:19230   */\n      pop\n        /* \"#utility.yul\":19297:19299   */\n      0x20\n        /* \"#utility.yul\":19286:19295   */\n      dup4\n        /* \"#utility.yul\":19282:19300   */\n      add\n        /* \"#utility.yul\":19269:19301   */\n      calldataload\n        /* \"#utility.yul\":19328:19346   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19320:19326   */\n      dup2\n        /* \"#utility.yul\":19317:19347   */\n      gt\n        /* \"#utility.yul\":19314:19431   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":19350:19429   */\n      tag_604\n      tag_322\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":19314:19431   */\n    tag_603:\n        /* \"#utility.yul\":19455:19517   */\n      tag_605\n        /* \"#utility.yul\":19509:19516   */\n      dup6\n        /* \"#utility.yul\":19500:19506   */\n      dup3\n        /* \"#utility.yul\":19489:19498   */\n      dup7\n        /* \"#utility.yul\":19485:19507   */\n      add\n        /* \"#utility.yul\":19455:19517   */\n      tag_355\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":19445:19517   */\n      swap2\n      pop\n        /* \"#utility.yul\":19240:19527   */\n      pop\n        /* \"#utility.yul\":18882:19534   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19540:20014   */\n    tag_78:\n        /* \"#utility.yul\":19608:19614   */\n      0x00\n        /* \"#utility.yul\":19616:19622   */\n      dup1\n        /* \"#utility.yul\":19665:19667   */\n      0x40\n        /* \"#utility.yul\":19653:19662   */\n      dup4\n        /* \"#utility.yul\":19644:19651   */\n      dup6\n        /* \"#utility.yul\":19640:19663   */\n      sub\n        /* \"#utility.yul\":19636:19668   */\n      slt\n        /* \"#utility.yul\":19633:19752   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":19671:19750   */\n      tag_608\n      tag_321\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":19633:19752   */\n    tag_607:\n        /* \"#utility.yul\":19791:19792   */\n      0x00\n        /* \"#utility.yul\":19816:19869   */\n      tag_609\n        /* \"#utility.yul\":19861:19868   */\n      dup6\n        /* \"#utility.yul\":19852:19858   */\n      dup3\n        /* \"#utility.yul\":19841:19850   */\n      dup7\n        /* \"#utility.yul\":19837:19859   */\n      add\n        /* \"#utility.yul\":19816:19869   */\n      tag_326\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":19806:19869   */\n      swap3\n      pop\n        /* \"#utility.yul\":19762:19879   */\n      pop\n        /* \"#utility.yul\":19918:19920   */\n      0x20\n        /* \"#utility.yul\":19944:19997   */\n      tag_610\n        /* \"#utility.yul\":19989:19996   */\n      dup6\n        /* \"#utility.yul\":19980:19986   */\n      dup3\n        /* \"#utility.yul\":19969:19978   */\n      dup7\n        /* \"#utility.yul\":19965:19987   */\n      add\n        /* \"#utility.yul\":19944:19997   */\n      tag_326\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":19934:19997   */\n      swap2\n      pop\n        /* \"#utility.yul\":19889:20007   */\n      pop\n        /* \"#utility.yul\":19540:20014   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20020:21109   */\n    tag_83:\n        /* \"#utility.yul\":20124:20130   */\n      0x00\n        /* \"#utility.yul\":20132:20138   */\n      dup1\n        /* \"#utility.yul\":20140:20146   */\n      0x00\n        /* \"#utility.yul\":20148:20154   */\n      dup1\n        /* \"#utility.yul\":20156:20162   */\n      0x00\n        /* \"#utility.yul\":20205:20208   */\n      0xa0\n        /* \"#utility.yul\":20193:20202   */\n      dup7\n        /* \"#utility.yul\":20184:20191   */\n      dup9\n        /* \"#utility.yul\":20180:20203   */\n      sub\n        /* \"#utility.yul\":20176:20209   */\n      slt\n        /* \"#utility.yul\":20173:20293   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":20212:20291   */\n      tag_613\n      tag_321\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":20173:20293   */\n    tag_612:\n        /* \"#utility.yul\":20332:20333   */\n      0x00\n        /* \"#utility.yul\":20357:20410   */\n      tag_614\n        /* \"#utility.yul\":20402:20409   */\n      dup9\n        /* \"#utility.yul\":20393:20399   */\n      dup3\n        /* \"#utility.yul\":20382:20391   */\n      dup10\n        /* \"#utility.yul\":20378:20400   */\n      add\n        /* \"#utility.yul\":20357:20410   */\n      tag_326\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20347:20410   */\n      swap6\n      pop\n        /* \"#utility.yul\":20303:20420   */\n      pop\n        /* \"#utility.yul\":20459:20461   */\n      0x20\n        /* \"#utility.yul\":20485:20538   */\n      tag_615\n        /* \"#utility.yul\":20530:20537   */\n      dup9\n        /* \"#utility.yul\":20521:20527   */\n      dup3\n        /* \"#utility.yul\":20510:20519   */\n      dup10\n        /* \"#utility.yul\":20506:20528   */\n      add\n        /* \"#utility.yul\":20485:20538   */\n      tag_326\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":20475:20538   */\n      swap5\n      pop\n        /* \"#utility.yul\":20430:20548   */\n      pop\n        /* \"#utility.yul\":20587:20589   */\n      0x40\n        /* \"#utility.yul\":20613:20666   */\n      tag_616\n        /* \"#utility.yul\":20658:20665   */\n      dup9\n        /* \"#utility.yul\":20649:20655   */\n      dup3\n        /* \"#utility.yul\":20638:20647   */\n      dup10\n        /* \"#utility.yul\":20634:20656   */\n      add\n        /* \"#utility.yul\":20613:20666   */\n      tag_329\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":20603:20666   */\n      swap4\n      pop\n        /* \"#utility.yul\":20558:20676   */\n      pop\n        /* \"#utility.yul\":20715:20717   */\n      0x60\n        /* \"#utility.yul\":20741:20794   */\n      tag_617\n        /* \"#utility.yul\":20786:20793   */\n      dup9\n        /* \"#utility.yul\":20777:20783   */\n      dup3\n        /* \"#utility.yul\":20766:20775   */\n      dup10\n        /* \"#utility.yul\":20762:20784   */\n      add\n        /* \"#utility.yul\":20741:20794   */\n      tag_329\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":20731:20794   */\n      swap3\n      pop\n        /* \"#utility.yul\":20686:20804   */\n      pop\n        /* \"#utility.yul\":20871:20874   */\n      0x80\n        /* \"#utility.yul\":20860:20869   */\n      dup7\n        /* \"#utility.yul\":20856:20875   */\n      add\n        /* \"#utility.yul\":20843:20876   */\n      calldataload\n        /* \"#utility.yul\":20903:20921   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20895:20901   */\n      dup2\n        /* \"#utility.yul\":20892:20922   */\n      gt\n        /* \"#utility.yul\":20889:21006   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":20925:21004   */\n      tag_619\n      tag_322\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":20889:21006   */\n    tag_618:\n        /* \"#utility.yul\":21030:21092   */\n      tag_620\n        /* \"#utility.yul\":21084:21091   */\n      dup9\n        /* \"#utility.yul\":21075:21081   */\n      dup3\n        /* \"#utility.yul\":21064:21073   */\n      dup10\n        /* \"#utility.yul\":21060:21082   */\n      add\n        /* \"#utility.yul\":21030:21092   */\n      tag_355\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":21020:21092   */\n      swap2\n      pop\n        /* \"#utility.yul\":20814:21102   */\n      pop\n        /* \"#utility.yul\":20020:21109   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21115:21444   */\n    tag_87:\n        /* \"#utility.yul\":21174:21180   */\n      0x00\n        /* \"#utility.yul\":21223:21225   */\n      0x20\n        /* \"#utility.yul\":21211:21220   */\n      dup3\n        /* \"#utility.yul\":21202:21209   */\n      dup5\n        /* \"#utility.yul\":21198:21221   */\n      sub\n        /* \"#utility.yul\":21194:21226   */\n      slt\n        /* \"#utility.yul\":21191:21310   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":21229:21308   */\n      tag_623\n      tag_321\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":21191:21310   */\n    tag_622:\n        /* \"#utility.yul\":21349:21350   */\n      0x00\n        /* \"#utility.yul\":21374:21427   */\n      tag_624\n        /* \"#utility.yul\":21419:21426   */\n      dup5\n        /* \"#utility.yul\":21410:21416   */\n      dup3\n        /* \"#utility.yul\":21399:21408   */\n      dup6\n        /* \"#utility.yul\":21395:21417   */\n      add\n        /* \"#utility.yul\":21374:21427   */\n      tag_326\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":21364:21427   */\n      swap2\n      pop\n        /* \"#utility.yul\":21320:21437   */\n      pop\n        /* \"#utility.yul\":21115:21444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21450:22069   */\n    tag_91:\n        /* \"#utility.yul\":21527:21533   */\n      0x00\n        /* \"#utility.yul\":21535:21541   */\n      dup1\n        /* \"#utility.yul\":21543:21549   */\n      0x00\n        /* \"#utility.yul\":21592:21594   */\n      0x60\n        /* \"#utility.yul\":21580:21589   */\n      dup5\n        /* \"#utility.yul\":21571:21578   */\n      dup7\n        /* \"#utility.yul\":21567:21590   */\n      sub\n        /* \"#utility.yul\":21563:21595   */\n      slt\n        /* \"#utility.yul\":21560:21679   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":21598:21677   */\n      tag_627\n      tag_321\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":21560:21679   */\n    tag_626:\n        /* \"#utility.yul\":21718:21719   */\n      0x00\n        /* \"#utility.yul\":21743:21796   */\n      tag_628\n        /* \"#utility.yul\":21788:21795   */\n      dup7\n        /* \"#utility.yul\":21779:21785   */\n      dup3\n        /* \"#utility.yul\":21768:21777   */\n      dup8\n        /* \"#utility.yul\":21764:21786   */\n      add\n        /* \"#utility.yul\":21743:21796   */\n      tag_326\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":21733:21796   */\n      swap4\n      pop\n        /* \"#utility.yul\":21689:21806   */\n      pop\n        /* \"#utility.yul\":21845:21847   */\n      0x20\n        /* \"#utility.yul\":21871:21924   */\n      tag_629\n        /* \"#utility.yul\":21916:21923   */\n      dup7\n        /* \"#utility.yul\":21907:21913   */\n      dup3\n        /* \"#utility.yul\":21896:21905   */\n      dup8\n        /* \"#utility.yul\":21892:21914   */\n      add\n        /* \"#utility.yul\":21871:21924   */\n      tag_329\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":21861:21924   */\n      swap3\n      pop\n        /* \"#utility.yul\":21816:21934   */\n      pop\n        /* \"#utility.yul\":21973:21975   */\n      0x40\n        /* \"#utility.yul\":21999:22052   */\n      tag_630\n        /* \"#utility.yul\":22044:22051   */\n      dup7\n        /* \"#utility.yul\":22035:22041   */\n      dup3\n        /* \"#utility.yul\":22024:22033   */\n      dup8\n        /* \"#utility.yul\":22020:22042   */\n      add\n        /* \"#utility.yul\":21999:22052   */\n      tag_329\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":21989:22052   */\n      swap2\n      pop\n        /* \"#utility.yul\":21944:22062   */\n      pop\n        /* \"#utility.yul\":21450:22069   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":22075:22255   */\n    tag_369:\n        /* \"#utility.yul\":22123:22200   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22120:22121   */\n      0x00\n        /* \"#utility.yul\":22113:22201   */\n      mstore\n        /* \"#utility.yul\":22220:22224   */\n      0x22\n        /* \"#utility.yul\":22217:22218   */\n      0x04\n        /* \"#utility.yul\":22210:22225   */\n      mstore\n        /* \"#utility.yul\":22244:22248   */\n      0x24\n        /* \"#utility.yul\":22241:22242   */\n      0x00\n        /* \"#utility.yul\":22234:22249   */\n      revert\n        /* \"#utility.yul\":22261:22581   */\n    tag_107:\n        /* \"#utility.yul\":22305:22311   */\n      0x00\n        /* \"#utility.yul\":22342:22343   */\n      0x02\n        /* \"#utility.yul\":22336:22340   */\n      dup3\n        /* \"#utility.yul\":22332:22344   */\n      div\n        /* \"#utility.yul\":22322:22344   */\n      swap1\n      pop\n        /* \"#utility.yul\":22389:22390   */\n      0x01\n        /* \"#utility.yul\":22383:22387   */\n      dup3\n        /* \"#utility.yul\":22379:22391   */\n      and\n        /* \"#utility.yul\":22410:22428   */\n      dup1\n        /* \"#utility.yul\":22400:22481   */\n      tag_633\n      jumpi\n        /* \"#utility.yul\":22466:22470   */\n      0x7f\n        /* \"#utility.yul\":22458:22464   */\n      dup3\n        /* \"#utility.yul\":22454:22471   */\n      and\n        /* \"#utility.yul\":22444:22471   */\n      swap2\n      pop\n        /* \"#utility.yul\":22400:22481   */\n    tag_633:\n        /* \"#utility.yul\":22528:22530   */\n      0x20\n        /* \"#utility.yul\":22520:22526   */\n      dup3\n        /* \"#utility.yul\":22517:22531   */\n      lt\n        /* \"#utility.yul\":22497:22515   */\n      dup2\n        /* \"#utility.yul\":22494:22532   */\n      sub\n        /* \"#utility.yul\":22491:22575   */\n      tag_634\n      jumpi\n        /* \"#utility.yul\":22547:22565   */\n      tag_635\n      tag_369\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":22491:22575   */\n    tag_634:\n        /* \"#utility.yul\":22312:22581   */\n      pop\n        /* \"#utility.yul\":22261:22581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22587:22919   */\n    tag_119:\n        /* \"#utility.yul\":22708:22712   */\n      0x00\n        /* \"#utility.yul\":22746:22748   */\n      0x40\n        /* \"#utility.yul\":22735:22744   */\n      dup3\n        /* \"#utility.yul\":22731:22749   */\n      add\n        /* \"#utility.yul\":22723:22749   */\n      swap1\n      pop\n        /* \"#utility.yul\":22759:22830   */\n      tag_637\n        /* \"#utility.yul\":22827:22828   */\n      0x00\n        /* \"#utility.yul\":22816:22825   */\n      dup4\n        /* \"#utility.yul\":22812:22829   */\n      add\n        /* \"#utility.yul\":22803:22809   */\n      dup6\n        /* \"#utility.yul\":22759:22830   */\n      tag_366\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":22840:22912   */\n      tag_638\n        /* \"#utility.yul\":22908:22910   */\n      0x20\n        /* \"#utility.yul\":22897:22906   */\n      dup4\n        /* \"#utility.yul\":22893:22911   */\n      add\n        /* \"#utility.yul\":22884:22890   */\n      dup5\n        /* \"#utility.yul\":22840:22912   */\n      tag_366\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":22587:22919   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22925:23257   */\n    tag_132:\n        /* \"#utility.yul\":23046:23050   */\n      0x00\n        /* \"#utility.yul\":23084:23086   */\n      0x40\n        /* \"#utility.yul\":23073:23082   */\n      dup3\n        /* \"#utility.yul\":23069:23087   */\n      add\n        /* \"#utility.yul\":23061:23087   */\n      swap1\n      pop\n        /* \"#utility.yul\":23097:23168   */\n      tag_640\n        /* \"#utility.yul\":23165:23166   */\n      0x00\n        /* \"#utility.yul\":23154:23163   */\n      dup4\n        /* \"#utility.yul\":23150:23167   */\n      add\n        /* \"#utility.yul\":23141:23147   */\n      dup6\n        /* \"#utility.yul\":23097:23168   */\n      tag_330\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":23178:23250   */\n      tag_641\n        /* \"#utility.yul\":23246:23248   */\n      0x20\n        /* \"#utility.yul\":23235:23244   */\n      dup4\n        /* \"#utility.yul\":23231:23249   */\n      add\n        /* \"#utility.yul\":23222:23228   */\n      dup5\n        /* \"#utility.yul\":23178:23250   */\n      tag_330\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":22925:23257   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23263:23443   */\n    tag_147:\n        /* \"#utility.yul\":23311:23388   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23308:23309   */\n      0x00\n        /* \"#utility.yul\":23301:23389   */\n      mstore\n        /* \"#utility.yul\":23408:23412   */\n      0x32\n        /* \"#utility.yul\":23405:23406   */\n      0x04\n        /* \"#utility.yul\":23398:23413   */\n      mstore\n        /* \"#utility.yul\":23432:23436   */\n      0x24\n        /* \"#utility.yul\":23429:23430   */\n      0x00\n        /* \"#utility.yul\":23422:23437   */\n      revert\n        /* \"#utility.yul\":23449:23629   */\n    tag_370:\n        /* \"#utility.yul\":23497:23574   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23494:23495   */\n      0x00\n        /* \"#utility.yul\":23487:23575   */\n      mstore\n        /* \"#utility.yul\":23594:23598   */\n      0x11\n        /* \"#utility.yul\":23591:23592   */\n      0x04\n        /* \"#utility.yul\":23584:23599   */\n      mstore\n        /* \"#utility.yul\":23618:23622   */\n      0x24\n        /* \"#utility.yul\":23615:23616   */\n      0x00\n        /* \"#utility.yul\":23608:23623   */\n      revert\n        /* \"#utility.yul\":23635:23826   */\n    tag_174:\n        /* \"#utility.yul\":23675:23678   */\n      0x00\n        /* \"#utility.yul\":23694:23714   */\n      tag_645\n        /* \"#utility.yul\":23712:23713   */\n      dup3\n        /* \"#utility.yul\":23694:23714   */\n      tag_327\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":23689:23714   */\n      swap2\n      pop\n        /* \"#utility.yul\":23728:23748   */\n      tag_646\n        /* \"#utility.yul\":23746:23747   */\n      dup4\n        /* \"#utility.yul\":23728:23748   */\n      tag_327\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":23723:23748   */\n      swap3\n      pop\n        /* \"#utility.yul\":23771:23772   */\n      dup3\n        /* \"#utility.yul\":23768:23769   */\n      dup3\n        /* \"#utility.yul\":23764:23773   */\n      add\n        /* \"#utility.yul\":23757:23773   */\n      swap1\n      pop\n        /* \"#utility.yul\":23792:23795   */\n      dup1\n        /* \"#utility.yul\":23789:23790   */\n      dup3\n        /* \"#utility.yul\":23786:23796   */\n      gt\n        /* \"#utility.yul\":23783:23819   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":23799:23817   */\n      tag_648\n      tag_370\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":23783:23819   */\n    tag_647:\n        /* \"#utility.yul\":23635:23826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23832:23973   */\n    tag_371:\n        /* \"#utility.yul\":23881:23885   */\n      0x00\n        /* \"#utility.yul\":23904:23907   */\n      dup2\n        /* \"#utility.yul\":23896:23907   */\n      swap1\n      pop\n        /* \"#utility.yul\":23927:23930   */\n      dup2\n        /* \"#utility.yul\":23924:23925   */\n      0x00\n        /* \"#utility.yul\":23917:23931   */\n      mstore\n        /* \"#utility.yul\":23961:23965   */\n      0x20\n        /* \"#utility.yul\":23958:23959   */\n      0x00\n        /* \"#utility.yul\":23948:23966   */\n      keccak256\n        /* \"#utility.yul\":23940:23966   */\n      swap1\n      pop\n        /* \"#utility.yul\":23832:23973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23979:24072   */\n    tag_372:\n        /* \"#utility.yul\":24016:24022   */\n      0x00\n        /* \"#utility.yul\":24063:24065   */\n      0x20\n        /* \"#utility.yul\":24058:24060   */\n      0x1f\n        /* \"#utility.yul\":24051:24056   */\n      dup4\n        /* \"#utility.yul\":24047:24061   */\n      add\n        /* \"#utility.yul\":24043:24066   */\n      div\n        /* \"#utility.yul\":24033:24066   */\n      swap1\n      pop\n        /* \"#utility.yul\":23979:24072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24078:24185   */\n    tag_373:\n        /* \"#utility.yul\":24122:24130   */\n      0x00\n        /* \"#utility.yul\":24172:24177   */\n      dup3\n        /* \"#utility.yul\":24166:24170   */\n      dup3\n        /* \"#utility.yul\":24162:24178   */\n      shl\n        /* \"#utility.yul\":24141:24178   */\n      swap1\n      pop\n        /* \"#utility.yul\":24078:24185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24191:24584   */\n    tag_374:\n        /* \"#utility.yul\":24260:24266   */\n      0x00\n        /* \"#utility.yul\":24310:24311   */\n      0x08\n        /* \"#utility.yul\":24298:24308   */\n      dup4\n        /* \"#utility.yul\":24294:24312   */\n      mul\n        /* \"#utility.yul\":24333:24430   */\n      tag_653\n        /* \"#utility.yul\":24363:24429   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24352:24361   */\n      dup3\n        /* \"#utility.yul\":24333:24430   */\n      tag_373\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":24451:24490   */\n      tag_654\n        /* \"#utility.yul\":24481:24489   */\n      dup7\n        /* \"#utility.yul\":24470:24479   */\n      dup4\n        /* \"#utility.yul\":24451:24490   */\n      tag_373\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":24439:24490   */\n      swap6\n      pop\n        /* \"#utility.yul\":24523:24527   */\n      dup1\n        /* \"#utility.yul\":24519:24528   */\n      not\n        /* \"#utility.yul\":24512:24517   */\n      dup5\n        /* \"#utility.yul\":24508:24529   */\n      and\n        /* \"#utility.yul\":24499:24529   */\n      swap4\n      pop\n        /* \"#utility.yul\":24572:24576   */\n      dup1\n        /* \"#utility.yul\":24562:24570   */\n      dup7\n        /* \"#utility.yul\":24558:24577   */\n      and\n        /* \"#utility.yul\":24551:24556   */\n      dup5\n        /* \"#utility.yul\":24548:24578   */\n      or\n        /* \"#utility.yul\":24538:24578   */\n      swap3\n      pop\n        /* \"#utility.yul\":24267:24584   */\n      pop\n      pop\n        /* \"#utility.yul\":24191:24584   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24590:24650   */\n    tag_375:\n        /* \"#utility.yul\":24618:24621   */\n      0x00\n        /* \"#utility.yul\":24639:24644   */\n      dup2\n        /* \"#utility.yul\":24632:24644   */\n      swap1\n      pop\n        /* \"#utility.yul\":24590:24650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24656:24798   */\n    tag_376:\n        /* \"#utility.yul\":24706:24715   */\n      0x00\n        /* \"#utility.yul\":24739:24792   */\n      tag_657\n        /* \"#utility.yul\":24757:24791   */\n      tag_658\n        /* \"#utility.yul\":24766:24790   */\n      tag_659\n        /* \"#utility.yul\":24784:24789   */\n      dup5\n        /* \"#utility.yul\":24766:24790   */\n      tag_327\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":24757:24791   */\n      tag_375\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":24739:24792   */\n      tag_327\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":24726:24792   */\n      swap1\n      pop\n        /* \"#utility.yul\":24656:24798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24804:24879   */\n    tag_377:\n        /* \"#utility.yul\":24847:24850   */\n      0x00\n        /* \"#utility.yul\":24868:24873   */\n      dup2\n        /* \"#utility.yul\":24861:24873   */\n      swap1\n      pop\n        /* \"#utility.yul\":24804:24879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24885:25154   */\n    tag_378:\n        /* \"#utility.yul\":24995:25034   */\n      tag_662\n        /* \"#utility.yul\":25026:25033   */\n      dup4\n        /* \"#utility.yul\":24995:25034   */\n      tag_376\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":25056:25147   */\n      tag_663\n        /* \"#utility.yul\":25105:25146   */\n      tag_664\n        /* \"#utility.yul\":25129:25145   */\n      dup3\n        /* \"#utility.yul\":25105:25146   */\n      tag_377\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":25097:25103   */\n      dup5\n        /* \"#utility.yul\":25090:25094   */\n      dup5\n        /* \"#utility.yul\":25084:25095   */\n      sload\n        /* \"#utility.yul\":25056:25147   */\n      tag_374\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":25050:25054   */\n      dup3\n        /* \"#utility.yul\":25043:25148   */\n      sstore\n        /* \"#utility.yul\":24961:25154   */\n      pop\n        /* \"#utility.yul\":24885:25154   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25160:25233   */\n    tag_379:\n        /* \"#utility.yul\":25205:25208   */\n      0x00\n        /* \"#utility.yul\":25160:25233   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":25239:25428   */\n    tag_380:\n        /* \"#utility.yul\":25316:25348   */\n      tag_667\n      tag_379\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":25357:25422   */\n      tag_668\n        /* \"#utility.yul\":25415:25421   */\n      dup2\n        /* \"#utility.yul\":25407:25413   */\n      dup5\n        /* \"#utility.yul\":25401:25405   */\n      dup5\n        /* \"#utility.yul\":25357:25422   */\n      tag_378\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":25292:25428   */\n      pop\n        /* \"#utility.yul\":25239:25428   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25434:25620   */\n    tag_381:\n        /* \"#utility.yul\":25494:25614   */\n    tag_670:\n        /* \"#utility.yul\":25511:25514   */\n      dup2\n        /* \"#utility.yul\":25504:25509   */\n      dup2\n        /* \"#utility.yul\":25501:25515   */\n      lt\n        /* \"#utility.yul\":25494:25614   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":25565:25604   */\n      tag_673\n        /* \"#utility.yul\":25602:25603   */\n      0x00\n        /* \"#utility.yul\":25595:25600   */\n      dup3\n        /* \"#utility.yul\":25565:25604   */\n      tag_380\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":25538:25539   */\n      0x01\n        /* \"#utility.yul\":25531:25536   */\n      dup2\n        /* \"#utility.yul\":25527:25540   */\n      add\n        /* \"#utility.yul\":25518:25540   */\n      swap1\n      pop\n        /* \"#utility.yul\":25494:25614   */\n      jump(tag_670)\n    tag_672:\n        /* \"#utility.yul\":25434:25620   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25626:26169   */\n    tag_382:\n        /* \"#utility.yul\":25727:25729   */\n      0x1f\n        /* \"#utility.yul\":25722:25725   */\n      dup3\n        /* \"#utility.yul\":25719:25730   */\n      gt\n        /* \"#utility.yul\":25716:26162   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":25761:25799   */\n      tag_676\n        /* \"#utility.yul\":25793:25798   */\n      dup2\n        /* \"#utility.yul\":25761:25799   */\n      tag_371\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":25845:25874   */\n      tag_677\n        /* \"#utility.yul\":25863:25873   */\n      dup5\n        /* \"#utility.yul\":25845:25874   */\n      tag_372\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":25835:25843   */\n      dup2\n        /* \"#utility.yul\":25831:25875   */\n      add\n        /* \"#utility.yul\":26028:26030   */\n      0x20\n        /* \"#utility.yul\":26016:26026   */\n      dup6\n        /* \"#utility.yul\":26013:26031   */\n      lt\n        /* \"#utility.yul\":26010:26059   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":26049:26057   */\n      dup2\n        /* \"#utility.yul\":26034:26057   */\n      swap1\n      pop\n        /* \"#utility.yul\":26010:26059   */\n    tag_678:\n        /* \"#utility.yul\":26072:26152   */\n      tag_679\n        /* \"#utility.yul\":26128:26150   */\n      tag_680\n        /* \"#utility.yul\":26146:26149   */\n      dup6\n        /* \"#utility.yul\":26128:26150   */\n      tag_372\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":26118:26126   */\n      dup4\n        /* \"#utility.yul\":26114:26151   */\n      add\n        /* \"#utility.yul\":26101:26112   */\n      dup3\n        /* \"#utility.yul\":26072:26152   */\n      tag_381\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":25731:26162   */\n      pop\n      pop\n        /* \"#utility.yul\":25716:26162   */\n    tag_675:\n        /* \"#utility.yul\":25626:26169   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26175:26292   */\n    tag_383:\n        /* \"#utility.yul\":26229:26237   */\n      0x00\n        /* \"#utility.yul\":26279:26284   */\n      dup3\n        /* \"#utility.yul\":26273:26277   */\n      dup3\n        /* \"#utility.yul\":26269:26285   */\n      shr\n        /* \"#utility.yul\":26248:26285   */\n      swap1\n      pop\n        /* \"#utility.yul\":26175:26292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26298:26467   */\n    tag_384:\n        /* \"#utility.yul\":26342:26348   */\n      0x00\n        /* \"#utility.yul\":26375:26426   */\n      tag_683\n        /* \"#utility.yul\":26423:26424   */\n      0x00\n        /* \"#utility.yul\":26419:26425   */\n      not\n        /* \"#utility.yul\":26411:26416   */\n      dup5\n        /* \"#utility.yul\":26408:26409   */\n      0x08\n        /* \"#utility.yul\":26404:26417   */\n      mul\n        /* \"#utility.yul\":26375:26426   */\n      tag_383\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":26371:26427   */\n      not\n        /* \"#utility.yul\":26456:26460   */\n      dup1\n        /* \"#utility.yul\":26450:26454   */\n      dup4\n        /* \"#utility.yul\":26446:26461   */\n      and\n        /* \"#utility.yul\":26436:26461   */\n      swap2\n      pop\n        /* \"#utility.yul\":26349:26467   */\n      pop\n        /* \"#utility.yul\":26298:26467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26472:26767   */\n    tag_385:\n        /* \"#utility.yul\":26548:26552   */\n      0x00\n        /* \"#utility.yul\":26694:26723   */\n      tag_685\n        /* \"#utility.yul\":26719:26722   */\n      dup4\n        /* \"#utility.yul\":26713:26717   */\n      dup4\n        /* \"#utility.yul\":26694:26723   */\n      tag_384\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":26686:26723   */\n      swap2\n      pop\n        /* \"#utility.yul\":26756:26759   */\n      dup3\n        /* \"#utility.yul\":26753:26754   */\n      0x02\n        /* \"#utility.yul\":26749:26760   */\n      mul\n        /* \"#utility.yul\":26743:26747   */\n      dup3\n        /* \"#utility.yul\":26740:26761   */\n      or\n        /* \"#utility.yul\":26732:26761   */\n      swap1\n      pop\n        /* \"#utility.yul\":26472:26767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26772:28167   */\n    tag_209:\n        /* \"#utility.yul\":26889:26926   */\n      tag_687\n        /* \"#utility.yul\":26922:26925   */\n      dup3\n        /* \"#utility.yul\":26889:26926   */\n      tag_345\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":26991:27009   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":26983:26989   */\n      dup2\n        /* \"#utility.yul\":26980:27010   */\n      gt\n        /* \"#utility.yul\":26977:27033   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":27013:27031   */\n      tag_689\n      tag_135\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":26977:27033   */\n    tag_688:\n        /* \"#utility.yul\":27057:27095   */\n      tag_690\n        /* \"#utility.yul\":27089:27093   */\n      dup3\n        /* \"#utility.yul\":27083:27094   */\n      sload\n        /* \"#utility.yul\":27057:27095   */\n      tag_107\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":27142:27209   */\n      tag_691\n        /* \"#utility.yul\":27202:27208   */\n      dup3\n        /* \"#utility.yul\":27194:27200   */\n      dup3\n        /* \"#utility.yul\":27188:27192   */\n      dup6\n        /* \"#utility.yul\":27142:27209   */\n      tag_382\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":27236:27237   */\n      0x00\n        /* \"#utility.yul\":27260:27264   */\n      0x20\n        /* \"#utility.yul\":27247:27264   */\n      swap1\n      pop\n        /* \"#utility.yul\":27292:27294   */\n      0x1f\n        /* \"#utility.yul\":27284:27290   */\n      dup4\n        /* \"#utility.yul\":27281:27295   */\n      gt\n        /* \"#utility.yul\":27309:27310   */\n      0x01\n        /* \"#utility.yul\":27304:27922   */\n      dup2\n      eq\n      tag_693\n      jumpi\n        /* \"#utility.yul\":27966:27967   */\n      0x00\n        /* \"#utility.yul\":27983:27989   */\n      dup5\n        /* \"#utility.yul\":27980:28057   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":28032:28041   */\n      dup3\n        /* \"#utility.yul\":28027:28030   */\n      dup8\n        /* \"#utility.yul\":28023:28042   */\n      add\n        /* \"#utility.yul\":28017:28043   */\n      mload\n        /* \"#utility.yul\":28008:28043   */\n      swap1\n      pop\n        /* \"#utility.yul\":27980:28057   */\n    tag_694:\n        /* \"#utility.yul\":28083:28150   */\n      tag_695\n        /* \"#utility.yul\":28143:28149   */\n      dup6\n        /* \"#utility.yul\":28136:28141   */\n      dup3\n        /* \"#utility.yul\":28083:28150   */\n      tag_385\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":28077:28081   */\n      dup7\n        /* \"#utility.yul\":28070:28151   */\n      sstore\n        /* \"#utility.yul\":27939:28161   */\n      pop\n        /* \"#utility.yul\":27274:28161   */\n      jump(tag_692)\n        /* \"#utility.yul\":27304:27922   */\n    tag_693:\n        /* \"#utility.yul\":27356:27360   */\n      0x1f\n        /* \"#utility.yul\":27352:27361   */\n      not\n        /* \"#utility.yul\":27344:27350   */\n      dup5\n        /* \"#utility.yul\":27340:27362   */\n      and\n        /* \"#utility.yul\":27390:27427   */\n      tag_696\n        /* \"#utility.yul\":27422:27426   */\n      dup7\n        /* \"#utility.yul\":27390:27427   */\n      tag_371\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":27449:27450   */\n      0x00\n        /* \"#utility.yul\":27463:27671   */\n    tag_697:\n        /* \"#utility.yul\":27477:27484   */\n      dup3\n        /* \"#utility.yul\":27474:27475   */\n      dup2\n        /* \"#utility.yul\":27471:27485   */\n      lt\n        /* \"#utility.yul\":27463:27671   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":27556:27565   */\n      dup5\n        /* \"#utility.yul\":27551:27554   */\n      dup10\n        /* \"#utility.yul\":27547:27566   */\n      add\n        /* \"#utility.yul\":27541:27567   */\n      mload\n        /* \"#utility.yul\":27533:27539   */\n      dup3\n        /* \"#utility.yul\":27526:27568   */\n      sstore\n        /* \"#utility.yul\":27607:27608   */\n      0x01\n        /* \"#utility.yul\":27599:27605   */\n      dup3\n        /* \"#utility.yul\":27595:27609   */\n      add\n        /* \"#utility.yul\":27585:27609   */\n      swap2\n      pop\n        /* \"#utility.yul\":27654:27656   */\n      0x20\n        /* \"#utility.yul\":27643:27652   */\n      dup6\n        /* \"#utility.yul\":27639:27657   */\n      add\n        /* \"#utility.yul\":27626:27657   */\n      swap5\n      pop\n        /* \"#utility.yul\":27500:27504   */\n      0x20\n        /* \"#utility.yul\":27497:27498   */\n      dup2\n        /* \"#utility.yul\":27493:27505   */\n      add\n        /* \"#utility.yul\":27488:27505   */\n      swap1\n      pop\n        /* \"#utility.yul\":27463:27671   */\n      jump(tag_697)\n    tag_699:\n        /* \"#utility.yul\":27699:27705   */\n      dup7\n        /* \"#utility.yul\":27690:27697   */\n      dup4\n        /* \"#utility.yul\":27687:27706   */\n      lt\n        /* \"#utility.yul\":27684:27863   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":27757:27766   */\n      dup5\n        /* \"#utility.yul\":27752:27755   */\n      dup10\n        /* \"#utility.yul\":27748:27767   */\n      add\n        /* \"#utility.yul\":27742:27768   */\n      mload\n        /* \"#utility.yul\":27800:27848   */\n      tag_701\n        /* \"#utility.yul\":27842:27846   */\n      0x1f\n        /* \"#utility.yul\":27834:27840   */\n      dup10\n        /* \"#utility.yul\":27830:27847   */\n      and\n        /* \"#utility.yul\":27819:27828   */\n      dup3\n        /* \"#utility.yul\":27800:27848   */\n      tag_384\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":27792:27798   */\n      dup4\n        /* \"#utility.yul\":27785:27849   */\n      sstore\n        /* \"#utility.yul\":27707:27863   */\n      pop\n        /* \"#utility.yul\":27684:27863   */\n    tag_700:\n        /* \"#utility.yul\":27909:27910   */\n      0x01\n        /* \"#utility.yul\":27905:27906   */\n      0x02\n        /* \"#utility.yul\":27897:27903   */\n      dup9\n        /* \"#utility.yul\":27893:27907   */\n      mul\n        /* \"#utility.yul\":27889:27911   */\n      add\n        /* \"#utility.yul\":27883:27887   */\n      dup9\n        /* \"#utility.yul\":27876:27912   */\n      sstore\n        /* \"#utility.yul\":27311:27922   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27274:28161   */\n    tag_692:\n      pop\n        /* \"#utility.yul\":26864:28167   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":26772:28167   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28173:28726   */\n    tag_273:\n        /* \"#utility.yul\":28350:28354   */\n      0x00\n        /* \"#utility.yul\":28388:28391   */\n      0x80\n        /* \"#utility.yul\":28377:28386   */\n      dup3\n        /* \"#utility.yul\":28373:28392   */\n      add\n        /* \"#utility.yul\":28365:28392   */\n      swap1\n      pop\n        /* \"#utility.yul\":28402:28473   */\n      tag_703\n        /* \"#utility.yul\":28470:28471   */\n      0x00\n        /* \"#utility.yul\":28459:28468   */\n      dup4\n        /* \"#utility.yul\":28455:28472   */\n      add\n        /* \"#utility.yul\":28446:28452   */\n      dup8\n        /* \"#utility.yul\":28402:28473   */\n      tag_366\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":28483:28555   */\n      tag_704\n        /* \"#utility.yul\":28551:28553   */\n      0x20\n        /* \"#utility.yul\":28540:28549   */\n      dup4\n        /* \"#utility.yul\":28536:28554   */\n      add\n        /* \"#utility.yul\":28527:28533   */\n      dup7\n        /* \"#utility.yul\":28483:28555   */\n      tag_330\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":28565:28637   */\n      tag_705\n        /* \"#utility.yul\":28633:28635   */\n      0x40\n        /* \"#utility.yul\":28622:28631   */\n      dup4\n        /* \"#utility.yul\":28618:28636   */\n      add\n        /* \"#utility.yul\":28609:28615   */\n      dup6\n        /* \"#utility.yul\":28565:28637   */\n      tag_330\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":28647:28719   */\n      tag_706\n        /* \"#utility.yul\":28715:28717   */\n      0x60\n        /* \"#utility.yul\":28704:28713   */\n      dup4\n        /* \"#utility.yul\":28700:28718   */\n      add\n        /* \"#utility.yul\":28691:28697   */\n      dup5\n        /* \"#utility.yul\":28647:28719   */\n      tag_330\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":28173:28726   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28732:29366   */\n    tag_282:\n        /* \"#utility.yul\":28953:28957   */\n      0x00\n        /* \"#utility.yul\":28991:28993   */\n      0x40\n        /* \"#utility.yul\":28980:28989   */\n      dup3\n        /* \"#utility.yul\":28976:28994   */\n      add\n        /* \"#utility.yul\":28968:28994   */\n      swap1\n      pop\n        /* \"#utility.yul\":29040:29049   */\n      dup2\n        /* \"#utility.yul\":29034:29038   */\n      dup2\n        /* \"#utility.yul\":29030:29050   */\n      sub\n        /* \"#utility.yul\":29026:29027   */\n      0x00\n        /* \"#utility.yul\":29015:29024   */\n      dup4\n        /* \"#utility.yul\":29011:29028   */\n      add\n        /* \"#utility.yul\":29004:29051   */\n      mstore\n        /* \"#utility.yul\":29068:29176   */\n      tag_708\n        /* \"#utility.yul\":29171:29175   */\n      dup2\n        /* \"#utility.yul\":29162:29168   */\n      dup6\n        /* \"#utility.yul\":29068:29176   */\n      tag_365\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":29060:29176   */\n      swap1\n      pop\n        /* \"#utility.yul\":29223:29232   */\n      dup2\n        /* \"#utility.yul\":29217:29221   */\n      dup2\n        /* \"#utility.yul\":29213:29233   */\n      sub\n        /* \"#utility.yul\":29208:29210   */\n      0x20\n        /* \"#utility.yul\":29197:29206   */\n      dup4\n        /* \"#utility.yul\":29193:29211   */\n      add\n        /* \"#utility.yul\":29186:29234   */\n      mstore\n        /* \"#utility.yul\":29251:29359   */\n      tag_709\n        /* \"#utility.yul\":29354:29358   */\n      dup2\n        /* \"#utility.yul\":29345:29351   */\n      dup5\n        /* \"#utility.yul\":29251:29359   */\n      tag_365\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":29243:29359   */\n      swap1\n      pop\n        /* \"#utility.yul\":28732:29366   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29372:29470   */\n    tag_386:\n        /* \"#utility.yul\":29423:29429   */\n      0x00\n        /* \"#utility.yul\":29457:29462   */\n      dup2\n        /* \"#utility.yul\":29451:29463   */\n      mload\n        /* \"#utility.yul\":29441:29463   */\n      swap1\n      pop\n        /* \"#utility.yul\":29372:29470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29476:29644   */\n    tag_387:\n        /* \"#utility.yul\":29559:29570   */\n      0x00\n        /* \"#utility.yul\":29593:29599   */\n      dup3\n        /* \"#utility.yul\":29588:29591   */\n      dup3\n        /* \"#utility.yul\":29581:29600   */\n      mstore\n        /* \"#utility.yul\":29633:29637   */\n      0x20\n        /* \"#utility.yul\":29628:29631   */\n      dup3\n        /* \"#utility.yul\":29624:29638   */\n      add\n        /* \"#utility.yul\":29609:29638   */\n      swap1\n      pop\n        /* \"#utility.yul\":29476:29644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29650:30023   */\n    tag_388:\n        /* \"#utility.yul\":29736:29739   */\n      0x00\n        /* \"#utility.yul\":29764:29802   */\n      tag_713\n        /* \"#utility.yul\":29796:29801   */\n      dup3\n        /* \"#utility.yul\":29764:29802   */\n      tag_386\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":29818:29888   */\n      tag_714\n        /* \"#utility.yul\":29881:29887   */\n      dup2\n        /* \"#utility.yul\":29876:29879   */\n      dup6\n        /* \"#utility.yul\":29818:29888   */\n      tag_387\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":29811:29888   */\n      swap4\n      pop\n        /* \"#utility.yul\":29897:29962   */\n      tag_715\n        /* \"#utility.yul\":29955:29961   */\n      dup2\n        /* \"#utility.yul\":29950:29953   */\n      dup6\n        /* \"#utility.yul\":29943:29947   */\n      0x20\n        /* \"#utility.yul\":29936:29941   */\n      dup7\n        /* \"#utility.yul\":29932:29948   */\n      add\n        /* \"#utility.yul\":29897:29962   */\n      tag_347\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":29987:30016   */\n      tag_716\n        /* \"#utility.yul\":30009:30015   */\n      dup2\n        /* \"#utility.yul\":29987:30016   */\n      tag_338\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":29982:29985   */\n      dup5\n        /* \"#utility.yul\":29978:30017   */\n      add\n        /* \"#utility.yul\":29971:30017   */\n      swap2\n      pop\n        /* \"#utility.yul\":29740:30023   */\n      pop\n        /* \"#utility.yul\":29650:30023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30029:30780   */\n    tag_286:\n        /* \"#utility.yul\":30252:30256   */\n      0x00\n        /* \"#utility.yul\":30290:30293   */\n      0xa0\n        /* \"#utility.yul\":30279:30288   */\n      dup3\n        /* \"#utility.yul\":30275:30294   */\n      add\n        /* \"#utility.yul\":30267:30294   */\n      swap1\n      pop\n        /* \"#utility.yul\":30304:30375   */\n      tag_718\n        /* \"#utility.yul\":30372:30373   */\n      0x00\n        /* \"#utility.yul\":30361:30370   */\n      dup4\n        /* \"#utility.yul\":30357:30374   */\n      add\n        /* \"#utility.yul\":30348:30354   */\n      dup9\n        /* \"#utility.yul\":30304:30375   */\n      tag_366\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":30385:30457   */\n      tag_719\n        /* \"#utility.yul\":30453:30455   */\n      0x20\n        /* \"#utility.yul\":30442:30451   */\n      dup4\n        /* \"#utility.yul\":30438:30456   */\n      add\n        /* \"#utility.yul\":30429:30435   */\n      dup8\n        /* \"#utility.yul\":30385:30457   */\n      tag_366\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":30467:30539   */\n      tag_720\n        /* \"#utility.yul\":30535:30537   */\n      0x40\n        /* \"#utility.yul\":30524:30533   */\n      dup4\n        /* \"#utility.yul\":30520:30538   */\n      add\n        /* \"#utility.yul\":30511:30517   */\n      dup7\n        /* \"#utility.yul\":30467:30539   */\n      tag_330\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":30549:30621   */\n      tag_721\n        /* \"#utility.yul\":30617:30619   */\n      0x60\n        /* \"#utility.yul\":30606:30615   */\n      dup4\n        /* \"#utility.yul\":30602:30620   */\n      add\n        /* \"#utility.yul\":30593:30599   */\n      dup6\n        /* \"#utility.yul\":30549:30621   */\n      tag_330\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":30669:30678   */\n      dup2\n        /* \"#utility.yul\":30663:30667   */\n      dup2\n        /* \"#utility.yul\":30659:30679   */\n      sub\n        /* \"#utility.yul\":30653:30656   */\n      0x80\n        /* \"#utility.yul\":30642:30651   */\n      dup4\n        /* \"#utility.yul\":30638:30657   */\n      add\n        /* \"#utility.yul\":30631:30680   */\n      mstore\n        /* \"#utility.yul\":30697:30773   */\n      tag_722\n        /* \"#utility.yul\":30768:30772   */\n      dup2\n        /* \"#utility.yul\":30759:30765   */\n      dup5\n        /* \"#utility.yul\":30697:30773   */\n      tag_388\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":30689:30773   */\n      swap1\n      pop\n        /* \"#utility.yul\":30029:30780   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30786:30927   */\n    tag_389:\n        /* \"#utility.yul\":30842:30847   */\n      0x00\n        /* \"#utility.yul\":30873:30879   */\n      dup2\n        /* \"#utility.yul\":30867:30880   */\n      mload\n        /* \"#utility.yul\":30858:30880   */\n      swap1\n      pop\n        /* \"#utility.yul\":30889:30921   */\n      tag_724\n        /* \"#utility.yul\":30915:30920   */\n      dup2\n        /* \"#utility.yul\":30889:30921   */\n      tag_332\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":30786:30927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30933:31282   */\n    tag_289:\n        /* \"#utility.yul\":31002:31008   */\n      0x00\n        /* \"#utility.yul\":31051:31053   */\n      0x20\n        /* \"#utility.yul\":31039:31048   */\n      dup3\n        /* \"#utility.yul\":31030:31037   */\n      dup5\n        /* \"#utility.yul\":31026:31049   */\n      sub\n        /* \"#utility.yul\":31022:31054   */\n      slt\n        /* \"#utility.yul\":31019:31138   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":31057:31136   */\n      tag_727\n      tag_321\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":31019:31138   */\n    tag_726:\n        /* \"#utility.yul\":31177:31178   */\n      0x00\n        /* \"#utility.yul\":31202:31265   */\n      tag_728\n        /* \"#utility.yul\":31257:31264   */\n      dup5\n        /* \"#utility.yul\":31248:31254   */\n      dup3\n        /* \"#utility.yul\":31237:31246   */\n      dup6\n        /* \"#utility.yul\":31233:31255   */\n      add\n        /* \"#utility.yul\":31202:31265   */\n      tag_389\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":31192:31265   */\n      swap2\n      pop\n        /* \"#utility.yul\":31148:31275   */\n      pop\n        /* \"#utility.yul\":30933:31282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31288:32341   */\n    tag_305:\n        /* \"#utility.yul\":31611:31615   */\n      0x00\n        /* \"#utility.yul\":31649:31652   */\n      0xa0\n        /* \"#utility.yul\":31638:31647   */\n      dup3\n        /* \"#utility.yul\":31634:31653   */\n      add\n        /* \"#utility.yul\":31626:31653   */\n      swap1\n      pop\n        /* \"#utility.yul\":31663:31734   */\n      tag_730\n        /* \"#utility.yul\":31731:31732   */\n      0x00\n        /* \"#utility.yul\":31720:31729   */\n      dup4\n        /* \"#utility.yul\":31716:31733   */\n      add\n        /* \"#utility.yul\":31707:31713   */\n      dup9\n        /* \"#utility.yul\":31663:31734   */\n      tag_366\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":31744:31816   */\n      tag_731\n        /* \"#utility.yul\":31812:31814   */\n      0x20\n        /* \"#utility.yul\":31801:31810   */\n      dup4\n        /* \"#utility.yul\":31797:31815   */\n      add\n        /* \"#utility.yul\":31788:31794   */\n      dup8\n        /* \"#utility.yul\":31744:31816   */\n      tag_366\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":31863:31872   */\n      dup2\n        /* \"#utility.yul\":31857:31861   */\n      dup2\n        /* \"#utility.yul\":31853:31873   */\n      sub\n        /* \"#utility.yul\":31848:31850   */\n      0x40\n        /* \"#utility.yul\":31837:31846   */\n      dup4\n        /* \"#utility.yul\":31833:31851   */\n      add\n        /* \"#utility.yul\":31826:31874   */\n      mstore\n        /* \"#utility.yul\":31891:31999   */\n      tag_732\n        /* \"#utility.yul\":31994:31998   */\n      dup2\n        /* \"#utility.yul\":31985:31991   */\n      dup7\n        /* \"#utility.yul\":31891:31999   */\n      tag_365\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":31883:31999   */\n      swap1\n      pop\n        /* \"#utility.yul\":32046:32055   */\n      dup2\n        /* \"#utility.yul\":32040:32044   */\n      dup2\n        /* \"#utility.yul\":32036:32056   */\n      sub\n        /* \"#utility.yul\":32031:32033   */\n      0x60\n        /* \"#utility.yul\":32020:32029   */\n      dup4\n        /* \"#utility.yul\":32016:32034   */\n      add\n        /* \"#utility.yul\":32009:32057   */\n      mstore\n        /* \"#utility.yul\":32074:32182   */\n      tag_733\n        /* \"#utility.yul\":32177:32181   */\n      dup2\n        /* \"#utility.yul\":32168:32174   */\n      dup6\n        /* \"#utility.yul\":32074:32182   */\n      tag_365\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":32066:32182   */\n      swap1\n      pop\n        /* \"#utility.yul\":32230:32239   */\n      dup2\n        /* \"#utility.yul\":32224:32228   */\n      dup2\n        /* \"#utility.yul\":32220:32240   */\n      sub\n        /* \"#utility.yul\":32214:32217   */\n      0x80\n        /* \"#utility.yul\":32203:32212   */\n      dup4\n        /* \"#utility.yul\":32199:32218   */\n      add\n        /* \"#utility.yul\":32192:32241   */\n      mstore\n        /* \"#utility.yul\":32258:32334   */\n      tag_734\n        /* \"#utility.yul\":32329:32333   */\n      dup2\n        /* \"#utility.yul\":32320:32326   */\n      dup5\n        /* \"#utility.yul\":32258:32334   */\n      tag_388\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":32250:32334   */\n      swap1\n      pop\n        /* \"#utility.yul\":31288:32341   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208188fdba4badb1d6c7b77d7c8e4312a86d05e853a58231cfa5e8c49f884e862c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3040": {
									"entryPoint": null,
									"id": 3040,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 210,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 229,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 987,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9157:14",
										"nodeType": "YulBlock",
										"src": "0:9157:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "611:79:14",
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:14",
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:14",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nativeSrc": "670:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nativeSrc": "670:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nativeSrc": "641:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nativeSrc": "631:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nativeSrc": "624:43:14",
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nativeSrc": "621:63:14",
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:14",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nativeSrc": "759:80:14",
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nativeSrc": "769:22:14",
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nativeSrc": "778:13:14",
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nativeSrc": "800:33:14",
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nativeSrc": "800:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:14",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:14",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:14",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nativeSrc": "934:28:14",
													"nodeType": "YulBlock",
													"src": "934:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:14",
																		"nodeType": "YulLiteral",
																		"src": "951:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:14",
																		"nodeType": "YulLiteral",
																		"src": "954:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:14"
																},
																"nativeSrc": "944:12:14",
																"nodeType": "YulFunctionCall",
																"src": "944:12:14"
															},
															"nativeSrc": "944:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:14"
											},
											{
												"body": {
													"nativeSrc": "1057:28:14",
													"nodeType": "YulBlock",
													"src": "1057:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:14"
																},
																"nativeSrc": "1067:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:14"
															},
															"nativeSrc": "1067:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:14"
											},
											{
												"body": {
													"nativeSrc": "1139:54:14",
													"nodeType": "YulBlock",
													"src": "1139:54:14",
													"statements": [
														{
															"nativeSrc": "1149:38:14",
															"nodeType": "YulAssignment",
															"src": "1149:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:14"
																		},
																		"nativeSrc": "1163:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:14"
																		},
																		"nativeSrc": "1179:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:14"
																},
																"nativeSrc": "1159:28:14",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:14",
														"nodeType": "YulTypedName",
														"src": "1122:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:14",
														"nodeType": "YulTypedName",
														"src": "1132:6:14",
														"type": ""
													}
												],
												"src": "1091:102:14"
											},
											{
												"body": {
													"nativeSrc": "1227:152:14",
													"nodeType": "YulBlock",
													"src": "1227:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:14",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:14"
																},
																"nativeSrc": "1237:88:14",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:14"
															},
															"nativeSrc": "1237:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:14"
																},
																"nativeSrc": "1334:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:14"
															},
															"nativeSrc": "1334:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:14",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:14"
																},
																"nativeSrc": "1358:15:14",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:14"
															},
															"nativeSrc": "1358:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:14"
											},
											{
												"body": {
													"nativeSrc": "1428:238:14",
													"nodeType": "YulBlock",
													"src": "1428:238:14",
													"statements": [
														{
															"nativeSrc": "1438:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:14"
																		},
																		"nativeSrc": "1468:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:14"
																},
																"nativeSrc": "1456:40:14",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:14",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:14",
																"nodeType": "YulBlock",
																"src": "1607:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:14"
																			},
																			"nativeSrc": "1609:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:14"
																		},
																		"nativeSrc": "1609:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:14",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:14"
																		},
																		"nativeSrc": "1547:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:14"
																		},
																		"nativeSrc": "1583:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:14"
																},
																"nativeSrc": "1544:62:14",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:14"
															},
															"nativeSrc": "1541:88:14",
															"nodeType": "YulIf",
															"src": "1541:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:14"
																},
																"nativeSrc": "1638:22:14",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:14"
															},
															"nativeSrc": "1638:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:14",
														"nodeType": "YulTypedName",
														"src": "1414:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:14",
														"nodeType": "YulTypedName",
														"src": "1422:4:14",
														"type": ""
													}
												],
												"src": "1385:281:14"
											},
											{
												"body": {
													"nativeSrc": "1713:88:14",
													"nodeType": "YulBlock",
													"src": "1713:88:14",
													"statements": [
														{
															"nativeSrc": "1723:30:14",
															"nodeType": "YulAssignment",
															"src": "1723:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:14"
																},
																"nativeSrc": "1733:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:14"
																},
																"nativeSrc": "1762:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:14"
															},
															"nativeSrc": "1762:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:14",
														"nodeType": "YulTypedName",
														"src": "1697:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:14",
														"nodeType": "YulTypedName",
														"src": "1706:6:14",
														"type": ""
													}
												],
												"src": "1672:129:14"
											},
											{
												"body": {
													"nativeSrc": "1874:241:14",
													"nodeType": "YulBlock",
													"src": "1874:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:14",
																"nodeType": "YulBlock",
																"src": "1979:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:14"
																			},
																			"nativeSrc": "1981:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:14"
																		},
																		"nativeSrc": "1981:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:14",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:14"
																},
																"nativeSrc": "1948:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:14"
															},
															"nativeSrc": "1945:56:14",
															"nodeType": "YulIf",
															"src": "1945:56:14"
														},
														{
															"nativeSrc": "2011:37:14",
															"nodeType": "YulAssignment",
															"src": "2011:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:14"
																},
																"nativeSrc": "2019:29:14",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:14"
																}
															]
														},
														{
															"nativeSrc": "2085:23:14",
															"nodeType": "YulAssignment",
															"src": "2085:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:14"
																},
																"nativeSrc": "2093:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:14",
														"nodeType": "YulTypedName",
														"src": "1858:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:14",
														"nodeType": "YulTypedName",
														"src": "1869:4:14",
														"type": ""
													}
												],
												"src": "1807:308:14"
											},
											{
												"body": {
													"nativeSrc": "2183:77:14",
													"nodeType": "YulBlock",
													"src": "2183:77:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2200:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2200:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2205:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2205:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2210:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2210:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2194:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:14"
																},
																"nativeSrc": "2194:23:14",
																"nodeType": "YulFunctionCall",
																"src": "2194:23:14"
															},
															"nativeSrc": "2194:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "2194:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2237:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2237:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2242:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2233:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:14"
																		},
																		"nativeSrc": "2233:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2233:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2251:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2226:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:14"
																},
																"nativeSrc": "2226:27:14",
																"nodeType": "YulFunctionCall",
																"src": "2226:27:14"
															},
															"nativeSrc": "2226:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "2226:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:14",
														"nodeType": "YulTypedName",
														"src": "2165:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:14",
														"nodeType": "YulTypedName",
														"src": "2170:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:14",
														"nodeType": "YulTypedName",
														"src": "2175:6:14",
														"type": ""
													}
												],
												"src": "2121:139:14"
											},
											{
												"body": {
													"nativeSrc": "2361:339:14",
													"nodeType": "YulBlock",
													"src": "2361:339:14",
													"statements": [
														{
															"nativeSrc": "2371:75:14",
															"nodeType": "YulAssignment",
															"src": "2371:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2438:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2438:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2396:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "2396:41:14"
																		},
																		"nativeSrc": "2396:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2380:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "2380:15:14"
																},
																"nativeSrc": "2380:66:14",
																"nodeType": "YulFunctionCall",
																"src": "2380:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2371:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2462:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2462:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2469:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2455:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:14"
																},
																"nativeSrc": "2455:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2455:21:14"
															},
															"nativeSrc": "2455:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "2455:21:14"
														},
														{
															"nativeSrc": "2485:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2485:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2500:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2500:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2507:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2507:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2496:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:14"
																},
																"nativeSrc": "2496:16:14",
																"nodeType": "YulFunctionCall",
																"src": "2496:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2489:3:14",
																	"nodeType": "YulTypedName",
																	"src": "2489:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2550:83:14",
																"nodeType": "YulBlock",
																"src": "2550:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2552:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2552:77:14"
																			},
																			"nativeSrc": "2552:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2552:79:14"
																		},
																		"nativeSrc": "2552:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2552:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2531:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2531:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2536:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2536:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:14"
																		},
																		"nativeSrc": "2527:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2545:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2545:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2524:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2524:2:14"
																},
																"nativeSrc": "2524:25:14",
																"nodeType": "YulFunctionCall",
																"src": "2524:25:14"
															},
															"nativeSrc": "2521:112:14",
															"nodeType": "YulIf",
															"src": "2521:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2677:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2677:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2682:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2682:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2687:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2687:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2642:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "2642:34:14"
																},
																"nativeSrc": "2642:52:14",
																"nodeType": "YulFunctionCall",
																"src": "2642:52:14"
															},
															"nativeSrc": "2642:52:14",
															"nodeType": "YulExpressionStatement",
															"src": "2642:52:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2266:434:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2334:3:14",
														"nodeType": "YulTypedName",
														"src": "2334:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2339:6:14",
														"nodeType": "YulTypedName",
														"src": "2339:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:14",
														"nodeType": "YulTypedName",
														"src": "2347:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2355:5:14",
														"nodeType": "YulTypedName",
														"src": "2355:5:14",
														"type": ""
													}
												],
												"src": "2266:434:14"
											},
											{
												"body": {
													"nativeSrc": "2793:282:14",
													"nodeType": "YulBlock",
													"src": "2793:282:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2842:83:14",
																"nodeType": "YulBlock",
																"src": "2842:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2844:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2844:77:14"
																			},
																			"nativeSrc": "2844:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2844:79:14"
																		},
																		"nativeSrc": "2844:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2844:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2829:4:14",
																						"nodeType": "YulLiteral",
																						"src": "2829:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2817:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2817:3:14"
																				},
																				"nativeSrc": "2817:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2817:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2836:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2813:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:14"
																		},
																		"nativeSrc": "2813:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2806:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:14"
																},
																"nativeSrc": "2806:35:14",
																"nodeType": "YulFunctionCall",
																"src": "2806:35:14"
															},
															"nativeSrc": "2803:122:14",
															"nodeType": "YulIf",
															"src": "2803:122:14"
														},
														{
															"nativeSrc": "2934:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2934:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2954:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2954:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2948:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:14"
																},
																"nativeSrc": "2948:13:14",
																"nodeType": "YulFunctionCall",
																"src": "2948:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2938:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2970:99:14",
															"nodeType": "YulAssignment",
															"src": "2970:99:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3042:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3042:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:4:14",
																				"nodeType": "YulLiteral",
																				"src": "3050:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3038:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3038:3:14"
																		},
																		"nativeSrc": "3038:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3057:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3057:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3065:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3065:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2979:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "2979:58:14"
																},
																"nativeSrc": "2979:90:14",
																"nodeType": "YulFunctionCall",
																"src": "2979:90:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2970:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2720:355:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2771:6:14",
														"nodeType": "YulTypedName",
														"src": "2771:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2779:3:14",
														"nodeType": "YulTypedName",
														"src": "2779:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2787:5:14",
														"nodeType": "YulTypedName",
														"src": "2787:5:14",
														"type": ""
													}
												],
												"src": "2720:355:14"
											},
											{
												"body": {
													"nativeSrc": "3185:576:14",
													"nodeType": "YulBlock",
													"src": "3185:576:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3231:83:14",
																"nodeType": "YulBlock",
																"src": "3231:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3233:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3233:77:14"
																			},
																			"nativeSrc": "3233:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3233:79:14"
																		},
																		"nativeSrc": "3233:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3233:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3206:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3206:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3215:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3215:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3202:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:14"
																		},
																		"nativeSrc": "3202:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3202:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3227:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3227:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3198:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3198:3:14"
																},
																"nativeSrc": "3198:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3198:32:14"
															},
															"nativeSrc": "3195:119:14",
															"nodeType": "YulIf",
															"src": "3195:119:14"
														},
														{
															"nativeSrc": "3324:128:14",
															"nodeType": "YulBlock",
															"src": "3324:128:14",
															"statements": [
																{
																	"nativeSrc": "3339:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3339:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3353:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3353:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3343:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3343:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3368:74:14",
																	"nodeType": "YulAssignment",
																	"src": "3368:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3414:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3414:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3425:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3425:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3410:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3410:3:14"
																				},
																				"nativeSrc": "3410:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3410:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3434:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3434:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3378:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "3378:31:14"
																		},
																		"nativeSrc": "3378:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3378:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3368:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3368:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3462:292:14",
															"nodeType": "YulBlock",
															"src": "3462:292:14",
															"statements": [
																{
																	"nativeSrc": "3477:39:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3477:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3501:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3501:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3512:2:14",
																						"nodeType": "YulLiteral",
																						"src": "3512:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3497:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3497:3:14"
																				},
																				"nativeSrc": "3497:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3497:18:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3491:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "3491:5:14"
																		},
																		"nativeSrc": "3491:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:25:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3481:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3481:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3563:83:14",
																		"nodeType": "YulBlock",
																		"src": "3563:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3565:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "3565:77:14"
																					},
																					"nativeSrc": "3565:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "3565:79:14"
																				},
																				"nativeSrc": "3565:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "3565:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3535:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3535:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3543:18:14",
																				"nodeType": "YulLiteral",
																				"src": "3543:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3532:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3532:2:14"
																		},
																		"nativeSrc": "3532:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3532:30:14"
																	},
																	"nativeSrc": "3529:117:14",
																	"nodeType": "YulIf",
																	"src": "3529:117:14"
																},
																{
																	"nativeSrc": "3660:84:14",
																	"nodeType": "YulAssignment",
																	"src": "3660:84:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3716:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3716:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3727:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3712:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3712:3:14"
																				},
																				"nativeSrc": "3712:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3712:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3736:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3736:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3670:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "3670:41:14"
																		},
																		"nativeSrc": "3670:74:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3670:74:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3660:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3660:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory",
												"nativeSrc": "3081:680:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3147:9:14",
														"nodeType": "YulTypedName",
														"src": "3147:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3158:7:14",
														"nodeType": "YulTypedName",
														"src": "3158:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3170:6:14",
														"nodeType": "YulTypedName",
														"src": "3170:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3178:6:14",
														"nodeType": "YulTypedName",
														"src": "3178:6:14",
														"type": ""
													}
												],
												"src": "3081:680:14"
											},
											{
												"body": {
													"nativeSrc": "3832:53:14",
													"nodeType": "YulBlock",
													"src": "3832:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3849:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3849:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3872:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3872:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3854:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3854:17:14"
																		},
																		"nativeSrc": "3854:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3854:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3842:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:14"
																},
																"nativeSrc": "3842:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3842:37:14"
															},
															"nativeSrc": "3842:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3842:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3767:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3820:5:14",
														"nodeType": "YulTypedName",
														"src": "3820:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3827:3:14",
														"nodeType": "YulTypedName",
														"src": "3827:3:14",
														"type": ""
													}
												],
												"src": "3767:118:14"
											},
											{
												"body": {
													"nativeSrc": "3989:124:14",
													"nodeType": "YulBlock",
													"src": "3989:124:14",
													"statements": [
														{
															"nativeSrc": "3999:26:14",
															"nodeType": "YulAssignment",
															"src": "3999:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4011:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4011:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4022:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4022:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4007:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4007:3:14"
																},
																"nativeSrc": "4007:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4007:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3999:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3999:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4079:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4079:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4092:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4092:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4103:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4103:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4088:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4088:3:14"
																		},
																		"nativeSrc": "4088:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4088:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4035:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "4035:43:14"
																},
																"nativeSrc": "4035:71:14",
																"nodeType": "YulFunctionCall",
																"src": "4035:71:14"
															},
															"nativeSrc": "4035:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "4035:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3891:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3961:9:14",
														"nodeType": "YulTypedName",
														"src": "3961:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3973:6:14",
														"nodeType": "YulTypedName",
														"src": "3973:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3984:4:14",
														"nodeType": "YulTypedName",
														"src": "3984:4:14",
														"type": ""
													}
												],
												"src": "3891:222:14"
											},
											{
												"body": {
													"nativeSrc": "4178:40:14",
													"nodeType": "YulBlock",
													"src": "4178:40:14",
													"statements": [
														{
															"nativeSrc": "4189:22:14",
															"nodeType": "YulAssignment",
															"src": "4189:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4205:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4205:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4199:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4199:5:14"
																},
																"nativeSrc": "4199:12:14",
																"nodeType": "YulFunctionCall",
																"src": "4199:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4189:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4189:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4119:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4161:5:14",
														"nodeType": "YulTypedName",
														"src": "4161:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4171:6:14",
														"nodeType": "YulTypedName",
														"src": "4171:6:14",
														"type": ""
													}
												],
												"src": "4119:99:14"
											},
											{
												"body": {
													"nativeSrc": "4252:152:14",
													"nodeType": "YulBlock",
													"src": "4252:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4269:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4269:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4272:77:14",
																		"nodeType": "YulLiteral",
																		"src": "4272:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4262:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4262:6:14"
																},
																"nativeSrc": "4262:88:14",
																"nodeType": "YulFunctionCall",
																"src": "4262:88:14"
															},
															"nativeSrc": "4262:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "4262:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4366:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4366:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4369:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4369:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4359:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4359:6:14"
																},
																"nativeSrc": "4359:15:14",
																"nodeType": "YulFunctionCall",
																"src": "4359:15:14"
															},
															"nativeSrc": "4359:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "4359:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4390:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4390:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4393:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4393:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4383:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4383:6:14"
																},
																"nativeSrc": "4383:15:14",
																"nodeType": "YulFunctionCall",
																"src": "4383:15:14"
															},
															"nativeSrc": "4383:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "4383:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4224:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "4224:180:14"
											},
											{
												"body": {
													"nativeSrc": "4461:269:14",
													"nodeType": "YulBlock",
													"src": "4461:269:14",
													"statements": [
														{
															"nativeSrc": "4471:22:14",
															"nodeType": "YulAssignment",
															"src": "4471:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4485:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4485:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4491:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4491:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4481:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4481:3:14"
																},
																"nativeSrc": "4481:12:14",
																"nodeType": "YulFunctionCall",
																"src": "4481:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4471:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:14"
																}
															]
														},
														{
															"nativeSrc": "4502:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4502:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4532:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4532:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4538:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4538:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4528:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4528:3:14"
																},
																"nativeSrc": "4528:12:14",
																"nodeType": "YulFunctionCall",
																"src": "4528:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4506:18:14",
																	"nodeType": "YulTypedName",
																	"src": "4506:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4579:51:14",
																"nodeType": "YulBlock",
																"src": "4579:51:14",
																"statements": [
																	{
																		"nativeSrc": "4593:27:14",
																		"nodeType": "YulAssignment",
																		"src": "4593:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4607:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "4607:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4615:4:14",
																					"nodeType": "YulLiteral",
																					"src": "4615:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4603:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4603:3:14"
																			},
																			"nativeSrc": "4603:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4603:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4593:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4593:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4559:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "4559:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4552:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4552:6:14"
																},
																"nativeSrc": "4552:26:14",
																"nodeType": "YulFunctionCall",
																"src": "4552:26:14"
															},
															"nativeSrc": "4549:81:14",
															"nodeType": "YulIf",
															"src": "4549:81:14"
														},
														{
															"body": {
																"nativeSrc": "4682:42:14",
																"nodeType": "YulBlock",
																"src": "4682:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4696:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4696:16:14"
																			},
																			"nativeSrc": "4696:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4696:18:14"
																		},
																		"nativeSrc": "4696:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4696:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4646:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "4646:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4669:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4669:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4677:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4677:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4666:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4666:2:14"
																		},
																		"nativeSrc": "4666:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4666:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4643:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4643:2:14"
																},
																"nativeSrc": "4643:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4643:38:14"
															},
															"nativeSrc": "4640:84:14",
															"nodeType": "YulIf",
															"src": "4640:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4410:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4445:4:14",
														"nodeType": "YulTypedName",
														"src": "4445:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4454:6:14",
														"nodeType": "YulTypedName",
														"src": "4454:6:14",
														"type": ""
													}
												],
												"src": "4410:320:14"
											},
											{
												"body": {
													"nativeSrc": "4790:87:14",
													"nodeType": "YulBlock",
													"src": "4790:87:14",
													"statements": [
														{
															"nativeSrc": "4800:11:14",
															"nodeType": "YulAssignment",
															"src": "4800:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "4808:3:14",
																"nodeType": "YulIdentifier",
																"src": "4808:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4800:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4800:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4828:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4828:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4831:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4831:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4821:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:14"
																},
																"nativeSrc": "4821:14:14",
																"nodeType": "YulFunctionCall",
																"src": "4821:14:14"
															},
															"nativeSrc": "4821:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "4821:14:14"
														},
														{
															"nativeSrc": "4844:26:14",
															"nodeType": "YulAssignment",
															"src": "4844:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4862:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4862:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4865:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4865:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4852:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4852:9:14"
																},
																"nativeSrc": "4852:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4852:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4844:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4844:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4736:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4777:3:14",
														"nodeType": "YulTypedName",
														"src": "4777:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4785:4:14",
														"nodeType": "YulTypedName",
														"src": "4785:4:14",
														"type": ""
													}
												],
												"src": "4736:141:14"
											},
											{
												"body": {
													"nativeSrc": "4927:49:14",
													"nodeType": "YulBlock",
													"src": "4927:49:14",
													"statements": [
														{
															"nativeSrc": "4937:33:14",
															"nodeType": "YulAssignment",
															"src": "4937:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4955:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "4955:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4962:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4962:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4951:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4951:3:14"
																		},
																		"nativeSrc": "4951:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4951:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4967:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4967:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4947:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4947:3:14"
																},
																"nativeSrc": "4947:23:14",
																"nodeType": "YulFunctionCall",
																"src": "4947:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4937:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4883:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4910:5:14",
														"nodeType": "YulTypedName",
														"src": "4910:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4920:6:14",
														"nodeType": "YulTypedName",
														"src": "4920:6:14",
														"type": ""
													}
												],
												"src": "4883:93:14"
											},
											{
												"body": {
													"nativeSrc": "5035:54:14",
													"nodeType": "YulBlock",
													"src": "5035:54:14",
													"statements": [
														{
															"nativeSrc": "5045:37:14",
															"nodeType": "YulAssignment",
															"src": "5045:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5070:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "5070:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5076:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5076:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5066:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5066:3:14"
																},
																"nativeSrc": "5066:16:14",
																"nodeType": "YulFunctionCall",
																"src": "5066:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5045:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "5045:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4982:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5010:4:14",
														"nodeType": "YulTypedName",
														"src": "5010:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5016:5:14",
														"nodeType": "YulTypedName",
														"src": "5016:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5026:8:14",
														"nodeType": "YulTypedName",
														"src": "5026:8:14",
														"type": ""
													}
												],
												"src": "4982:107:14"
											},
											{
												"body": {
													"nativeSrc": "5171:317:14",
													"nodeType": "YulBlock",
													"src": "5171:317:14",
													"statements": [
														{
															"nativeSrc": "5181:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5181:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5202:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "5202:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5214:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5214:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5198:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5198:3:14"
																},
																"nativeSrc": "5198:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5198:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5185:9:14",
																	"nodeType": "YulTypedName",
																	"src": "5185:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5225:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5225:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5256:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5256:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5267:66:14",
																		"nodeType": "YulLiteral",
																		"src": "5267:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5237:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5237:18:14"
																},
																"nativeSrc": "5237:97:14",
																"nodeType": "YulFunctionCall",
																"src": "5237:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5229:4:14",
																	"nodeType": "YulTypedName",
																	"src": "5229:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5343:51:14",
															"nodeType": "YulAssignment",
															"src": "5343:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5374:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5374:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5385:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "5385:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5355:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5355:18:14"
																},
																"nativeSrc": "5355:39:14",
																"nodeType": "YulFunctionCall",
																"src": "5355:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5343:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "5343:8:14"
																}
															]
														},
														{
															"nativeSrc": "5403:30:14",
															"nodeType": "YulAssignment",
															"src": "5403:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5416:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5416:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5427:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "5427:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5423:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5423:3:14"
																		},
																		"nativeSrc": "5423:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5423:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5412:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5412:3:14"
																},
																"nativeSrc": "5412:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5412:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5403:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5403:5:14"
																}
															]
														},
														{
															"nativeSrc": "5442:40:14",
															"nodeType": "YulAssignment",
															"src": "5442:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5455:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5455:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5466:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "5466:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5476:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "5476:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5462:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5462:3:14"
																		},
																		"nativeSrc": "5462:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5462:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5452:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5452:2:14"
																},
																"nativeSrc": "5452:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5452:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5442:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5442:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5095:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5132:5:14",
														"nodeType": "YulTypedName",
														"src": "5132:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5139:10:14",
														"nodeType": "YulTypedName",
														"src": "5139:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5151:8:14",
														"nodeType": "YulTypedName",
														"src": "5151:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5164:6:14",
														"nodeType": "YulTypedName",
														"src": "5164:6:14",
														"type": ""
													}
												],
												"src": "5095:393:14"
											},
											{
												"body": {
													"nativeSrc": "5539:32:14",
													"nodeType": "YulBlock",
													"src": "5539:32:14",
													"statements": [
														{
															"nativeSrc": "5549:16:14",
															"nodeType": "YulAssignment",
															"src": "5549:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "5560:5:14",
																"nodeType": "YulIdentifier",
																"src": "5560:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5549:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5549:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5494:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:14",
														"nodeType": "YulTypedName",
														"src": "5521:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5531:7:14",
														"nodeType": "YulTypedName",
														"src": "5531:7:14",
														"type": ""
													}
												],
												"src": "5494:77:14"
											},
											{
												"body": {
													"nativeSrc": "5609:28:14",
													"nodeType": "YulBlock",
													"src": "5609:28:14",
													"statements": [
														{
															"nativeSrc": "5619:12:14",
															"nodeType": "YulAssignment",
															"src": "5619:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "5626:5:14",
																"nodeType": "YulIdentifier",
																"src": "5626:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5619:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5577:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5595:5:14",
														"nodeType": "YulTypedName",
														"src": "5595:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5605:3:14",
														"nodeType": "YulTypedName",
														"src": "5605:3:14",
														"type": ""
													}
												],
												"src": "5577:60:14"
											},
											{
												"body": {
													"nativeSrc": "5703:82:14",
													"nodeType": "YulBlock",
													"src": "5703:82:14",
													"statements": [
														{
															"nativeSrc": "5713:66:14",
															"nodeType": "YulAssignment",
															"src": "5713:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5771:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5771:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5753:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "5753:17:14"
																				},
																				"nativeSrc": "5753:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5753:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5744:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "5744:8:14"
																		},
																		"nativeSrc": "5744:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5744:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5726:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5726:17:14"
																},
																"nativeSrc": "5726:53:14",
																"nodeType": "YulFunctionCall",
																"src": "5726:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5713:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5713:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5643:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5683:5:14",
														"nodeType": "YulTypedName",
														"src": "5683:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5693:9:14",
														"nodeType": "YulTypedName",
														"src": "5693:9:14",
														"type": ""
													}
												],
												"src": "5643:142:14"
											},
											{
												"body": {
													"nativeSrc": "5838:28:14",
													"nodeType": "YulBlock",
													"src": "5838:28:14",
													"statements": [
														{
															"nativeSrc": "5848:12:14",
															"nodeType": "YulAssignment",
															"src": "5848:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "5855:5:14",
																"nodeType": "YulIdentifier",
																"src": "5855:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5848:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5791:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5824:5:14",
														"nodeType": "YulTypedName",
														"src": "5824:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5834:3:14",
														"nodeType": "YulTypedName",
														"src": "5834:3:14",
														"type": ""
													}
												],
												"src": "5791:75:14"
											},
											{
												"body": {
													"nativeSrc": "5948:193:14",
													"nodeType": "YulBlock",
													"src": "5948:193:14",
													"statements": [
														{
															"nativeSrc": "5958:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5958:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6013:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "6013:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5982:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5982:30:14"
																},
																"nativeSrc": "5982:39:14",
																"nodeType": "YulFunctionCall",
																"src": "5982:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5962:16:14",
																	"nodeType": "YulTypedName",
																	"src": "5962:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6037:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6037:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6077:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "6077:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6071:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6071:5:14"
																				},
																				"nativeSrc": "6071:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6071:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6084:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6084:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6116:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "6116:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6092:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "6092:23:14"
																				},
																				"nativeSrc": "6092:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6092:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6043:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "6043:27:14"
																		},
																		"nativeSrc": "6043:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6043:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6030:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6030:6:14"
																},
																"nativeSrc": "6030:105:14",
																"nodeType": "YulFunctionCall",
																"src": "6030:105:14"
															},
															"nativeSrc": "6030:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "6030:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5872:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5925:4:14",
														"nodeType": "YulTypedName",
														"src": "5925:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5931:6:14",
														"nodeType": "YulTypedName",
														"src": "5931:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5939:7:14",
														"nodeType": "YulTypedName",
														"src": "5939:7:14",
														"type": ""
													}
												],
												"src": "5872:269:14"
											},
											{
												"body": {
													"nativeSrc": "6196:24:14",
													"nodeType": "YulBlock",
													"src": "6196:24:14",
													"statements": [
														{
															"nativeSrc": "6206:8:14",
															"nodeType": "YulAssignment",
															"src": "6206:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6213:1:14",
																"nodeType": "YulLiteral",
																"src": "6213:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6206:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6206:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6147:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6192:3:14",
														"nodeType": "YulTypedName",
														"src": "6192:3:14",
														"type": ""
													}
												],
												"src": "6147:73:14"
											},
											{
												"body": {
													"nativeSrc": "6279:136:14",
													"nodeType": "YulBlock",
													"src": "6279:136:14",
													"statements": [
														{
															"nativeSrc": "6289:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6289:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6303:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "6303:30:14"
																},
																"nativeSrc": "6303:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6303:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6293:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6293:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6388:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6388:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6394:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6394:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6402:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6402:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6344:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6344:43:14"
																},
																"nativeSrc": "6344:65:14",
																"nodeType": "YulFunctionCall",
																"src": "6344:65:14"
															},
															"nativeSrc": "6344:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "6344:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6226:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6265:4:14",
														"nodeType": "YulTypedName",
														"src": "6265:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6271:6:14",
														"nodeType": "YulTypedName",
														"src": "6271:6:14",
														"type": ""
													}
												],
												"src": "6226:189:14"
											},
											{
												"body": {
													"nativeSrc": "6471:136:14",
													"nodeType": "YulBlock",
													"src": "6471:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6538:63:14",
																"nodeType": "YulBlock",
																"src": "6538:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6582:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6582:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6589:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6589:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6552:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "6552:29:14"
																			},
																			"nativeSrc": "6552:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6552:39:14"
																		},
																		"nativeSrc": "6552:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6552:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6491:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6491:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6498:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6498:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6488:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6488:2:14"
																},
																"nativeSrc": "6488:14:14",
																"nodeType": "YulFunctionCall",
																"src": "6488:14:14"
															},
															"nativeSrc": "6481:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6503:26:14",
																"nodeType": "YulBlock",
																"src": "6503:26:14",
																"statements": [
																	{
																		"nativeSrc": "6505:22:14",
																		"nodeType": "YulAssignment",
																		"src": "6505:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6518:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6518:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6525:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6525:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6514:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6514:3:14"
																			},
																			"nativeSrc": "6514:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6514:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6505:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6505:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6485:2:14",
																"nodeType": "YulBlock",
																"src": "6485:2:14",
																"statements": []
															},
															"src": "6481:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6421:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6459:5:14",
														"nodeType": "YulTypedName",
														"src": "6459:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6466:3:14",
														"nodeType": "YulTypedName",
														"src": "6466:3:14",
														"type": ""
													}
												],
												"src": "6421:186:14"
											},
											{
												"body": {
													"nativeSrc": "6692:464:14",
													"nodeType": "YulBlock",
													"src": "6692:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6718:431:14",
																"nodeType": "YulBlock",
																"src": "6718:431:14",
																"statements": [
																	{
																		"nativeSrc": "6732:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6732:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6780:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6780:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6748:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "6748:31:14"
																			},
																			"nativeSrc": "6748:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6748:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6736:8:14",
																				"nodeType": "YulTypedName",
																				"src": "6736:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6799:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6799:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6822:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "6822:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6850:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "6850:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6832:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "6832:17:14"
																					},
																					"nativeSrc": "6832:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6832:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6818:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6818:3:14"
																			},
																			"nativeSrc": "6818:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6818:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6803:11:14",
																				"nodeType": "YulTypedName",
																				"src": "6803:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7019:27:14",
																			"nodeType": "YulBlock",
																			"src": "7019:27:14",
																			"statements": [
																				{
																					"nativeSrc": "7021:23:14",
																					"nodeType": "YulAssignment",
																					"src": "7021:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7036:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "7036:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7021:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "7021:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7003:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "7003:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7015:2:14",
																					"nodeType": "YulLiteral",
																					"src": "7015:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7000:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "7000:2:14"
																			},
																			"nativeSrc": "7000:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7000:18:14"
																		},
																		"nativeSrc": "6997:49:14",
																		"nodeType": "YulIf",
																		"src": "6997:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7088:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "7088:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7105:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "7105:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7133:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7133:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7115:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "7115:17:14"
																							},
																							"nativeSrc": "7115:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "7115:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7101:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "7101:3:14"
																					},
																					"nativeSrc": "7101:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7101:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7059:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "7059:28:14"
																			},
																			"nativeSrc": "7059:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7059:80:14"
																		},
																		"nativeSrc": "7059:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7059:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6709:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6709:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6714:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6714:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6706:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6706:2:14"
																},
																"nativeSrc": "6706:11:14",
																"nodeType": "YulFunctionCall",
																"src": "6706:11:14"
															},
															"nativeSrc": "6703:446:14",
															"nodeType": "YulIf",
															"src": "6703:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6613:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6668:5:14",
														"nodeType": "YulTypedName",
														"src": "6668:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6675:3:14",
														"nodeType": "YulTypedName",
														"src": "6675:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6680:10:14",
														"nodeType": "YulTypedName",
														"src": "6680:10:14",
														"type": ""
													}
												],
												"src": "6613:543:14"
											},
											{
												"body": {
													"nativeSrc": "7225:54:14",
													"nodeType": "YulBlock",
													"src": "7225:54:14",
													"statements": [
														{
															"nativeSrc": "7235:37:14",
															"nodeType": "YulAssignment",
															"src": "7235:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7260:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7260:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7266:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7266:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7256:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7256:3:14"
																},
																"nativeSrc": "7256:16:14",
																"nodeType": "YulFunctionCall",
																"src": "7256:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7235:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "7235:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7162:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7200:4:14",
														"nodeType": "YulTypedName",
														"src": "7200:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7206:5:14",
														"nodeType": "YulTypedName",
														"src": "7206:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7216:8:14",
														"nodeType": "YulTypedName",
														"src": "7216:8:14",
														"type": ""
													}
												],
												"src": "7162:117:14"
											},
											{
												"body": {
													"nativeSrc": "7336:118:14",
													"nodeType": "YulBlock",
													"src": "7336:118:14",
													"statements": [
														{
															"nativeSrc": "7346:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7346:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7395:1:14",
																						"nodeType": "YulLiteral",
																						"src": "7395:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7398:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7398:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7391:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7391:3:14"
																				},
																				"nativeSrc": "7391:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7391:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7410:1:14",
																						"nodeType": "YulLiteral",
																						"src": "7410:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7406:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7406:3:14"
																				},
																				"nativeSrc": "7406:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7406:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7362:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "7362:28:14"
																		},
																		"nativeSrc": "7362:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7362:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7358:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7358:3:14"
																},
																"nativeSrc": "7358:56:14",
																"nodeType": "YulFunctionCall",
																"src": "7358:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7350:4:14",
																	"nodeType": "YulTypedName",
																	"src": "7350:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7423:25:14",
															"nodeType": "YulAssignment",
															"src": "7423:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7437:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7437:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7443:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7443:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7433:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:14"
																},
																"nativeSrc": "7433:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7433:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7423:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7423:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7285:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7313:4:14",
														"nodeType": "YulTypedName",
														"src": "7313:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7319:5:14",
														"nodeType": "YulTypedName",
														"src": "7319:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7329:6:14",
														"nodeType": "YulTypedName",
														"src": "7329:6:14",
														"type": ""
													}
												],
												"src": "7285:169:14"
											},
											{
												"body": {
													"nativeSrc": "7540:214:14",
													"nodeType": "YulBlock",
													"src": "7540:214:14",
													"statements": [
														{
															"nativeSrc": "7673:37:14",
															"nodeType": "YulAssignment",
															"src": "7673:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7700:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7700:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7706:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7706:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7681:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "7681:18:14"
																},
																"nativeSrc": "7681:29:14",
																"nodeType": "YulFunctionCall",
																"src": "7681:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7673:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7673:4:14"
																}
															]
														},
														{
															"nativeSrc": "7719:29:14",
															"nodeType": "YulAssignment",
															"src": "7719:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7730:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7730:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7740:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7740:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7743:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7743:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7736:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7736:3:14"
																		},
																		"nativeSrc": "7736:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7736:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7727:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7727:2:14"
																},
																"nativeSrc": "7727:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7727:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7719:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7719:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7459:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7521:4:14",
														"nodeType": "YulTypedName",
														"src": "7521:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7527:3:14",
														"nodeType": "YulTypedName",
														"src": "7527:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7535:4:14",
														"nodeType": "YulTypedName",
														"src": "7535:4:14",
														"type": ""
													}
												],
												"src": "7459:295:14"
											},
											{
												"body": {
													"nativeSrc": "7851:1303:14",
													"nodeType": "YulBlock",
													"src": "7851:1303:14",
													"statements": [
														{
															"nativeSrc": "7862:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7909:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7909:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7876:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "7876:32:14"
																},
																"nativeSrc": "7876:37:14",
																"nodeType": "YulFunctionCall",
																"src": "7876:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7866:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7866:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:22:14",
																"nodeType": "YulBlock",
																"src": "7998:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8000:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8000:16:14"
																			},
																			"nativeSrc": "8000:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8000:18:14"
																		},
																		"nativeSrc": "8000:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8000:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7970:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7970:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7978:18:14",
																		"nodeType": "YulLiteral",
																		"src": "7978:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7967:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7967:2:14"
																},
																"nativeSrc": "7967:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7967:30:14"
															},
															"nativeSrc": "7964:56:14",
															"nodeType": "YulIf",
															"src": "7964:56:14"
														},
														{
															"nativeSrc": "8030:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8030:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8076:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "8076:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8070:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "8070:5:14"
																		},
																		"nativeSrc": "8070:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8070:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8044:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "8044:25:14"
																},
																"nativeSrc": "8044:38:14",
																"nodeType": "YulFunctionCall",
																"src": "8044:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8034:6:14",
																	"nodeType": "YulTypedName",
																	"src": "8034:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8175:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8175:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8181:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8181:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8189:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8189:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8129:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "8129:45:14"
																},
																"nativeSrc": "8129:67:14",
																"nodeType": "YulFunctionCall",
																"src": "8129:67:14"
															},
															"nativeSrc": "8129:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "8129:67:14"
														},
														{
															"nativeSrc": "8206:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8206:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "8223:1:14",
																"nodeType": "YulLiteral",
																"src": "8223:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8210:9:14",
																	"nodeType": "YulTypedName",
																	"src": "8210:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8234:17:14",
															"nodeType": "YulAssignment",
															"src": "8234:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "8247:4:14",
																"nodeType": "YulLiteral",
																"src": "8247:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8234:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "8234:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8298:611:14",
																		"nodeType": "YulBlock",
																		"src": "8298:611:14",
																		"statements": [
																			{
																				"nativeSrc": "8312:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8312:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8331:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "8331:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8343:4:14",
																									"nodeType": "YulLiteral",
																									"src": "8343:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8339:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8339:3:14"
																							},
																							"nativeSrc": "8339:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8339:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8327:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "8327:3:14"
																					},
																					"nativeSrc": "8327:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8327:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8316:7:14",
																						"nodeType": "YulTypedName",
																						"src": "8316:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8363:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8363:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8409:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "8409:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8377:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "8377:31:14"
																					},
																					"nativeSrc": "8377:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8377:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8367:6:14",
																						"nodeType": "YulTypedName",
																						"src": "8367:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8427:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8427:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8436:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8436:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8431:1:14",
																						"nodeType": "YulTypedName",
																						"src": "8431:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8495:163:14",
																					"nodeType": "YulBlock",
																					"src": "8495:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8520:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "8520:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8538:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "8538:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8543:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "8543:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8534:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "8534:3:14"
																												},
																												"nativeSrc": "8534:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "8534:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8528:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "8528:5:14"
																										},
																										"nativeSrc": "8528:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8528:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8513:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8513:6:14"
																								},
																								"nativeSrc": "8513:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8513:42:14"
																							},
																							"nativeSrc": "8513:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "8513:42:14"
																						},
																						{
																							"nativeSrc": "8572:24:14",
																							"nodeType": "YulAssignment",
																							"src": "8572:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8586:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "8586:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8594:1:14",
																										"nodeType": "YulLiteral",
																										"src": "8594:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8582:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "8582:3:14"
																								},
																								"nativeSrc": "8582:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8582:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8572:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8572:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8613:31:14",
																							"nodeType": "YulAssignment",
																							"src": "8613:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8630:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "8630:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8641:2:14",
																										"nodeType": "YulLiteral",
																										"src": "8641:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8626:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "8626:3:14"
																								},
																								"nativeSrc": "8626:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8626:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8613:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "8613:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8461:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "8461:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8464:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "8464:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8458:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "8458:2:14"
																					},
																					"nativeSrc": "8458:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8458:14:14"
																				},
																				"nativeSrc": "8450:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8473:21:14",
																					"nodeType": "YulBlock",
																					"src": "8473:21:14",
																					"statements": [
																						{
																							"nativeSrc": "8475:17:14",
																							"nodeType": "YulAssignment",
																							"src": "8475:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8484:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "8484:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8487:4:14",
																										"nodeType": "YulLiteral",
																										"src": "8487:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8480:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "8480:3:14"
																								},
																								"nativeSrc": "8480:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8480:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8475:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "8475:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8454:3:14",
																					"nodeType": "YulBlock",
																					"src": "8454:3:14",
																					"statements": []
																				},
																				"src": "8450:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "8694:156:14",
																					"nodeType": "YulBlock",
																					"src": "8694:156:14",
																					"statements": [
																						{
																							"nativeSrc": "8712:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8712:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8739:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "8739:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8744:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8744:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8735:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "8735:3:14"
																										},
																										"nativeSrc": "8735:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8735:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8729:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8729:5:14"
																								},
																								"nativeSrc": "8729:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8729:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8716:9:14",
																									"nodeType": "YulTypedName",
																									"src": "8716:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8779:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "8779:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8806:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8806:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8821:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "8821:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8829:4:14",
																														"nodeType": "YulLiteral",
																														"src": "8829:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8817:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "8817:3:14"
																												},
																												"nativeSrc": "8817:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "8817:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8787:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "8787:18:14"
																										},
																										"nativeSrc": "8787:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8787:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8772:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8772:6:14"
																								},
																								"nativeSrc": "8772:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8772:64:14"
																							},
																							"nativeSrc": "8772:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "8772:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8677:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "8677:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8686:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "8686:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8674:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "8674:2:14"
																					},
																					"nativeSrc": "8674:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8674:19:14"
																				},
																				"nativeSrc": "8671:179:14",
																				"nodeType": "YulIf",
																				"src": "8671:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8870:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "8870:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8884:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "8884:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8892:1:14",
																											"nodeType": "YulLiteral",
																											"src": "8892:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8880:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "8880:3:14"
																									},
																									"nativeSrc": "8880:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "8880:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8896:1:14",
																									"nodeType": "YulLiteral",
																									"src": "8896:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8876:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8876:3:14"
																							},
																							"nativeSrc": "8876:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8876:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8863:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8863:6:14"
																					},
																					"nativeSrc": "8863:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8863:36:14"
																				},
																				"nativeSrc": "8863:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8863:36:14"
																			}
																		]
																	},
																	"nativeSrc": "8291:618:14",
																	"nodeType": "YulCase",
																	"src": "8291:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8296:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8296:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8926:222:14",
																		"nodeType": "YulBlock",
																		"src": "8926:222:14",
																		"statements": [
																			{
																				"nativeSrc": "8940:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8940:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8953:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8953:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8944:5:14",
																						"nodeType": "YulTypedName",
																						"src": "8944:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8977:67:14",
																					"nodeType": "YulBlock",
																					"src": "8977:67:14",
																					"statements": [
																						{
																							"nativeSrc": "8995:35:14",
																							"nodeType": "YulAssignment",
																							"src": "8995:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9014:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "9014:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9019:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "9019:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9010:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "9010:3:14"
																										},
																										"nativeSrc": "9010:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "9010:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9004:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "9004:5:14"
																								},
																								"nativeSrc": "9004:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "9004:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8995:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8995:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8970:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "8970:6:14"
																				},
																				"nativeSrc": "8967:77:14",
																				"nodeType": "YulIf",
																				"src": "8967:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9064:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "9064:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9123:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "9123:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9130:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "9130:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9070:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "9070:52:14"
																							},
																							"nativeSrc": "9070:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "9070:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9057:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9057:6:14"
																					},
																					"nativeSrc": "9057:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "9057:81:14"
																				},
																				"nativeSrc": "9057:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "9057:81:14"
																			}
																		]
																	},
																	"nativeSrc": "8918:230:14",
																	"nodeType": "YulCase",
																	"src": "8918:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8271:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8271:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8279:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8268:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8268:2:14"
																},
																"nativeSrc": "8268:14:14",
																"nodeType": "YulFunctionCall",
																"src": "8268:14:14"
															},
															"nativeSrc": "8261:887:14",
															"nodeType": "YulSwitch",
															"src": "8261:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7759:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7840:4:14",
														"nodeType": "YulTypedName",
														"src": "7840:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7846:3:14",
														"nodeType": "YulTypedName",
														"src": "7846:3:14",
														"type": ""
													}
												],
												"src": "7759:1395:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516130f43803806130f48339818101604052810190610031919061034f565b8181610042816100d260201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100aa91906103b8565b60405180910390fd5b6100c2816100e560201b60201c565b50600160048190555050506106ad565b80600290816100e191906105de565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e2826101b9565b9050919050565b6101f2816101d8565b81146101fc575f80fd5b50565b5f8151905061020d816101e9565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102618261021b565b810181811067ffffffffffffffff821117156102805761027f61022b565b5b80604052505050565b5f6102926101a8565b905061029e8282610258565b919050565b5f67ffffffffffffffff8211156102bd576102bc61022b565b5b6102c68261021b565b9050602081019050919050565b8281835e5f83830152505050565b5f6102f36102ee846102a3565b610289565b90508281526020810184848401111561030f5761030e610217565b5b61031a8482856102d3565b509392505050565b5f82601f83011261033657610335610213565b5b81516103468482602086016102e1565b91505092915050565b5f8060408385031215610365576103646101b1565b5b5f610372858286016101ff565b925050602083015167ffffffffffffffff811115610393576103926101b5565b5b61039f85828601610322565b9150509250929050565b6103b2816101d8565b82525050565b5f6020820190506103cb5f8301846103a9565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061041f57607f821691505b602082108103610432576104316103db565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610459565b61049e8683610459565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6104e26104dd6104d8846104b6565b6104bf565b6104b6565b9050919050565b5f819050919050565b6104fb836104c8565b61050f610507826104e9565b848454610465565b825550505050565b5f90565b610523610517565b61052e8184846104f2565b505050565b5b81811015610551576105465f8261051b565b600181019050610534565b5050565b601f8211156105965761056781610438565b6105708461044a565b8101602085101561057f578190505b61059361058b8561044a565b830182610533565b50505b505050565b5f82821c905092915050565b5f6105b65f198460080261059b565b1980831691505092915050565b5f6105ce83836105a7565b9150826002028217905092915050565b6105e7826103d1565b67ffffffffffffffff811115610600576105ff61022b565b5b61060a8254610408565b610615828285610555565b5f60209050601f831160018114610646575f8415610634578287015190505b61063e85826105c3565b8655506106a5565b601f19841661065486610438565b5f5b8281101561067b57848901518255600182019150602085019450602081019050610656565b868310156106985784890151610694601f8916826105a7565b8355505b6001600288020188555050505b505050505050565b612a3a806106ba5f395ff3fe608060405234801561000f575f80fd5b50600436106100fd575f3560e01c8063715018a611610095578063e985e9c511610064578063e985e9c514610291578063f242432a146102c1578063f2fde38b146102dd578063f5298aca146102f9576100fd565b8063715018a6146102315780638da5cb5b1461023b578063a22cb46514610259578063b510391f14610275576100fd565b80632eb2c2d6116100d15780632eb2c2d6146101ad57806331f0e6c8146101c95780634e1273f4146101e55780636b20c45414610215576100fd565b8062fdd58e1461010157806301ffc9a71461013157806302fe5305146101615780630e89341c1461017d575b5f80fd5b61011b600480360381019061011691906119ee565b610315565b6040516101289190611a3b565b60405180910390f35b61014b60048036038101906101469190611aa9565b61036a565b6040516101589190611aee565b60405180910390f35b61017b60048036038101906101769190611c43565b61044b565b005b61019760048036038101906101929190611c8a565b61045f565b6040516101a49190611d15565b60405180910390f35b6101c760048036038101906101c29190611e97565b6104f1565b005b6101e360048036038101906101de9190611f62565b610598565b005b6101ff60048036038101906101fa919061208e565b6105c7565b60405161020c91906121bb565b60405180910390f35b61022f600480360381019061022a91906121db565b6106ce565b005b61023961077a565b005b61024361078d565b6040516102509190612272565b60405180910390f35b610273600480360381019061026e91906122b5565b6107b5565b005b61028f600480360381019061028a91906122f3565b6107cb565b005b6102ab60048036038101906102a6919061234d565b610804565b6040516102b89190611aee565b60405180910390f35b6102db60048036038101906102d6919061238b565b610892565b005b6102f760048036038101906102f2919061241e565b610939565b005b610313600480360381019061030e9190612449565b6109bd565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610444575061044382610a69565b5b9050919050565b610453610ad2565b61045c81610b59565b50565b60606002805461046e906124c6565b80601f016020809104026020016040519081016040528092919081815260200182805461049a906124c6565b80156104e55780601f106104bc576101008083540402835291602001916104e5565b820191905f5260205f20905b8154815290600101906020018083116104c857829003601f168201915b50505050509050919050565b5f6104fa610b6c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561053f575061053d8682610804565b155b156105835780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161057a9291906124f6565b60405180910390fd5b6105908686868686610b73565b505050505050565b6105a0610ad2565b5f5b828110156105c1576105b484836107cb565b80806001019150506105a2565b50505050565b6060815183511461061357815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161060a92919061251d565b60405180910390fd5b5f835167ffffffffffffffff81111561062f5761062e611b1f565b5b60405190808252806020026020018201604052801561065d5781602001602082028036833780820191505090505b5090505f5b84518110156106c3576106996106818287610c6790919063ffffffff16565b6106948387610c7a90919063ffffffff16565b610315565b8282815181106106ac576106ab612544565b5b602002602001018181525050806001019050610662565b508091505092915050565b6106d6610b6c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561071f575061071d83610718610b6c565b610804565b155b1561076a5761072c610b6c565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107619291906124f6565b60405180910390fd5b610775838383610c8d565b505050565b610782610ad2565b61078b5f610d1d565b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107c76107c0610b6c565b8383610de0565b5050565b6107d3610ad2565b5f60045490506107e68382600185610f49565b600160045f8282546107f8919061259e565b92505081905550505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f61089b610b6c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156108e057506108de8682610804565b155b156109245780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161091b9291906124f6565b60405180910390fd5b6109318686868686610fde565b505050505050565b610941610ad2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109b1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109a89190612272565b60405180910390fd5b6109ba81610d1d565b50565b6109c5610b6c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610a0e5750610a0c83610a07610b6c565b610804565b155b15610a5957610a1b610b6c565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610a509291906124f6565b60405180910390fd5b610a648383836110e4565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610ada610b6c565b73ffffffffffffffffffffffffffffffffffffffff16610af861078d565b73ffffffffffffffffffffffffffffffffffffffff1614610b5757610b1b610b6c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b4e9190612272565b60405180910390fd5b565b8060029081610b68919061276e565b5050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610be3575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610bda9190612272565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610c53575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c4a9190612272565b60405180910390fd5b610c608585858585611186565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cfd575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610cf49190612272565b60405180910390fd5b610d18835f848460405180602001604052805f815250611186565b505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e50575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610e479190612272565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f3c9190611aee565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fb9575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610fb09190612272565b60405180910390fd5b5f80610fc58585611232565b91509150610fd65f87848487611186565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361104e575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016110459190612272565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036110be575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016110b59190612272565b60405180910390fd5b5f806110ca8585611232565b915091506110db8787848487611186565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611154575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161114b9190612272565b60405180910390fd5b5f806111608484611232565b9150915061117f855f848460405180602001604052805f815250611186565b5050505050565b61119285858585611262565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461122b575f6111ce610b6c565b9050600184510361121a575f6111ed5f86610c7a90919063ffffffff16565b90505f6112035f86610c7a90919063ffffffff16565b90506112138389898585896115f2565b5050611229565b6112288187878787876117a1565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b80518251146112ac57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016112a392919061251d565b60405180910390fd5b5f6112b5610b6c565b90505f5b83518110156114b1575f6112d68286610c7a90919063ffffffff16565b90505f6112ec8386610c7a90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461140f575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156113bb57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016113b2949392919061283d565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146114a457805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461149c919061259e565b925050819055505b50508060010190506112b9565b50600183510361156c575f6114cf5f85610c7a90919063ffffffff16565b90505f6114e55f85610c7a90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161155d92919061251d565b60405180910390a450506115eb565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516115e2929190612880565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611799578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611652959493929190612907565b6020604051808303815f875af192505050801561168d57506040513d601f19601f8201168201806040525081019061168a9190612973565b60015b61170e573d805f81146116bb576040519150601f19603f3d011682016040523d82523d5f602084013e6116c0565b606091505b505f81510361170657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116fd9190612272565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461179757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161178e9190612272565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611948578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161180195949392919061299e565b6020604051808303815f875af192505050801561183c57506040513d601f19601f820116820180604052508101906118399190612973565b60015b6118bd573d805f811461186a576040519150601f19603f3d011682016040523d82523d5f602084013e61186f565b606091505b505f8151036118b557846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016118ac9190612272565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461194657846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161193d9190612272565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61198a82611961565b9050919050565b61199a81611980565b81146119a4575f80fd5b50565b5f813590506119b581611991565b92915050565b5f819050919050565b6119cd816119bb565b81146119d7575f80fd5b50565b5f813590506119e8816119c4565b92915050565b5f8060408385031215611a0457611a03611959565b5b5f611a11858286016119a7565b9250506020611a22858286016119da565b9150509250929050565b611a35816119bb565b82525050565b5f602082019050611a4e5f830184611a2c565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a8881611a54565b8114611a92575f80fd5b50565b5f81359050611aa381611a7f565b92915050565b5f60208284031215611abe57611abd611959565b5b5f611acb84828501611a95565b91505092915050565b5f8115159050919050565b611ae881611ad4565b82525050565b5f602082019050611b015f830184611adf565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b5582611b0f565b810181811067ffffffffffffffff82111715611b7457611b73611b1f565b5b80604052505050565b5f611b86611950565b9050611b928282611b4c565b919050565b5f67ffffffffffffffff821115611bb157611bb0611b1f565b5b611bba82611b0f565b9050602081019050919050565b828183375f83830152505050565b5f611be7611be284611b97565b611b7d565b905082815260208101848484011115611c0357611c02611b0b565b5b611c0e848285611bc7565b509392505050565b5f82601f830112611c2a57611c29611b07565b5b8135611c3a848260208601611bd5565b91505092915050565b5f60208284031215611c5857611c57611959565b5b5f82013567ffffffffffffffff811115611c7557611c7461195d565b5b611c8184828501611c16565b91505092915050565b5f60208284031215611c9f57611c9e611959565b5b5f611cac848285016119da565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611ce782611cb5565b611cf18185611cbf565b9350611d01818560208601611ccf565b611d0a81611b0f565b840191505092915050565b5f6020820190508181035f830152611d2d8184611cdd565b905092915050565b5f67ffffffffffffffff821115611d4f57611d4e611b1f565b5b602082029050602081019050919050565b5f80fd5b5f611d76611d7184611d35565b611b7d565b90508083825260208201905060208402830185811115611d9957611d98611d60565b5b835b81811015611dc25780611dae88826119da565b845260208401935050602081019050611d9b565b5050509392505050565b5f82601f830112611de057611ddf611b07565b5b8135611df0848260208601611d64565b91505092915050565b5f67ffffffffffffffff821115611e1357611e12611b1f565b5b611e1c82611b0f565b9050602081019050919050565b5f611e3b611e3684611df9565b611b7d565b905082815260208101848484011115611e5757611e56611b0b565b5b611e62848285611bc7565b509392505050565b5f82601f830112611e7e57611e7d611b07565b5b8135611e8e848260208601611e29565b91505092915050565b5f805f805f60a08688031215611eb057611eaf611959565b5b5f611ebd888289016119a7565b9550506020611ece888289016119a7565b945050604086013567ffffffffffffffff811115611eef57611eee61195d565b5b611efb88828901611dcc565b935050606086013567ffffffffffffffff811115611f1c57611f1b61195d565b5b611f2888828901611dcc565b925050608086013567ffffffffffffffff811115611f4957611f4861195d565b5b611f5588828901611e6a565b9150509295509295909350565b5f805f60608486031215611f7957611f78611959565b5b5f611f86868287016119a7565b9350506020611f97868287016119da565b925050604084013567ffffffffffffffff811115611fb857611fb761195d565b5b611fc486828701611e6a565b9150509250925092565b5f67ffffffffffffffff821115611fe857611fe7611b1f565b5b602082029050602081019050919050565b5f61200b61200684611fce565b611b7d565b9050808382526020820190506020840283018581111561202e5761202d611d60565b5b835b81811015612057578061204388826119a7565b845260208401935050602081019050612030565b5050509392505050565b5f82601f83011261207557612074611b07565b5b8135612085848260208601611ff9565b91505092915050565b5f80604083850312156120a4576120a3611959565b5b5f83013567ffffffffffffffff8111156120c1576120c061195d565b5b6120cd85828601612061565b925050602083013567ffffffffffffffff8111156120ee576120ed61195d565b5b6120fa85828601611dcc565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612136816119bb565b82525050565b5f612147838361212d565b60208301905092915050565b5f602082019050919050565b5f61216982612104565b612173818561210e565b935061217e8361211e565b805f5b838110156121ae578151612195888261213c565b97506121a083612153565b925050600181019050612181565b5085935050505092915050565b5f6020820190508181035f8301526121d3818461215f565b905092915050565b5f805f606084860312156121f2576121f1611959565b5b5f6121ff868287016119a7565b935050602084013567ffffffffffffffff8111156122205761221f61195d565b5b61222c86828701611dcc565b925050604084013567ffffffffffffffff81111561224d5761224c61195d565b5b61225986828701611dcc565b9150509250925092565b61226c81611980565b82525050565b5f6020820190506122855f830184612263565b92915050565b61229481611ad4565b811461229e575f80fd5b50565b5f813590506122af8161228b565b92915050565b5f80604083850312156122cb576122ca611959565b5b5f6122d8858286016119a7565b92505060206122e9858286016122a1565b9150509250929050565b5f806040838503121561230957612308611959565b5b5f612316858286016119a7565b925050602083013567ffffffffffffffff8111156123375761233661195d565b5b61234385828601611e6a565b9150509250929050565b5f806040838503121561236357612362611959565b5b5f612370858286016119a7565b9250506020612381858286016119a7565b9150509250929050565b5f805f805f60a086880312156123a4576123a3611959565b5b5f6123b1888289016119a7565b95505060206123c2888289016119a7565b94505060406123d3888289016119da565b93505060606123e4888289016119da565b925050608086013567ffffffffffffffff8111156124055761240461195d565b5b61241188828901611e6a565b9150509295509295909350565b5f6020828403121561243357612432611959565b5b5f612440848285016119a7565b91505092915050565b5f805f606084860312156124605761245f611959565b5b5f61246d868287016119a7565b935050602061247e868287016119da565b925050604061248f868287016119da565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124dd57607f821691505b6020821081036124f0576124ef612499565b5b50919050565b5f6040820190506125095f830185612263565b6125166020830184612263565b9392505050565b5f6040820190506125305f830185611a2c565b61253d6020830184611a2c565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125a8826119bb565b91506125b3836119bb565b92508282019050808211156125cb576125ca612571565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261262d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125f2565b61263786836125f2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61267261266d612668846119bb565b61264f565b6119bb565b9050919050565b5f819050919050565b61268b83612658565b61269f61269782612679565b8484546125fe565b825550505050565b5f90565b6126b36126a7565b6126be818484612682565b505050565b5b818110156126e1576126d65f826126ab565b6001810190506126c4565b5050565b601f821115612726576126f7816125d1565b612700846125e3565b8101602085101561270f578190505b61272361271b856125e3565b8301826126c3565b50505b505050565b5f82821c905092915050565b5f6127465f198460080261272b565b1980831691505092915050565b5f61275e8383612737565b9150826002028217905092915050565b61277782611cb5565b67ffffffffffffffff8111156127905761278f611b1f565b5b61279a82546124c6565b6127a58282856126e5565b5f60209050601f8311600181146127d6575f84156127c4578287015190505b6127ce8582612753565b865550612835565b601f1984166127e4866125d1565b5f5b8281101561280b578489015182556001820191506020850194506020810190506127e6565b868310156128285784890151612824601f891682612737565b8355505b6001600288020188555050505b505050505050565b5f6080820190506128505f830187612263565b61285d6020830186611a2c565b61286a6040830185611a2c565b6128776060830184611a2c565b95945050505050565b5f6040820190508181035f830152612898818561215f565b905081810360208301526128ac818461215f565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6128d9826128b5565b6128e381856128bf565b93506128f3818560208601611ccf565b6128fc81611b0f565b840191505092915050565b5f60a08201905061291a5f830188612263565b6129276020830187612263565b6129346040830186611a2c565b6129416060830185611a2c565b818103608083015261295381846128cf565b90509695505050505050565b5f8151905061296d81611a7f565b92915050565b5f6020828403121561298857612987611959565b5b5f6129958482850161295f565b91505092915050565b5f60a0820190506129b15f830188612263565b6129be6020830187612263565b81810360408301526129d0818661215f565b905081810360608301526129e4818561215f565b905081810360808301526129f881846128cf565b9050969550505050505056fea26469706673582212208188fdba4badb1d6c7b77d7c8e4312a86d05e853a58231cfa5e8c49f884e862c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x30F4 CODESIZE SUB DUP1 PUSH2 0x30F4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x34F JUMP JUMPDEST DUP2 DUP2 PUSH2 0x42 DUP2 PUSH2 0xD2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x3B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2 DUP2 PUSH2 0xE5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x6AD JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x5DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2 DUP3 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F2 DUP2 PUSH2 0x1D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20D DUP2 PUSH2 0x1E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x261 DUP3 PUSH2 0x21B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x280 JUMPI PUSH2 0x27F PUSH2 0x22B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x292 PUSH2 0x1A8 JUMP JUMPDEST SWAP1 POP PUSH2 0x29E DUP3 DUP3 PUSH2 0x258 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BC PUSH2 0x22B JUMP JUMPDEST JUMPDEST PUSH2 0x2C6 DUP3 PUSH2 0x21B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F3 PUSH2 0x2EE DUP5 PUSH2 0x2A3 JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x30F JUMPI PUSH2 0x30E PUSH2 0x217 JUMP JUMPDEST JUMPDEST PUSH2 0x31A DUP5 DUP3 DUP6 PUSH2 0x2D3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x336 JUMPI PUSH2 0x335 PUSH2 0x213 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x346 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x365 JUMPI PUSH2 0x364 PUSH2 0x1B1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x372 DUP6 DUP3 DUP7 ADD PUSH2 0x1FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x393 JUMPI PUSH2 0x392 PUSH2 0x1B5 JUMP JUMPDEST JUMPDEST PUSH2 0x39F DUP6 DUP3 DUP7 ADD PUSH2 0x322 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3B2 DUP2 PUSH2 0x1D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CB PUSH0 DUP4 ADD DUP5 PUSH2 0x3A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x41F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x3DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x494 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x49E DUP7 DUP4 PUSH2 0x459 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4E2 PUSH2 0x4DD PUSH2 0x4D8 DUP5 PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FB DUP4 PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x50F PUSH2 0x507 DUP3 PUSH2 0x4E9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x465 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x523 PUSH2 0x517 JUMP JUMPDEST PUSH2 0x52E DUP2 DUP5 DUP5 PUSH2 0x4F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH2 0x546 PUSH0 DUP3 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x534 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x596 JUMPI PUSH2 0x567 DUP2 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x570 DUP5 PUSH2 0x44A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x57F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x593 PUSH2 0x58B DUP6 PUSH2 0x44A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x533 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5B6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x59B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5CE DUP4 DUP4 PUSH2 0x5A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E7 DUP3 PUSH2 0x3D1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x600 JUMPI PUSH2 0x5FF PUSH2 0x22B JUMP JUMPDEST JUMPDEST PUSH2 0x60A DUP3 SLOAD PUSH2 0x408 JUMP JUMPDEST PUSH2 0x615 DUP3 DUP3 DUP6 PUSH2 0x555 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x646 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x634 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x63E DUP6 DUP3 PUSH2 0x5C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x654 DUP7 PUSH2 0x438 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x67B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x656 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x698 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x694 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2A3A DUP1 PUSH2 0x6BA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2F9 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xB510391F EQ PUSH2 0x275 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x31F0E6C8 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x215 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x17D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0x77A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x241E JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x2449 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x434 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x443 DUP3 PUSH2 0xA69 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x45C DUP2 PUSH2 0xB59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x46E SWAP1 PUSH2 0x24C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49A SWAP1 PUSH2 0x24C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4FA PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI POP PUSH2 0x53D DUP7 DUP3 PUSH2 0x804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x583 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x590 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB73 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0xAD2 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5B4 DUP5 DUP4 PUSH2 0x7CB JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5A2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x613 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60A SWAP3 SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6C3 JUMPI PUSH2 0x699 PUSH2 0x681 DUP3 DUP8 PUSH2 0xC67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x694 DUP4 DUP8 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0x2544 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x662 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D6 PUSH2 0xB6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x71F JUMPI POP PUSH2 0x71D DUP4 PUSH2 0x718 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x76A JUMPI PUSH2 0x72C PUSH2 0xB6C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x761 SWAP3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x775 DUP4 DUP4 DUP4 PUSH2 0xC8D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x782 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x78B PUSH0 PUSH2 0xD1D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7C7 PUSH2 0x7C0 PUSH2 0xB6C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xAD2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x7E6 DUP4 DUP3 PUSH1 0x1 DUP6 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x89B PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8E0 JUMPI POP PUSH2 0x8DE DUP7 DUP3 PUSH2 0x804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x924 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x931 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xFDE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x941 PUSH2 0xAD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A8 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BA DUP2 PUSH2 0xD1D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C5 PUSH2 0xB6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA0E JUMPI POP PUSH2 0xA0C DUP4 PUSH2 0xA07 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA1B PUSH2 0xB6C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA64 DUP4 DUP4 DUP4 PUSH2 0x10E4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADA PUSH2 0xB6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAF8 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB57 JUMPI PUSH2 0xB1B PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x276E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDA SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC53 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC60 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCFD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD18 DUP4 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1186 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE50 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xFC5 DUP6 DUP6 PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xFD6 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x104E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1045 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x10CA DUP6 DUP6 PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10DB DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1154 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x1160 DUP5 DUP5 PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x117F DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1192 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1262 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x122B JUMPI PUSH0 PUSH2 0x11CE PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x121A JUMPI PUSH0 PUSH2 0x11ED PUSH0 DUP7 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1203 PUSH0 DUP7 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1213 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x15F2 JUMP JUMPDEST POP POP PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x1228 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x12AC JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A3 SWAP3 SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x12B5 PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x14B1 JUMPI PUSH0 PUSH2 0x12D6 DUP3 DUP7 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12EC DUP4 DUP7 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x140F JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13BB JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x283D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14A4 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x149C SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x12B9 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x156C JUMPI PUSH0 PUSH2 0x14CF PUSH0 DUP6 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x14E5 PUSH0 DUP6 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x155D SWAP3 SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x15EB JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x15E2 SWAP3 SWAP2 SWAP1 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1799 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1652 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2907 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x168D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x170E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1706 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1797 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178E SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1948 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1801 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x299E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x183C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x18BD JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x186A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x186F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x18B5 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AC SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1946 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193D SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x198A DUP3 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199A DUP2 PUSH2 0x1980 JUMP JUMPDEST DUP2 EQ PUSH2 0x19A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B5 DUP2 PUSH2 0x1991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP2 EQ PUSH2 0x19D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E8 DUP2 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A11 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A22 DUP6 DUP3 DUP7 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4E PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A88 DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A92 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA3 DUP2 PUSH2 0x1A7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABE JUMPI PUSH2 0x1ABD PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACB DUP5 DUP3 DUP6 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B01 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B55 DUP3 PUSH2 0x1B0F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B74 JUMPI PUSH2 0x1B73 PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B86 PUSH2 0x1950 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B92 DUP3 DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BB1 JUMPI PUSH2 0x1BB0 PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH2 0x1BBA DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE7 PUSH2 0x1BE2 DUP5 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C03 JUMPI PUSH2 0x1C02 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST PUSH2 0x1C0E DUP5 DUP3 DUP6 PUSH2 0x1BC7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x1B07 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C3A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1C81 DUP5 DUP3 DUP6 ADD PUSH2 0x1C16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9F JUMPI PUSH2 0x1C9E PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CAC DUP5 DUP3 DUP6 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE7 DUP3 PUSH2 0x1CB5 JUMP JUMPDEST PUSH2 0x1CF1 DUP2 DUP6 PUSH2 0x1CBF JUMP JUMPDEST SWAP4 POP PUSH2 0x1D01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1D0A DUP2 PUSH2 0x1B0F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D2D DUP2 DUP5 PUSH2 0x1CDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D4F JUMPI PUSH2 0x1D4E PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1D76 PUSH2 0x1D71 DUP5 PUSH2 0x1D35 JUMP JUMPDEST PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1D60 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DC2 JUMPI DUP1 PUSH2 0x1DAE DUP9 DUP3 PUSH2 0x19DA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D9B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x1B07 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E13 JUMPI PUSH2 0x1E12 PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH2 0x1E1C DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3B PUSH2 0x1E36 DUP5 PUSH2 0x1DF9 JUMP JUMPDEST PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E57 JUMPI PUSH2 0x1E56 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST PUSH2 0x1E62 DUP5 DUP3 DUP6 PUSH2 0x1BC7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x1B07 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E8E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EBD DUP9 DUP3 DUP10 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1ECE DUP9 DUP3 DUP10 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EEF JUMPI PUSH2 0x1EEE PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1EFB DUP9 DUP3 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1F28 DUP9 DUP3 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F49 JUMPI PUSH2 0x1F48 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1F55 DUP9 DUP3 DUP10 ADD PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F86 DUP7 DUP3 DUP8 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F97 DUP7 DUP3 DUP8 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1FC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE8 JUMPI PUSH2 0x1FE7 PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x200B PUSH2 0x2006 DUP5 PUSH2 0x1FCE JUMP JUMPDEST PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x202E JUMPI PUSH2 0x202D PUSH2 0x1D60 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2057 JUMPI DUP1 PUSH2 0x2043 DUP9 DUP3 PUSH2 0x19A7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2030 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1B07 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2085 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A3 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C1 JUMPI PUSH2 0x20C0 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x20CD DUP6 DUP3 DUP7 ADD PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20EE JUMPI PUSH2 0x20ED PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x20FA DUP6 DUP3 DUP7 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2136 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2147 DUP4 DUP4 PUSH2 0x212D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2169 DUP3 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x2173 DUP2 DUP6 PUSH2 0x210E JUMP JUMPDEST SWAP4 POP PUSH2 0x217E DUP4 PUSH2 0x211E JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21AE JUMPI DUP2 MLOAD PUSH2 0x2195 DUP9 DUP3 PUSH2 0x213C JUMP JUMPDEST SWAP8 POP PUSH2 0x21A0 DUP4 PUSH2 0x2153 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2181 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D3 DUP2 DUP5 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21F2 JUMPI PUSH2 0x21F1 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21FF DUP7 DUP3 DUP8 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x222C DUP7 DUP3 DUP8 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x2259 DUP7 DUP3 DUP8 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x226C DUP2 PUSH2 0x1980 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2285 PUSH0 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2294 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x229E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22AF DUP2 PUSH2 0x228B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22CB JUMPI PUSH2 0x22CA PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22D8 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E9 DUP6 DUP3 DUP7 ADD PUSH2 0x22A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2309 JUMPI PUSH2 0x2308 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2316 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2337 JUMPI PUSH2 0x2336 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x2343 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2362 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2370 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2381 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23A4 JUMPI PUSH2 0x23A3 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B1 DUP9 DUP3 DUP10 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23C2 DUP9 DUP3 DUP10 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23D3 DUP9 DUP3 DUP10 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x23E4 DUP9 DUP3 DUP10 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2405 JUMPI PUSH2 0x2404 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x2411 DUP9 DUP3 DUP10 ADD PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2433 JUMPI PUSH2 0x2432 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2440 DUP5 DUP3 DUP6 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2460 JUMPI PUSH2 0x245F PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x246D DUP7 DUP3 DUP8 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x247E DUP7 DUP3 DUP8 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x248F DUP7 DUP3 DUP8 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24F0 JUMPI PUSH2 0x24EF PUSH2 0x2499 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2509 PUSH0 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2516 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2530 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x253D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25A8 DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH2 0x25B3 DUP4 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25CB JUMPI PUSH2 0x25CA PUSH2 0x2571 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x262D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x25F2 JUMP JUMPDEST PUSH2 0x2637 DUP7 DUP4 PUSH2 0x25F2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2672 PUSH2 0x266D PUSH2 0x2668 DUP5 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x264F JUMP JUMPDEST PUSH2 0x19BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x268B DUP4 PUSH2 0x2658 JUMP JUMPDEST PUSH2 0x269F PUSH2 0x2697 DUP3 PUSH2 0x2679 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x25FE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x26B3 PUSH2 0x26A7 JUMP JUMPDEST PUSH2 0x26BE DUP2 DUP5 DUP5 PUSH2 0x2682 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x26E1 JUMPI PUSH2 0x26D6 PUSH0 DUP3 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2726 JUMPI PUSH2 0x26F7 DUP2 PUSH2 0x25D1 JUMP JUMPDEST PUSH2 0x2700 DUP5 PUSH2 0x25E3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x270F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2723 PUSH2 0x271B DUP6 PUSH2 0x25E3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x26C3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2746 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x272B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x275E DUP4 DUP4 PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2777 DUP3 PUSH2 0x1CB5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2790 JUMPI PUSH2 0x278F PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH2 0x279A DUP3 SLOAD PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x27A5 DUP3 DUP3 DUP6 PUSH2 0x26E5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x27D6 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x27C4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x27CE DUP6 DUP3 PUSH2 0x2753 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2835 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x27E4 DUP7 PUSH2 0x25D1 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x280B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27E6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2828 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2824 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2737 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2850 PUSH0 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x285D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x286A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x2877 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2898 DUP2 DUP6 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x28AC DUP2 DUP5 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28D9 DUP3 PUSH2 0x28B5 JUMP JUMPDEST PUSH2 0x28E3 DUP2 DUP6 PUSH2 0x28BF JUMP JUMPDEST SWAP4 POP PUSH2 0x28F3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x28FC DUP2 PUSH2 0x1B0F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x291A PUSH0 DUP4 ADD DUP9 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2927 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2934 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x2941 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A2C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2953 DUP2 DUP5 PUSH2 0x28CF JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x296D DUP2 PUSH2 0x1A7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2995 DUP5 DUP3 DUP6 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x29B1 PUSH0 DUP4 ADD DUP9 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x29BE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x29D0 DUP2 DUP7 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x29E4 DUP2 DUP6 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x29F8 DUP2 DUP5 PUSH2 0x28CF JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 DUP9 REVERT 0xBA 0x4B 0xAD 0xB1 0xD6 0xC7 0xB7 PUSH30 0x7C8E4312A86D05E853A58231CFA5E8C49F884E862C64736F6C634300081A STOP CALLER ",
							"sourceMap": "300:741:13:-:0;;;399:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;501:12;485:6;1293:13:2;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;540:1:13::2;525:12;:16;;;;399:149:::0;;300:741;;10282:86:2;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:139::-;2210:6;2205:3;2200;2194:23;2251:1;2242:6;2237:3;2233:16;2226:27;2121:139;;;:::o;2266:434::-;2355:5;2380:66;2396:49;2438:6;2396:49;:::i;:::-;2380:66;:::i;:::-;2371:75;;2469:6;2462:5;2455:21;2507:4;2500:5;2496:16;2545:3;2536:6;2531:3;2527:16;2524:25;2521:112;;;2552:79;;:::i;:::-;2521:112;2642:52;2687:6;2682:3;2677;2642:52;:::i;:::-;2361:339;2266:434;;;;;:::o;2720:355::-;2787:5;2836:3;2829:4;2821:6;2817:17;2813:27;2803:122;;2844:79;;:::i;:::-;2803:122;2954:6;2948:13;2979:90;3065:3;3057:6;3050:4;3042:6;3038:17;2979:90;:::i;:::-;2970:99;;2793:282;2720:355;;;;:::o;3081:680::-;3170:6;3178;3227:2;3215:9;3206:7;3202:23;3198:32;3195:119;;;3233:79;;:::i;:::-;3195:119;3353:1;3378:64;3434:7;3425:6;3414:9;3410:22;3378:64;:::i;:::-;3368:74;;3324:128;3512:2;3501:9;3497:18;3491:25;3543:18;3535:6;3532:30;3529:117;;;3565:79;;:::i;:::-;3529:117;3670:74;3736:7;3727:6;3716:9;3712:22;3670:74;:::i;:::-;3660:84;;3462:292;3081:680;;;;;:::o;3767:118::-;3854:24;3872:5;3854:24;:::i;:::-;3849:3;3842:37;3767:118;;:::o;3891:222::-;3984:4;4022:2;4011:9;4007:18;3999:26;;4035:71;4103:1;4092:9;4088:17;4079:6;4035:71;:::i;:::-;3891:222;;;;:::o;4119:99::-;4171:6;4205:5;4199:12;4189:22;;4119:99;;;:::o;4224:180::-;4272:77;4269:1;4262:88;4369:4;4366:1;4359:15;4393:4;4390:1;4383:15;4410:320;4454:6;4491:1;4485:4;4481:12;4471:22;;4538:1;4532:4;4528:12;4559:18;4549:81;;4615:4;4607:6;4603:17;4593:27;;4549:81;4677:2;4669:6;4666:14;4646:18;4643:38;4640:84;;4696:18;;:::i;:::-;4640:84;4461:269;4410:320;;;:::o;4736:141::-;4785:4;4808:3;4800:11;;4831:3;4828:1;4821:14;4865:4;4862:1;4852:18;4844:26;;4736:141;;;:::o;4883:93::-;4920:6;4967:2;4962;4955:5;4951:14;4947:23;4937:33;;4883:93;;;:::o;4982:107::-;5026:8;5076:5;5070:4;5066:16;5045:37;;4982:107;;;;:::o;5095:393::-;5164:6;5214:1;5202:10;5198:18;5237:97;5267:66;5256:9;5237:97;:::i;:::-;5355:39;5385:8;5374:9;5355:39;:::i;:::-;5343:51;;5427:4;5423:9;5416:5;5412:21;5403:30;;5476:4;5466:8;5462:19;5455:5;5452:30;5442:40;;5171:317;;5095:393;;;;;:::o;5494:77::-;5531:7;5560:5;5549:16;;5494:77;;;:::o;5577:60::-;5605:3;5626:5;5619:12;;5577:60;;;:::o;5643:142::-;5693:9;5726:53;5744:34;5753:24;5771:5;5753:24;:::i;:::-;5744:34;:::i;:::-;5726:53;:::i;:::-;5713:66;;5643:142;;;:::o;5791:75::-;5834:3;5855:5;5848:12;;5791:75;;;:::o;5872:269::-;5982:39;6013:7;5982:39;:::i;:::-;6043:91;6092:41;6116:16;6092:41;:::i;:::-;6084:6;6077:4;6071:11;6043:91;:::i;:::-;6037:4;6030:105;5948:193;5872:269;;;:::o;6147:73::-;6192:3;6147:73;:::o;6226:189::-;6303:32;;:::i;:::-;6344:65;6402:6;6394;6388:4;6344:65;:::i;:::-;6279:136;6226:189;;:::o;6421:186::-;6481:120;6498:3;6491:5;6488:14;6481:120;;;6552:39;6589:1;6582:5;6552:39;:::i;:::-;6525:1;6518:5;6514:13;6505:22;;6481:120;;;6421:186;;:::o;6613:543::-;6714:2;6709:3;6706:11;6703:446;;;6748:38;6780:5;6748:38;:::i;:::-;6832:29;6850:10;6832:29;:::i;:::-;6822:8;6818:44;7015:2;7003:10;7000:18;6997:49;;;7036:8;7021:23;;6997:49;7059:80;7115:22;7133:3;7115:22;:::i;:::-;7105:8;7101:37;7088:11;7059:80;:::i;:::-;6718:431;;6703:446;6613:543;;;:::o;7162:117::-;7216:8;7266:5;7260:4;7256:16;7235:37;;7162:117;;;;:::o;7285:169::-;7329:6;7362:51;7410:1;7406:6;7398:5;7395:1;7391:13;7362:51;:::i;:::-;7358:56;7443:4;7437;7433:15;7423:25;;7336:118;7285:169;;;;:::o;7459:295::-;7535:4;7681:29;7706:3;7700:4;7681:29;:::i;:::-;7673:37;;7743:3;7740:1;7736:11;7730:4;7727:21;7719:29;;7459:295;;;;:::o;7759:1395::-;7876:37;7909:3;7876:37;:::i;:::-;7978:18;7970:6;7967:30;7964:56;;;8000:18;;:::i;:::-;7964:56;8044:38;8076:4;8070:11;8044:38;:::i;:::-;8129:67;8189:6;8181;8175:4;8129:67;:::i;:::-;8223:1;8247:4;8234:17;;8279:2;8271:6;8268:14;8296:1;8291:618;;;;8953:1;8970:6;8967:77;;;9019:9;9014:3;9010:19;9004:26;8995:35;;8967:77;9070:67;9130:6;9123:5;9070:67;:::i;:::-;9064:4;9057:81;8926:222;8261:887;;8291:618;8343:4;8339:9;8331:6;8327:22;8377:37;8409:4;8377:37;:::i;:::-;8436:1;8450:208;8464:7;8461:1;8458:14;8450:208;;;8543:9;8538:3;8534:19;8528:26;8520:6;8513:42;8594:1;8586:6;8582:14;8572:24;;8641:2;8630:9;8626:18;8613:31;;8487:4;8484:1;8480:12;8475:17;;8450:208;;;8686:6;8677:7;8674:19;8671:179;;;8744:9;8739:3;8735:19;8729:26;8787:48;8829:4;8821:6;8817:17;8806:9;8787:48;:::i;:::-;8779:6;8772:64;8694:156;8671:179;8896:1;8892;8884:6;8880:14;8876:22;8870:4;8863:36;8298:611;;;8261:887;;7851:1303;;;7759:1395;;:::o;300:741:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1334": {
									"entryPoint": 4658,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_burnBatch_1140": {
									"entryPoint": 3213,
									"id": 1140,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1101": {
									"entryPoint": 4324,
									"id": 1101,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2770,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1318": {
									"entryPoint": 6049,
									"id": 1318,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1248": {
									"entryPoint": 5618,
									"id": 1248,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_1010": {
									"entryPoint": 3913,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1791": {
									"entryPoint": 2924,
									"id": 1791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_947": {
									"entryPoint": 2931,
									"id": 947,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_892": {
									"entryPoint": 4062,
									"id": 892,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1180": {
									"entryPoint": 3552,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 2905,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3357,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_826": {
									"entryPoint": 4486,
									"id": 826,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_750": {
									"entryPoint": 4706,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_474": {
									"entryPoint": 1479,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_404": {
									"entryPoint": 789,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnBatch_1579": {
									"entryPoint": 1742,
									"id": 1579,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_1542": {
									"entryPoint": 2493,
									"id": 1542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_507": {
									"entryPoint": 2052,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintBatch_3106": {
									"entryPoint": 1432,
									"id": 3106,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@mint_3077": {
									"entryPoint": 1995,
									"id": 3077,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1933,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1914,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_597": {
									"entryPoint": 1265,
									"id": 597,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_551": {
									"entryPoint": 2194,
									"id": 551,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_490": {
									"entryPoint": 1973,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_3052": {
									"entryPoint": 1099,
									"id": 3052,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1942": {
									"entryPoint": 2665,
									"id": 1942,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_376": {
									"entryPoint": 874,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2361,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1765": {
									"entryPoint": 3194,
									"id": 1765,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1778": {
									"entryPoint": 3175,
									"id": 1778,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_387": {
									"entryPoint": 1119,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7721,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 9099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 9289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 7235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10654,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10503,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10301,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10368,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9957,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9585,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9369,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6493,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9726,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9858,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:32344:14",
										"nodeType": "YulBlock",
										"src": "0:32344:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "611:79:14",
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:14",
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:14",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nativeSrc": "670:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nativeSrc": "670:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nativeSrc": "641:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nativeSrc": "631:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nativeSrc": "624:43:14",
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nativeSrc": "621:63:14",
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:14",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nativeSrc": "748:87:14",
													"nodeType": "YulBlock",
													"src": "748:87:14",
													"statements": [
														{
															"nativeSrc": "758:29:14",
															"nodeType": "YulAssignment",
															"src": "758:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:14"
																},
																"nativeSrc": "767:20:14",
																"nodeType": "YulFunctionCall",
																"src": "767:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:14"
																},
																"nativeSrc": "796:33:14",
																"nodeType": "YulFunctionCall",
																"src": "796:33:14"
															},
															"nativeSrc": "796:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:14",
														"nodeType": "YulTypedName",
														"src": "726:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:14",
														"nodeType": "YulTypedName",
														"src": "734:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:14",
														"nodeType": "YulTypedName",
														"src": "742:5:14",
														"type": ""
													}
												],
												"src": "696:139:14"
											},
											{
												"body": {
													"nativeSrc": "886:32:14",
													"nodeType": "YulBlock",
													"src": "886:32:14",
													"statements": [
														{
															"nativeSrc": "896:16:14",
															"nodeType": "YulAssignment",
															"src": "896:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:14",
																"nodeType": "YulIdentifier",
																"src": "907:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:14",
														"nodeType": "YulTypedName",
														"src": "868:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:14",
														"nodeType": "YulTypedName",
														"src": "878:7:14",
														"type": ""
													}
												],
												"src": "841:77:14"
											},
											{
												"body": {
													"nativeSrc": "967:79:14",
													"nodeType": "YulBlock",
													"src": "967:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:14",
																"nodeType": "YulBlock",
																"src": "1024:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:14"
																			},
																			"nativeSrc": "1026:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:14"
																		},
																		"nativeSrc": "1026:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:14"
																				},
																				"nativeSrc": "997:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:14"
																		},
																		"nativeSrc": "987:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:14"
																},
																"nativeSrc": "980:43:14",
																"nodeType": "YulFunctionCall",
																"src": "980:43:14"
															},
															"nativeSrc": "977:63:14",
															"nodeType": "YulIf",
															"src": "977:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:14",
														"nodeType": "YulTypedName",
														"src": "960:5:14",
														"type": ""
													}
												],
												"src": "924:122:14"
											},
											{
												"body": {
													"nativeSrc": "1104:87:14",
													"nodeType": "YulBlock",
													"src": "1104:87:14",
													"statements": [
														{
															"nativeSrc": "1114:29:14",
															"nodeType": "YulAssignment",
															"src": "1114:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:14"
																},
																"nativeSrc": "1123:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:14"
																},
																"nativeSrc": "1152:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:14"
															},
															"nativeSrc": "1152:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:14",
														"nodeType": "YulTypedName",
														"src": "1082:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:14",
														"nodeType": "YulTypedName",
														"src": "1090:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:14",
														"nodeType": "YulTypedName",
														"src": "1098:5:14",
														"type": ""
													}
												],
												"src": "1052:139:14"
											},
											{
												"body": {
													"nativeSrc": "1280:391:14",
													"nodeType": "YulBlock",
													"src": "1280:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:14",
																"nodeType": "YulBlock",
																"src": "1326:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:14"
																			},
																			"nativeSrc": "1328:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:14"
																		},
																		"nativeSrc": "1328:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:14"
																		},
																		"nativeSrc": "1297:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:14"
																},
																"nativeSrc": "1293:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:14"
															},
															"nativeSrc": "1290:119:14",
															"nodeType": "YulIf",
															"src": "1290:119:14"
														},
														{
															"nativeSrc": "1419:117:14",
															"nodeType": "YulBlock",
															"src": "1419:117:14",
															"statements": [
																{
																	"nativeSrc": "1434:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:14"
																				},
																				"nativeSrc": "1494:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:14"
																		},
																		"nativeSrc": "1473:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:14",
															"nodeType": "YulBlock",
															"src": "1546:118:14",
															"statements": [
																{
																	"nativeSrc": "1561:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:14"
																				},
																				"nativeSrc": "1622:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:14"
																		},
																		"nativeSrc": "1601:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:14",
														"nodeType": "YulTypedName",
														"src": "1242:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:14",
														"nodeType": "YulTypedName",
														"src": "1253:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:14",
														"nodeType": "YulTypedName",
														"src": "1265:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:14",
														"nodeType": "YulTypedName",
														"src": "1273:6:14",
														"type": ""
													}
												],
												"src": "1197:474:14"
											},
											{
												"body": {
													"nativeSrc": "1742:53:14",
													"nodeType": "YulBlock",
													"src": "1742:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:14"
																		},
																		"nativeSrc": "1764:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:14"
																},
																"nativeSrc": "1752:37:14",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:14"
															},
															"nativeSrc": "1752:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:14",
														"nodeType": "YulTypedName",
														"src": "1730:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:14",
														"nodeType": "YulTypedName",
														"src": "1737:3:14",
														"type": ""
													}
												],
												"src": "1677:118:14"
											},
											{
												"body": {
													"nativeSrc": "1899:124:14",
													"nodeType": "YulBlock",
													"src": "1899:124:14",
													"statements": [
														{
															"nativeSrc": "1909:26:14",
															"nodeType": "YulAssignment",
															"src": "1909:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:14"
																},
																"nativeSrc": "1917:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:14"
																		},
																		"nativeSrc": "1998:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:14"
																},
																"nativeSrc": "1945:71:14",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:14"
															},
															"nativeSrc": "1945:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:14",
														"nodeType": "YulTypedName",
														"src": "1871:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:14",
														"nodeType": "YulTypedName",
														"src": "1883:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:14",
														"nodeType": "YulTypedName",
														"src": "1894:4:14",
														"type": ""
													}
												],
												"src": "1801:222:14"
											},
											{
												"body": {
													"nativeSrc": "2073:105:14",
													"nodeType": "YulBlock",
													"src": "2073:105:14",
													"statements": [
														{
															"nativeSrc": "2083:89:14",
															"nodeType": "YulAssignment",
															"src": "2083:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:14",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:14"
																},
																"nativeSrc": "2094:78:14",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:14",
														"nodeType": "YulTypedName",
														"src": "2055:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:14",
														"nodeType": "YulTypedName",
														"src": "2065:7:14",
														"type": ""
													}
												],
												"src": "2029:149:14"
											},
											{
												"body": {
													"nativeSrc": "2226:78:14",
													"nodeType": "YulBlock",
													"src": "2226:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:14",
																"nodeType": "YulBlock",
																"src": "2282:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:14"
																			},
																			"nativeSrc": "2284:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:14"
																		},
																		"nativeSrc": "2284:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:14"
																				},
																				"nativeSrc": "2256:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:14"
																		},
																		"nativeSrc": "2246:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:14"
																},
																"nativeSrc": "2239:42:14",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:14"
															},
															"nativeSrc": "2236:62:14",
															"nodeType": "YulIf",
															"src": "2236:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:14",
														"nodeType": "YulTypedName",
														"src": "2219:5:14",
														"type": ""
													}
												],
												"src": "2184:120:14"
											},
											{
												"body": {
													"nativeSrc": "2361:86:14",
													"nodeType": "YulBlock",
													"src": "2361:86:14",
													"statements": [
														{
															"nativeSrc": "2371:29:14",
															"nodeType": "YulAssignment",
															"src": "2371:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:14"
																},
																"nativeSrc": "2380:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:14"
																},
																"nativeSrc": "2409:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:14"
															},
															"nativeSrc": "2409:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:14",
														"nodeType": "YulTypedName",
														"src": "2339:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:14",
														"nodeType": "YulTypedName",
														"src": "2347:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:14",
														"nodeType": "YulTypedName",
														"src": "2355:5:14",
														"type": ""
													}
												],
												"src": "2310:137:14"
											},
											{
												"body": {
													"nativeSrc": "2518:262:14",
													"nodeType": "YulBlock",
													"src": "2518:262:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:14",
																"nodeType": "YulBlock",
																"src": "2564:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:14"
																			},
																			"nativeSrc": "2566:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:14"
																		},
																		"nativeSrc": "2566:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:14"
																		},
																		"nativeSrc": "2535:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:14"
																},
																"nativeSrc": "2531:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:14"
															},
															"nativeSrc": "2528:119:14",
															"nodeType": "YulIf",
															"src": "2528:119:14"
														},
														{
															"nativeSrc": "2657:116:14",
															"nodeType": "YulBlock",
															"src": "2657:116:14",
															"statements": [
																{
																	"nativeSrc": "2672:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:14",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:14"
																				},
																				"nativeSrc": "2731:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:14"
																		},
																		"nativeSrc": "2711:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:14",
														"nodeType": "YulTypedName",
														"src": "2488:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:14",
														"nodeType": "YulTypedName",
														"src": "2499:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:14",
														"nodeType": "YulTypedName",
														"src": "2511:6:14",
														"type": ""
													}
												],
												"src": "2453:327:14"
											},
											{
												"body": {
													"nativeSrc": "2828:48:14",
													"nodeType": "YulBlock",
													"src": "2828:48:14",
													"statements": [
														{
															"nativeSrc": "2838:32:14",
															"nodeType": "YulAssignment",
															"src": "2838:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:14"
																		},
																		"nativeSrc": "2856:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:14"
																},
																"nativeSrc": "2849:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:14",
														"nodeType": "YulTypedName",
														"src": "2810:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:14",
														"nodeType": "YulTypedName",
														"src": "2820:7:14",
														"type": ""
													}
												],
												"src": "2786:90:14"
											},
											{
												"body": {
													"nativeSrc": "2941:50:14",
													"nodeType": "YulBlock",
													"src": "2941:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:14"
																		},
																		"nativeSrc": "2963:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:14"
																},
																"nativeSrc": "2951:34:14",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:14"
															},
															"nativeSrc": "2951:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:14",
														"nodeType": "YulTypedName",
														"src": "2929:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:14",
														"nodeType": "YulTypedName",
														"src": "2936:3:14",
														"type": ""
													}
												],
												"src": "2882:109:14"
											},
											{
												"body": {
													"nativeSrc": "3089:118:14",
													"nodeType": "YulBlock",
													"src": "3089:118:14",
													"statements": [
														{
															"nativeSrc": "3099:26:14",
															"nodeType": "YulAssignment",
															"src": "3099:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:14"
																},
																"nativeSrc": "3107:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:14"
																		},
																		"nativeSrc": "3182:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:14"
																},
																"nativeSrc": "3135:65:14",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:14"
															},
															"nativeSrc": "3135:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:14",
														"nodeType": "YulTypedName",
														"src": "3061:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:14",
														"nodeType": "YulTypedName",
														"src": "3073:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:14",
														"nodeType": "YulTypedName",
														"src": "3084:4:14",
														"type": ""
													}
												],
												"src": "2997:210:14"
											},
											{
												"body": {
													"nativeSrc": "3302:28:14",
													"nodeType": "YulBlock",
													"src": "3302:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3319:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3322:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3322:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3312:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:14"
																},
																"nativeSrc": "3312:12:14",
																"nodeType": "YulFunctionCall",
																"src": "3312:12:14"
															},
															"nativeSrc": "3312:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "3312:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3213:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "3213:117:14"
											},
											{
												"body": {
													"nativeSrc": "3425:28:14",
													"nodeType": "YulBlock",
													"src": "3425:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3442:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3442:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3445:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3445:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3435:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3435:6:14"
																},
																"nativeSrc": "3435:12:14",
																"nodeType": "YulFunctionCall",
																"src": "3435:12:14"
															},
															"nativeSrc": "3435:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "3435:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3336:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "3336:117:14"
											},
											{
												"body": {
													"nativeSrc": "3507:54:14",
													"nodeType": "YulBlock",
													"src": "3507:54:14",
													"statements": [
														{
															"nativeSrc": "3517:38:14",
															"nodeType": "YulAssignment",
															"src": "3517:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3535:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3535:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3542:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3531:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:14"
																		},
																		"nativeSrc": "3531:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3531:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3551:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3551:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3547:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3547:3:14"
																		},
																		"nativeSrc": "3547:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3547:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3527:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3527:3:14"
																},
																"nativeSrc": "3527:28:14",
																"nodeType": "YulFunctionCall",
																"src": "3527:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3517:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3459:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3490:5:14",
														"nodeType": "YulTypedName",
														"src": "3490:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3500:6:14",
														"nodeType": "YulTypedName",
														"src": "3500:6:14",
														"type": ""
													}
												],
												"src": "3459:102:14"
											},
											{
												"body": {
													"nativeSrc": "3595:152:14",
													"nodeType": "YulBlock",
													"src": "3595:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3612:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3612:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:77:14",
																		"nodeType": "YulLiteral",
																		"src": "3615:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3605:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:14"
																},
																"nativeSrc": "3605:88:14",
																"nodeType": "YulFunctionCall",
																"src": "3605:88:14"
															},
															"nativeSrc": "3605:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "3605:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3709:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3709:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3712:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3712:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3702:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:14"
																},
																"nativeSrc": "3702:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3702:15:14"
															},
															"nativeSrc": "3702:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3702:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3733:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3733:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3736:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3736:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3726:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:14"
																},
																"nativeSrc": "3726:15:14",
																"nodeType": "YulFunctionCall",
																"src": "3726:15:14"
															},
															"nativeSrc": "3726:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "3726:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3567:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "3567:180:14"
											},
											{
												"body": {
													"nativeSrc": "3796:238:14",
													"nodeType": "YulBlock",
													"src": "3796:238:14",
													"statements": [
														{
															"nativeSrc": "3806:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3806:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3828:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3858:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "3858:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3836:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "3836:21:14"
																		},
																		"nativeSrc": "3836:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3836:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3824:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3824:3:14"
																},
																"nativeSrc": "3824:40:14",
																"nodeType": "YulFunctionCall",
																"src": "3824:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3810:10:14",
																	"nodeType": "YulTypedName",
																	"src": "3810:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3975:22:14",
																"nodeType": "YulBlock",
																"src": "3975:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3977:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "3977:16:14"
																			},
																			"nativeSrc": "3977:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:18:14"
																		},
																		"nativeSrc": "3977:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3918:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "3918:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3930:18:14",
																				"nodeType": "YulLiteral",
																				"src": "3930:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3915:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3915:2:14"
																		},
																		"nativeSrc": "3915:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3954:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "3954:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3966:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3966:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3951:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3951:2:14"
																		},
																		"nativeSrc": "3951:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3951:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3912:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3912:2:14"
																},
																"nativeSrc": "3912:62:14",
																"nodeType": "YulFunctionCall",
																"src": "3912:62:14"
															},
															"nativeSrc": "3909:88:14",
															"nodeType": "YulIf",
															"src": "3909:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4013:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4013:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4017:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "4017:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4006:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:14"
																},
																"nativeSrc": "4006:22:14",
																"nodeType": "YulFunctionCall",
																"src": "4006:22:14"
															},
															"nativeSrc": "4006:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "4006:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3753:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3782:6:14",
														"nodeType": "YulTypedName",
														"src": "3782:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3790:4:14",
														"nodeType": "YulTypedName",
														"src": "3790:4:14",
														"type": ""
													}
												],
												"src": "3753:281:14"
											},
											{
												"body": {
													"nativeSrc": "4081:88:14",
													"nodeType": "YulBlock",
													"src": "4081:88:14",
													"statements": [
														{
															"nativeSrc": "4091:30:14",
															"nodeType": "YulAssignment",
															"src": "4091:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4101:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4101:18:14"
																},
																"nativeSrc": "4101:20:14",
																"nodeType": "YulFunctionCall",
																"src": "4101:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4091:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4150:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4150:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4158:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4130:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "4130:19:14"
																},
																"nativeSrc": "4130:33:14",
																"nodeType": "YulFunctionCall",
																"src": "4130:33:14"
															},
															"nativeSrc": "4130:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "4130:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4040:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4065:4:14",
														"nodeType": "YulTypedName",
														"src": "4065:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4074:6:14",
														"nodeType": "YulTypedName",
														"src": "4074:6:14",
														"type": ""
													}
												],
												"src": "4040:129:14"
											},
											{
												"body": {
													"nativeSrc": "4242:241:14",
													"nodeType": "YulBlock",
													"src": "4242:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4347:22:14",
																"nodeType": "YulBlock",
																"src": "4347:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4349:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "4349:16:14"
																			},
																			"nativeSrc": "4349:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4349:18:14"
																		},
																		"nativeSrc": "4349:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4349:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4319:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4319:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4327:18:14",
																		"nodeType": "YulLiteral",
																		"src": "4327:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4316:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4316:2:14"
																},
																"nativeSrc": "4316:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4316:30:14"
															},
															"nativeSrc": "4313:56:14",
															"nodeType": "YulIf",
															"src": "4313:56:14"
														},
														{
															"nativeSrc": "4379:37:14",
															"nodeType": "YulAssignment",
															"src": "4379:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4409:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "4387:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "4387:21:14"
																},
																"nativeSrc": "4387:29:14",
																"nodeType": "YulFunctionCall",
																"src": "4387:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4379:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:14"
																}
															]
														},
														{
															"nativeSrc": "4453:23:14",
															"nodeType": "YulAssignment",
															"src": "4453:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4465:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4471:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4461:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:14"
																},
																"nativeSrc": "4461:15:14",
																"nodeType": "YulFunctionCall",
																"src": "4461:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4453:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4453:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "4175:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4226:6:14",
														"nodeType": "YulTypedName",
														"src": "4226:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4237:4:14",
														"nodeType": "YulTypedName",
														"src": "4237:4:14",
														"type": ""
													}
												],
												"src": "4175:308:14"
											},
											{
												"body": {
													"nativeSrc": "4553:84:14",
													"nodeType": "YulBlock",
													"src": "4553:84:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4577:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4577:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4582:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4582:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4587:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4587:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4564:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4564:12:14"
																},
																"nativeSrc": "4564:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4564:30:14"
															},
															"nativeSrc": "4564:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "4564:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4614:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4614:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4619:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4619:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4610:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:14"
																		},
																		"nativeSrc": "4610:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4610:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4628:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4628:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4603:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:14"
																},
																"nativeSrc": "4603:27:14",
																"nodeType": "YulFunctionCall",
																"src": "4603:27:14"
															},
															"nativeSrc": "4603:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "4603:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "4489:148:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4535:3:14",
														"nodeType": "YulTypedName",
														"src": "4535:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4540:3:14",
														"nodeType": "YulTypedName",
														"src": "4540:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4545:6:14",
														"nodeType": "YulTypedName",
														"src": "4545:6:14",
														"type": ""
													}
												],
												"src": "4489:148:14"
											},
											{
												"body": {
													"nativeSrc": "4727:341:14",
													"nodeType": "YulBlock",
													"src": "4727:341:14",
													"statements": [
														{
															"nativeSrc": "4737:75:14",
															"nodeType": "YulAssignment",
															"src": "4737:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4804:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4804:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "4762:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "4762:41:14"
																		},
																		"nativeSrc": "4762:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4746:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "4746:15:14"
																},
																"nativeSrc": "4746:66:14",
																"nodeType": "YulFunctionCall",
																"src": "4746:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4737:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "4737:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4828:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4828:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4835:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4835:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4821:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:14"
																},
																"nativeSrc": "4821:21:14",
																"nodeType": "YulFunctionCall",
																"src": "4821:21:14"
															},
															"nativeSrc": "4821:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "4821:21:14"
														},
														{
															"nativeSrc": "4851:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4851:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4866:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4866:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4873:4:14",
																		"nodeType": "YulLiteral",
																		"src": "4873:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4862:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4862:3:14"
																},
																"nativeSrc": "4862:16:14",
																"nodeType": "YulFunctionCall",
																"src": "4862:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4855:3:14",
																	"nodeType": "YulTypedName",
																	"src": "4855:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4916:83:14",
																"nodeType": "YulBlock",
																"src": "4916:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "4918:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4918:77:14"
																			},
																			"nativeSrc": "4918:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4918:79:14"
																		},
																		"nativeSrc": "4918:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4918:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4897:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "4897:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4902:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4902:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4893:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:14"
																		},
																		"nativeSrc": "4893:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4893:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4911:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "4911:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4890:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4890:2:14"
																},
																"nativeSrc": "4890:25:14",
																"nodeType": "YulFunctionCall",
																"src": "4890:25:14"
															},
															"nativeSrc": "4887:112:14",
															"nodeType": "YulIf",
															"src": "4887:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5045:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5045:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5050:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5050:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5055:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5055:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5008:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "5008:36:14"
																},
																"nativeSrc": "5008:54:14",
																"nodeType": "YulFunctionCall",
																"src": "5008:54:14"
															},
															"nativeSrc": "5008:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "5008:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "4643:425:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4700:3:14",
														"nodeType": "YulTypedName",
														"src": "4700:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4705:6:14",
														"nodeType": "YulTypedName",
														"src": "4705:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4713:3:14",
														"nodeType": "YulTypedName",
														"src": "4713:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4721:5:14",
														"nodeType": "YulTypedName",
														"src": "4721:5:14",
														"type": ""
													}
												],
												"src": "4643:425:14"
											},
											{
												"body": {
													"nativeSrc": "5150:278:14",
													"nodeType": "YulBlock",
													"src": "5150:278:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5199:83:14",
																"nodeType": "YulBlock",
																"src": "5199:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5201:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5201:77:14"
																			},
																			"nativeSrc": "5201:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5201:79:14"
																		},
																		"nativeSrc": "5201:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5201:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5178:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5178:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5186:4:14",
																						"nodeType": "YulLiteral",
																						"src": "5186:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5174:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5174:3:14"
																				},
																				"nativeSrc": "5174:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5174:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5193:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "5193:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5170:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5170:3:14"
																		},
																		"nativeSrc": "5170:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5170:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5163:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:14"
																},
																"nativeSrc": "5163:35:14",
																"nodeType": "YulFunctionCall",
																"src": "5163:35:14"
															},
															"nativeSrc": "5160:122:14",
															"nodeType": "YulIf",
															"src": "5160:122:14"
														},
														{
															"nativeSrc": "5291:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5291:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5318:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5318:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5305:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5305:12:14"
																},
																"nativeSrc": "5305:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5305:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5295:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5295:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5334:88:14",
															"nodeType": "YulAssignment",
															"src": "5334:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5395:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5395:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5403:4:14",
																				"nodeType": "YulLiteral",
																				"src": "5403:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5391:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:14"
																		},
																		"nativeSrc": "5391:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5391:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5410:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5410:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5418:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5418:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "5343:47:14",
																	"nodeType": "YulIdentifier",
																	"src": "5343:47:14"
																},
																"nativeSrc": "5343:79:14",
																"nodeType": "YulFunctionCall",
																"src": "5343:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5334:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5334:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "5088:340:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5128:6:14",
														"nodeType": "YulTypedName",
														"src": "5128:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5136:3:14",
														"nodeType": "YulTypedName",
														"src": "5136:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5144:5:14",
														"nodeType": "YulTypedName",
														"src": "5144:5:14",
														"type": ""
													}
												],
												"src": "5088:340:14"
											},
											{
												"body": {
													"nativeSrc": "5510:433:14",
													"nodeType": "YulBlock",
													"src": "5510:433:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5556:83:14",
																"nodeType": "YulBlock",
																"src": "5556:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5558:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5558:77:14"
																			},
																			"nativeSrc": "5558:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5558:79:14"
																		},
																		"nativeSrc": "5558:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5558:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5531:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5531:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5540:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5540:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5527:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:14"
																		},
																		"nativeSrc": "5527:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5527:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5523:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5523:3:14"
																},
																"nativeSrc": "5523:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5523:32:14"
															},
															"nativeSrc": "5520:119:14",
															"nodeType": "YulIf",
															"src": "5520:119:14"
														},
														{
															"nativeSrc": "5649:287:14",
															"nodeType": "YulBlock",
															"src": "5649:287:14",
															"statements": [
																{
																	"nativeSrc": "5664:45:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5664:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5695:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5695:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5706:1:14",
																						"nodeType": "YulLiteral",
																						"src": "5706:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5691:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5691:3:14"
																				},
																				"nativeSrc": "5691:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5691:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5678:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "5678:12:14"
																		},
																		"nativeSrc": "5678:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5678:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5668:6:14",
																			"nodeType": "YulTypedName",
																			"src": "5668:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5756:83:14",
																		"nodeType": "YulBlock",
																		"src": "5756:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5758:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "5758:77:14"
																					},
																					"nativeSrc": "5758:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5758:79:14"
																				},
																				"nativeSrc": "5758:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "5758:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5728:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5728:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5736:18:14",
																				"nodeType": "YulLiteral",
																				"src": "5736:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5725:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5725:2:14"
																		},
																		"nativeSrc": "5725:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5725:30:14"
																	},
																	"nativeSrc": "5722:117:14",
																	"nodeType": "YulIf",
																	"src": "5722:117:14"
																},
																{
																	"nativeSrc": "5853:73:14",
																	"nodeType": "YulAssignment",
																	"src": "5853:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5898:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5898:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5909:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5909:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5894:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5894:3:14"
																				},
																				"nativeSrc": "5894:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5894:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5918:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5918:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5863:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "5863:30:14"
																		},
																		"nativeSrc": "5863:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5853:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5853:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "5434:509:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5480:9:14",
														"nodeType": "YulTypedName",
														"src": "5480:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5491:7:14",
														"nodeType": "YulTypedName",
														"src": "5491:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5503:6:14",
														"nodeType": "YulTypedName",
														"src": "5503:6:14",
														"type": ""
													}
												],
												"src": "5434:509:14"
											},
											{
												"body": {
													"nativeSrc": "6015:263:14",
													"nodeType": "YulBlock",
													"src": "6015:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6061:83:14",
																"nodeType": "YulBlock",
																"src": "6061:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6063:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6063:77:14"
																			},
																			"nativeSrc": "6063:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6063:79:14"
																		},
																		"nativeSrc": "6063:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6063:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6036:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6036:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6045:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6045:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6032:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:14"
																		},
																		"nativeSrc": "6032:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6057:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6057:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6028:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6028:3:14"
																},
																"nativeSrc": "6028:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6028:32:14"
															},
															"nativeSrc": "6025:119:14",
															"nodeType": "YulIf",
															"src": "6025:119:14"
														},
														{
															"nativeSrc": "6154:117:14",
															"nodeType": "YulBlock",
															"src": "6154:117:14",
															"statements": [
																{
																	"nativeSrc": "6169:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6169:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6183:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6183:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6173:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6173:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6198:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6198:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6233:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6233:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6244:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6244:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6229:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6229:3:14"
																				},
																				"nativeSrc": "6229:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6229:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6253:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6253:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6208:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6208:20:14"
																		},
																		"nativeSrc": "6208:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6208:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6198:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6198:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5949:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5985:9:14",
														"nodeType": "YulTypedName",
														"src": "5985:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5996:7:14",
														"nodeType": "YulTypedName",
														"src": "5996:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6008:6:14",
														"nodeType": "YulTypedName",
														"src": "6008:6:14",
														"type": ""
													}
												],
												"src": "5949:329:14"
											},
											{
												"body": {
													"nativeSrc": "6343:40:14",
													"nodeType": "YulBlock",
													"src": "6343:40:14",
													"statements": [
														{
															"nativeSrc": "6354:22:14",
															"nodeType": "YulAssignment",
															"src": "6354:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6370:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6370:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6364:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6364:5:14"
																},
																"nativeSrc": "6364:12:14",
																"nodeType": "YulFunctionCall",
																"src": "6364:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6354:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "6284:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6326:5:14",
														"nodeType": "YulTypedName",
														"src": "6326:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6336:6:14",
														"nodeType": "YulTypedName",
														"src": "6336:6:14",
														"type": ""
													}
												],
												"src": "6284:99:14"
											},
											{
												"body": {
													"nativeSrc": "6485:73:14",
													"nodeType": "YulBlock",
													"src": "6485:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6502:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6502:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6507:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6507:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6495:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:14"
																},
																"nativeSrc": "6495:19:14",
																"nodeType": "YulFunctionCall",
																"src": "6495:19:14"
															},
															"nativeSrc": "6495:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "6495:19:14"
														},
														{
															"nativeSrc": "6523:29:14",
															"nodeType": "YulAssignment",
															"src": "6523:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6542:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6542:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6547:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6547:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6538:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6538:3:14"
																},
																"nativeSrc": "6538:14:14",
																"nodeType": "YulFunctionCall",
																"src": "6538:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6523:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "6523:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6389:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6457:3:14",
														"nodeType": "YulTypedName",
														"src": "6457:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6462:6:14",
														"nodeType": "YulTypedName",
														"src": "6462:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6473:11:14",
														"nodeType": "YulTypedName",
														"src": "6473:11:14",
														"type": ""
													}
												],
												"src": "6389:169:14"
											},
											{
												"body": {
													"nativeSrc": "6626:77:14",
													"nodeType": "YulBlock",
													"src": "6626:77:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6643:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6643:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6648:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6648:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6653:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6653:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6637:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6637:5:14"
																},
																"nativeSrc": "6637:23:14",
																"nodeType": "YulFunctionCall",
																"src": "6637:23:14"
															},
															"nativeSrc": "6637:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "6637:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6680:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6680:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6685:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6685:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6676:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6676:3:14"
																		},
																		"nativeSrc": "6676:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6676:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6694:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6694:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6669:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:14"
																},
																"nativeSrc": "6669:27:14",
																"nodeType": "YulFunctionCall",
																"src": "6669:27:14"
															},
															"nativeSrc": "6669:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "6669:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6564:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6608:3:14",
														"nodeType": "YulTypedName",
														"src": "6608:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6613:3:14",
														"nodeType": "YulTypedName",
														"src": "6613:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6618:6:14",
														"nodeType": "YulTypedName",
														"src": "6618:6:14",
														"type": ""
													}
												],
												"src": "6564:139:14"
											},
											{
												"body": {
													"nativeSrc": "6801:285:14",
													"nodeType": "YulBlock",
													"src": "6801:285:14",
													"statements": [
														{
															"nativeSrc": "6811:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6811:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6858:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6858:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6825:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "6825:32:14"
																},
																"nativeSrc": "6825:39:14",
																"nodeType": "YulFunctionCall",
																"src": "6825:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6815:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6815:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6873:78:14",
															"nodeType": "YulAssignment",
															"src": "6873:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6939:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6939:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6944:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6944:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6880:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "6880:58:14"
																},
																"nativeSrc": "6880:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6880:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6873:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6999:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6999:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7006:4:14",
																				"nodeType": "YulLiteral",
																				"src": "7006:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:14"
																		},
																		"nativeSrc": "6995:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7013:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7013:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7018:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7018:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6960:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "6960:34:14"
																},
																"nativeSrc": "6960:65:14",
																"nodeType": "YulFunctionCall",
																"src": "6960:65:14"
															},
															"nativeSrc": "6960:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "6960:65:14"
														},
														{
															"nativeSrc": "7034:46:14",
															"nodeType": "YulAssignment",
															"src": "7034:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7045:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7045:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7072:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7072:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7050:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "7050:21:14"
																		},
																		"nativeSrc": "7050:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7050:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7041:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7041:3:14"
																},
																"nativeSrc": "7041:39:14",
																"nodeType": "YulFunctionCall",
																"src": "7041:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7034:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7034:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6709:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6782:5:14",
														"nodeType": "YulTypedName",
														"src": "6782:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6789:3:14",
														"nodeType": "YulTypedName",
														"src": "6789:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6797:3:14",
														"nodeType": "YulTypedName",
														"src": "6797:3:14",
														"type": ""
													}
												],
												"src": "6709:377:14"
											},
											{
												"body": {
													"nativeSrc": "7210:195:14",
													"nodeType": "YulBlock",
													"src": "7210:195:14",
													"statements": [
														{
															"nativeSrc": "7220:26:14",
															"nodeType": "YulAssignment",
															"src": "7220:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7232:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7232:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7243:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7243:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7228:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7228:3:14"
																},
																"nativeSrc": "7228:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7228:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7220:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7220:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7267:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7267:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7278:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7278:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7263:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7263:3:14"
																		},
																		"nativeSrc": "7263:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7263:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7286:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7286:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7292:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7292:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7282:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7282:3:14"
																		},
																		"nativeSrc": "7282:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7256:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7256:6:14"
																},
																"nativeSrc": "7256:47:14",
																"nodeType": "YulFunctionCall",
																"src": "7256:47:14"
															},
															"nativeSrc": "7256:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "7256:47:14"
														},
														{
															"nativeSrc": "7312:86:14",
															"nodeType": "YulAssignment",
															"src": "7312:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7384:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7384:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7393:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7393:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7320:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "7320:63:14"
																},
																"nativeSrc": "7320:78:14",
																"nodeType": "YulFunctionCall",
																"src": "7320:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7312:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7312:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7092:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7182:9:14",
														"nodeType": "YulTypedName",
														"src": "7182:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7194:6:14",
														"nodeType": "YulTypedName",
														"src": "7194:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7205:4:14",
														"nodeType": "YulTypedName",
														"src": "7205:4:14",
														"type": ""
													}
												],
												"src": "7092:313:14"
											},
											{
												"body": {
													"nativeSrc": "7493:229:14",
													"nodeType": "YulBlock",
													"src": "7493:229:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7598:22:14",
																"nodeType": "YulBlock",
																"src": "7598:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7600:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "7600:16:14"
																			},
																			"nativeSrc": "7600:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7600:18:14"
																		},
																		"nativeSrc": "7600:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7600:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7570:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7570:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7578:18:14",
																		"nodeType": "YulLiteral",
																		"src": "7578:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7567:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7567:2:14"
																},
																"nativeSrc": "7567:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7567:30:14"
															},
															"nativeSrc": "7564:56:14",
															"nodeType": "YulIf",
															"src": "7564:56:14"
														},
														{
															"nativeSrc": "7630:25:14",
															"nodeType": "YulAssignment",
															"src": "7630:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7642:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7642:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7650:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7650:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7638:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7638:3:14"
																},
																"nativeSrc": "7638:17:14",
																"nodeType": "YulFunctionCall",
																"src": "7638:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7630:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7630:4:14"
																}
															]
														},
														{
															"nativeSrc": "7692:23:14",
															"nodeType": "YulAssignment",
															"src": "7692:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7704:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7704:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7710:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7710:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7700:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7700:3:14"
																},
																"nativeSrc": "7700:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7700:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7692:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7692:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7411:311:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7477:6:14",
														"nodeType": "YulTypedName",
														"src": "7477:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7488:4:14",
														"nodeType": "YulTypedName",
														"src": "7488:4:14",
														"type": ""
													}
												],
												"src": "7411:311:14"
											},
											{
												"body": {
													"nativeSrc": "7817:28:14",
													"nodeType": "YulBlock",
													"src": "7817:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7834:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7834:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7837:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7837:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7827:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7827:6:14"
																},
																"nativeSrc": "7827:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7827:12:14"
															},
															"nativeSrc": "7827:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7827:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7728:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7728:117:14"
											},
											{
												"body": {
													"nativeSrc": "7970:608:14",
													"nodeType": "YulBlock",
													"src": "7970:608:14",
													"statements": [
														{
															"nativeSrc": "7980:90:14",
															"nodeType": "YulAssignment",
															"src": "7980:90:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8062:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8062:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8005:56:14",
																			"nodeType": "YulIdentifier",
																			"src": "8005:56:14"
																		},
																		"nativeSrc": "8005:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8005:64:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7989:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "7989:15:14"
																},
																"nativeSrc": "7989:81:14",
																"nodeType": "YulFunctionCall",
																"src": "7989:81:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7980:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7980:5:14"
																}
															]
														},
														{
															"nativeSrc": "8079:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8079:16:14",
															"value": {
																"name": "array",
																"nativeSrc": "8090:5:14",
																"nodeType": "YulIdentifier",
																"src": "8090:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8083:3:14",
																	"nodeType": "YulTypedName",
																	"src": "8083:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8112:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8112:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8119:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8119:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8105:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8105:6:14"
																},
																"nativeSrc": "8105:21:14",
																"nodeType": "YulFunctionCall",
																"src": "8105:21:14"
															},
															"nativeSrc": "8105:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "8105:21:14"
														},
														{
															"nativeSrc": "8135:23:14",
															"nodeType": "YulAssignment",
															"src": "8135:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8146:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8146:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8153:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8153:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8142:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8142:3:14"
																},
																"nativeSrc": "8142:16:14",
																"nodeType": "YulFunctionCall",
																"src": "8142:16:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "8135:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8135:3:14"
																}
															]
														},
														{
															"nativeSrc": "8168:44:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8168:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8186:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8186:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8198:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8198:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8206:4:14",
																				"nodeType": "YulLiteral",
																				"src": "8206:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8194:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8194:3:14"
																		},
																		"nativeSrc": "8194:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8194:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8182:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8182:3:14"
																},
																"nativeSrc": "8182:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8182:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "8172:6:14",
																	"nodeType": "YulTypedName",
																	"src": "8172:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8240:103:14",
																"nodeType": "YulBlock",
																"src": "8240:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8254:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8254:77:14"
																			},
																			"nativeSrc": "8254:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8254:79:14"
																		},
																		"nativeSrc": "8254:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8254:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8227:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8227:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8235:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8235:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8224:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8224:2:14"
																},
																"nativeSrc": "8224:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8224:15:14"
															},
															"nativeSrc": "8221:122:14",
															"nodeType": "YulIf",
															"src": "8221:122:14"
														},
														{
															"body": {
																"nativeSrc": "8428:144:14",
																"nodeType": "YulBlock",
																"src": "8428:144:14",
																"statements": [
																	{
																		"nativeSrc": "8443:21:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8443:21:14",
																		"value": {
																			"name": "src",
																			"nativeSrc": "8461:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8461:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "8447:10:14",
																				"nodeType": "YulTypedName",
																				"src": "8447:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8485:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8485:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "8511:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "8511:10:14"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "8523:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "8523:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "8490:20:14",
																						"nodeType": "YulIdentifier",
																						"src": "8490:20:14"
																					},
																					"nativeSrc": "8490:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8490:37:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8478:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8478:6:14"
																			},
																			"nativeSrc": "8478:50:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8478:50:14"
																		},
																		"nativeSrc": "8478:50:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8478:50:14"
																	},
																	{
																		"nativeSrc": "8541:21:14",
																		"nodeType": "YulAssignment",
																		"src": "8541:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8552:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8552:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8557:4:14",
																					"nodeType": "YulLiteral",
																					"src": "8557:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8548:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8548:3:14"
																			},
																			"nativeSrc": "8548:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8548:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "8541:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8541:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8381:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8381:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8386:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8386:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8378:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8378:2:14"
																},
																"nativeSrc": "8378:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8378:15:14"
															},
															"nativeSrc": "8352:220:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8394:25:14",
																"nodeType": "YulBlock",
																"src": "8394:25:14",
																"statements": [
																	{
																		"nativeSrc": "8396:21:14",
																		"nodeType": "YulAssignment",
																		"src": "8396:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "8407:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8407:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8412:4:14",
																					"nodeType": "YulLiteral",
																					"src": "8412:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8403:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:14"
																			},
																			"nativeSrc": "8403:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8403:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "8396:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8396:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8356:21:14",
																"nodeType": "YulBlock",
																"src": "8356:21:14",
																"statements": [
																	{
																		"nativeSrc": "8358:17:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8358:17:14",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "8369:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8369:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "8362:3:14",
																				"nodeType": "YulTypedName",
																				"src": "8362:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8352:220:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7868:710:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7940:6:14",
														"nodeType": "YulTypedName",
														"src": "7940:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7948:6:14",
														"nodeType": "YulTypedName",
														"src": "7948:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7956:3:14",
														"nodeType": "YulTypedName",
														"src": "7956:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7964:5:14",
														"nodeType": "YulTypedName",
														"src": "7964:5:14",
														"type": ""
													}
												],
												"src": "7868:710:14"
											},
											{
												"body": {
													"nativeSrc": "8678:293:14",
													"nodeType": "YulBlock",
													"src": "8678:293:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8727:83:14",
																"nodeType": "YulBlock",
																"src": "8727:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8729:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8729:77:14"
																			},
																			"nativeSrc": "8729:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8729:79:14"
																		},
																		"nativeSrc": "8729:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8729:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8706:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8706:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8714:4:14",
																						"nodeType": "YulLiteral",
																						"src": "8714:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8702:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8702:3:14"
																				},
																				"nativeSrc": "8702:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8702:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8721:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8721:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8698:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:14"
																		},
																		"nativeSrc": "8698:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8691:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:14"
																},
																"nativeSrc": "8691:35:14",
																"nodeType": "YulFunctionCall",
																"src": "8691:35:14"
															},
															"nativeSrc": "8688:122:14",
															"nodeType": "YulIf",
															"src": "8688:122:14"
														},
														{
															"nativeSrc": "8819:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8819:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8846:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8846:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8833:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8833:12:14"
																},
																"nativeSrc": "8833:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8833:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8823:6:14",
																	"nodeType": "YulTypedName",
																	"src": "8823:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8862:103:14",
															"nodeType": "YulAssignment",
															"src": "8862:103:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8938:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8938:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8946:4:14",
																				"nodeType": "YulLiteral",
																				"src": "8946:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8934:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8934:3:14"
																		},
																		"nativeSrc": "8934:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8934:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8953:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8953:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8961:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8961:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8871:62:14",
																	"nodeType": "YulIdentifier",
																	"src": "8871:62:14"
																},
																"nativeSrc": "8871:94:14",
																"nodeType": "YulFunctionCall",
																"src": "8871:94:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8862:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8862:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8601:370:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8656:6:14",
														"nodeType": "YulTypedName",
														"src": "8656:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8664:3:14",
														"nodeType": "YulTypedName",
														"src": "8664:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8672:5:14",
														"nodeType": "YulTypedName",
														"src": "8672:5:14",
														"type": ""
													}
												],
												"src": "8601:370:14"
											},
											{
												"body": {
													"nativeSrc": "9043:241:14",
													"nodeType": "YulBlock",
													"src": "9043:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9148:22:14",
																"nodeType": "YulBlock",
																"src": "9148:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9150:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "9150:16:14"
																			},
																			"nativeSrc": "9150:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9150:18:14"
																		},
																		"nativeSrc": "9150:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9150:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9120:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9120:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9128:18:14",
																		"nodeType": "YulLiteral",
																		"src": "9128:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9117:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9117:2:14"
																},
																"nativeSrc": "9117:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9117:30:14"
															},
															"nativeSrc": "9114:56:14",
															"nodeType": "YulIf",
															"src": "9114:56:14"
														},
														{
															"nativeSrc": "9180:37:14",
															"nodeType": "YulAssignment",
															"src": "9180:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9210:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9210:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9188:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "9188:21:14"
																},
																"nativeSrc": "9188:29:14",
																"nodeType": "YulFunctionCall",
																"src": "9188:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9180:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9180:4:14"
																}
															]
														},
														{
															"nativeSrc": "9254:23:14",
															"nodeType": "YulAssignment",
															"src": "9254:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9266:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "9266:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9272:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9272:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9262:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9262:3:14"
																},
																"nativeSrc": "9262:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9262:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9254:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9254:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8977:307:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9027:6:14",
														"nodeType": "YulTypedName",
														"src": "9027:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9038:4:14",
														"nodeType": "YulTypedName",
														"src": "9038:4:14",
														"type": ""
													}
												],
												"src": "8977:307:14"
											},
											{
												"body": {
													"nativeSrc": "9373:340:14",
													"nodeType": "YulBlock",
													"src": "9373:340:14",
													"statements": [
														{
															"nativeSrc": "9383:74:14",
															"nodeType": "YulAssignment",
															"src": "9383:74:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9449:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9449:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9408:40:14",
																			"nodeType": "YulIdentifier",
																			"src": "9408:40:14"
																		},
																		"nativeSrc": "9408:48:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9408:48:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9392:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "9392:15:14"
																},
																"nativeSrc": "9392:65:14",
																"nodeType": "YulFunctionCall",
																"src": "9392:65:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9383:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9383:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9473:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9473:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9480:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9480:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9466:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:14"
																},
																"nativeSrc": "9466:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9466:21:14"
															},
															"nativeSrc": "9466:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9466:21:14"
														},
														{
															"nativeSrc": "9496:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9496:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9511:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9511:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9518:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9518:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9507:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9507:3:14"
																},
																"nativeSrc": "9507:16:14",
																"nodeType": "YulFunctionCall",
																"src": "9507:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9500:3:14",
																	"nodeType": "YulTypedName",
																	"src": "9500:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9561:83:14",
																"nodeType": "YulBlock",
																"src": "9561:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9563:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9563:77:14"
																			},
																			"nativeSrc": "9563:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9563:79:14"
																		},
																		"nativeSrc": "9563:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9563:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9542:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9542:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9547:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9547:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9538:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9538:3:14"
																		},
																		"nativeSrc": "9538:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9556:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9556:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9535:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9535:2:14"
																},
																"nativeSrc": "9535:25:14",
																"nodeType": "YulFunctionCall",
																"src": "9535:25:14"
															},
															"nativeSrc": "9532:112:14",
															"nodeType": "YulIf",
															"src": "9532:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9690:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9690:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9695:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9695:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9700:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9700:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9653:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "9653:36:14"
																},
																"nativeSrc": "9653:54:14",
																"nodeType": "YulFunctionCall",
																"src": "9653:54:14"
															},
															"nativeSrc": "9653:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "9653:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9290:423:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9346:3:14",
														"nodeType": "YulTypedName",
														"src": "9346:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9351:6:14",
														"nodeType": "YulTypedName",
														"src": "9351:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9359:3:14",
														"nodeType": "YulTypedName",
														"src": "9359:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9367:5:14",
														"nodeType": "YulTypedName",
														"src": "9367:5:14",
														"type": ""
													}
												],
												"src": "9290:423:14"
											},
											{
												"body": {
													"nativeSrc": "9793:277:14",
													"nodeType": "YulBlock",
													"src": "9793:277:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9842:83:14",
																"nodeType": "YulBlock",
																"src": "9842:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9844:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9844:77:14"
																			},
																			"nativeSrc": "9844:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9844:79:14"
																		},
																		"nativeSrc": "9844:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9844:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9821:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9821:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9829:4:14",
																						"nodeType": "YulLiteral",
																						"src": "9829:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9817:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9817:3:14"
																				},
																				"nativeSrc": "9817:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9817:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9836:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9836:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9813:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9813:3:14"
																		},
																		"nativeSrc": "9813:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9813:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9806:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9806:6:14"
																},
																"nativeSrc": "9806:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9806:35:14"
															},
															"nativeSrc": "9803:122:14",
															"nodeType": "YulIf",
															"src": "9803:122:14"
														},
														{
															"nativeSrc": "9934:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9934:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9961:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9961:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9948:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "9948:12:14"
																},
																"nativeSrc": "9948:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9948:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9938:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9938:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9977:87:14",
															"nodeType": "YulAssignment",
															"src": "9977:87:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10037:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10037:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10045:4:14",
																				"nodeType": "YulLiteral",
																				"src": "10045:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10033:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10033:3:14"
																		},
																		"nativeSrc": "10033:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10033:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10052:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10052:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10060:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10060:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9986:46:14",
																	"nodeType": "YulIdentifier",
																	"src": "9986:46:14"
																},
																"nativeSrc": "9986:78:14",
																"nodeType": "YulFunctionCall",
																"src": "9986:78:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9977:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9977:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9732:338:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9771:6:14",
														"nodeType": "YulTypedName",
														"src": "9771:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9779:3:14",
														"nodeType": "YulTypedName",
														"src": "9779:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9787:5:14",
														"nodeType": "YulTypedName",
														"src": "9787:5:14",
														"type": ""
													}
												],
												"src": "9732:338:14"
											},
											{
												"body": {
													"nativeSrc": "10269:1316:14",
													"nodeType": "YulBlock",
													"src": "10269:1316:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10316:83:14",
																"nodeType": "YulBlock",
																"src": "10316:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10318:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10318:77:14"
																			},
																			"nativeSrc": "10318:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10318:79:14"
																		},
																		"nativeSrc": "10318:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10318:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10290:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10290:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10299:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10299:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10286:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10286:3:14"
																		},
																		"nativeSrc": "10286:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10286:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:3:14",
																		"nodeType": "YulLiteral",
																		"src": "10311:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10282:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10282:3:14"
																},
																"nativeSrc": "10282:33:14",
																"nodeType": "YulFunctionCall",
																"src": "10282:33:14"
															},
															"nativeSrc": "10279:120:14",
															"nodeType": "YulIf",
															"src": "10279:120:14"
														},
														{
															"nativeSrc": "10409:117:14",
															"nodeType": "YulBlock",
															"src": "10409:117:14",
															"statements": [
																{
																	"nativeSrc": "10424:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10424:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10438:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10438:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10428:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10428:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10453:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10453:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10488:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10488:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10499:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10499:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10484:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10484:3:14"
																				},
																				"nativeSrc": "10484:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10484:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10508:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10508:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10463:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10463:20:14"
																		},
																		"nativeSrc": "10463:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10463:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10453:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10453:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10536:118:14",
															"nodeType": "YulBlock",
															"src": "10536:118:14",
															"statements": [
																{
																	"nativeSrc": "10551:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10551:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10565:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10565:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10555:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10555:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10581:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10581:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10616:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10616:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10627:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10627:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10612:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10612:3:14"
																				},
																				"nativeSrc": "10612:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10612:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10636:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10636:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10591:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10591:20:14"
																		},
																		"nativeSrc": "10591:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10591:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10581:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10581:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10664:303:14",
															"nodeType": "YulBlock",
															"src": "10664:303:14",
															"statements": [
																{
																	"nativeSrc": "10679:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10679:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10710:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10710:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10721:2:14",
																						"nodeType": "YulLiteral",
																						"src": "10721:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10706:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10706:3:14"
																				},
																				"nativeSrc": "10706:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10706:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10693:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "10693:12:14"
																		},
																		"nativeSrc": "10693:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10693:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10683:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10683:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10772:83:14",
																		"nodeType": "YulBlock",
																		"src": "10772:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10774:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "10774:77:14"
																					},
																					"nativeSrc": "10774:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10774:79:14"
																				},
																				"nativeSrc": "10774:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "10774:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10744:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10744:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10752:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10752:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10741:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10741:2:14"
																		},
																		"nativeSrc": "10741:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10741:30:14"
																	},
																	"nativeSrc": "10738:117:14",
																	"nodeType": "YulIf",
																	"src": "10738:117:14"
																},
																{
																	"nativeSrc": "10869:88:14",
																	"nodeType": "YulAssignment",
																	"src": "10869:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10929:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10929:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10940:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10940:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10925:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10925:3:14"
																				},
																				"nativeSrc": "10925:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10925:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10949:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10949:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10879:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "10879:45:14"
																		},
																		"nativeSrc": "10879:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10879:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10869:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10869:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10977:303:14",
															"nodeType": "YulBlock",
															"src": "10977:303:14",
															"statements": [
																{
																	"nativeSrc": "10992:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10992:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11023:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11023:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11034:2:14",
																						"nodeType": "YulLiteral",
																						"src": "11034:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11019:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11019:3:14"
																				},
																				"nativeSrc": "11019:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11019:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11006:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "11006:12:14"
																		},
																		"nativeSrc": "11006:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11006:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10996:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10996:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11085:83:14",
																		"nodeType": "YulBlock",
																		"src": "11085:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11087:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "11087:77:14"
																					},
																					"nativeSrc": "11087:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11087:79:14"
																				},
																				"nativeSrc": "11087:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "11087:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11057:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11065:18:14",
																				"nodeType": "YulLiteral",
																				"src": "11065:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11054:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "11054:2:14"
																		},
																		"nativeSrc": "11054:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11054:30:14"
																	},
																	"nativeSrc": "11051:117:14",
																	"nodeType": "YulIf",
																	"src": "11051:117:14"
																},
																{
																	"nativeSrc": "11182:88:14",
																	"nodeType": "YulAssignment",
																	"src": "11182:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11242:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11242:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11253:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11253:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11238:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11238:3:14"
																				},
																				"nativeSrc": "11238:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11238:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11262:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11262:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "11192:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "11192:45:14"
																		},
																		"nativeSrc": "11192:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11192:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11182:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11182:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11290:288:14",
															"nodeType": "YulBlock",
															"src": "11290:288:14",
															"statements": [
																{
																	"nativeSrc": "11305:47:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11305:47:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11336:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11336:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11347:3:14",
																						"nodeType": "YulLiteral",
																						"src": "11347:3:14",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11332:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11332:3:14"
																				},
																				"nativeSrc": "11332:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11332:19:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11319:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "11319:12:14"
																		},
																		"nativeSrc": "11319:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11319:33:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11309:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11309:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11399:83:14",
																		"nodeType": "YulBlock",
																		"src": "11399:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11401:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "11401:77:14"
																					},
																					"nativeSrc": "11401:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11401:79:14"
																				},
																				"nativeSrc": "11401:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "11401:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11371:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11371:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11379:18:14",
																				"nodeType": "YulLiteral",
																				"src": "11379:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11368:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "11368:2:14"
																		},
																		"nativeSrc": "11368:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11368:30:14"
																	},
																	"nativeSrc": "11365:117:14",
																	"nodeType": "YulIf",
																	"src": "11365:117:14"
																},
																{
																	"nativeSrc": "11496:72:14",
																	"nodeType": "YulAssignment",
																	"src": "11496:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11540:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11540:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11551:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11551:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11536:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11536:3:14"
																				},
																				"nativeSrc": "11536:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11536:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11560:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11560:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11506:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "11506:29:14"
																		},
																		"nativeSrc": "11506:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11506:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11496:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11496:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "10076:1509:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10207:9:14",
														"nodeType": "YulTypedName",
														"src": "10207:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10218:7:14",
														"nodeType": "YulTypedName",
														"src": "10218:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10230:6:14",
														"nodeType": "YulTypedName",
														"src": "10230:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10238:6:14",
														"nodeType": "YulTypedName",
														"src": "10238:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:14",
														"nodeType": "YulTypedName",
														"src": "10246:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10254:6:14",
														"nodeType": "YulTypedName",
														"src": "10254:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10262:6:14",
														"nodeType": "YulTypedName",
														"src": "10262:6:14",
														"type": ""
													}
												],
												"src": "10076:1509:14"
											},
											{
												"body": {
													"nativeSrc": "11700:688:14",
													"nodeType": "YulBlock",
													"src": "11700:688:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11746:83:14",
																"nodeType": "YulBlock",
																"src": "11746:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11748:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11748:77:14"
																			},
																			"nativeSrc": "11748:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11748:79:14"
																		},
																		"nativeSrc": "11748:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11748:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11721:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11721:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11730:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11730:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11717:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11717:3:14"
																		},
																		"nativeSrc": "11717:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11717:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11742:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11742:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11713:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11713:3:14"
																},
																"nativeSrc": "11713:32:14",
																"nodeType": "YulFunctionCall",
																"src": "11713:32:14"
															},
															"nativeSrc": "11710:119:14",
															"nodeType": "YulIf",
															"src": "11710:119:14"
														},
														{
															"nativeSrc": "11839:117:14",
															"nodeType": "YulBlock",
															"src": "11839:117:14",
															"statements": [
																{
																	"nativeSrc": "11854:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11854:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11868:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11868:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11858:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11858:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11883:63:14",
																	"nodeType": "YulAssignment",
																	"src": "11883:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11918:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11918:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11929:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11929:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11914:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11914:3:14"
																				},
																				"nativeSrc": "11914:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11914:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11938:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11938:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11893:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "11893:20:14"
																		},
																		"nativeSrc": "11893:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11893:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11883:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11883:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11966:118:14",
															"nodeType": "YulBlock",
															"src": "11966:118:14",
															"statements": [
																{
																	"nativeSrc": "11981:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11981:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11995:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11995:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11985:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11985:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12011:63:14",
																	"nodeType": "YulAssignment",
																	"src": "12011:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12046:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12046:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12057:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12057:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12042:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12042:3:14"
																				},
																				"nativeSrc": "12042:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12042:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12066:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12066:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12021:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "12021:20:14"
																		},
																		"nativeSrc": "12021:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12021:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12011:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12011:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12094:287:14",
															"nodeType": "YulBlock",
															"src": "12094:287:14",
															"statements": [
																{
																	"nativeSrc": "12109:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12109:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12140:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12140:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12151:2:14",
																						"nodeType": "YulLiteral",
																						"src": "12151:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12136:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12136:3:14"
																				},
																				"nativeSrc": "12136:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12136:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12123:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "12123:12:14"
																		},
																		"nativeSrc": "12123:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12123:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12113:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12113:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12202:83:14",
																		"nodeType": "YulBlock",
																		"src": "12202:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12204:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "12204:77:14"
																					},
																					"nativeSrc": "12204:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "12204:79:14"
																				},
																				"nativeSrc": "12204:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "12204:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12174:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12174:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12182:18:14",
																				"nodeType": "YulLiteral",
																				"src": "12182:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12171:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "12171:2:14"
																		},
																		"nativeSrc": "12171:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12171:30:14"
																	},
																	"nativeSrc": "12168:117:14",
																	"nodeType": "YulIf",
																	"src": "12168:117:14"
																},
																{
																	"nativeSrc": "12299:72:14",
																	"nodeType": "YulAssignment",
																	"src": "12299:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12343:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12343:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12354:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12354:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12339:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12339:3:14"
																				},
																				"nativeSrc": "12339:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12339:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12363:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12363:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12309:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "12309:29:14"
																		},
																		"nativeSrc": "12309:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12309:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12299:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12299:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11591:797:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11654:9:14",
														"nodeType": "YulTypedName",
														"src": "11654:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11665:7:14",
														"nodeType": "YulTypedName",
														"src": "11665:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11677:6:14",
														"nodeType": "YulTypedName",
														"src": "11677:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11685:6:14",
														"nodeType": "YulTypedName",
														"src": "11685:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11693:6:14",
														"nodeType": "YulTypedName",
														"src": "11693:6:14",
														"type": ""
													}
												],
												"src": "11591:797:14"
											},
											{
												"body": {
													"nativeSrc": "12476:229:14",
													"nodeType": "YulBlock",
													"src": "12476:229:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12581:22:14",
																"nodeType": "YulBlock",
																"src": "12581:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12583:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "12583:16:14"
																			},
																			"nativeSrc": "12583:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12583:18:14"
																		},
																		"nativeSrc": "12583:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12583:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12553:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12553:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12561:18:14",
																		"nodeType": "YulLiteral",
																		"src": "12561:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12550:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12550:2:14"
																},
																"nativeSrc": "12550:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12550:30:14"
															},
															"nativeSrc": "12547:56:14",
															"nodeType": "YulIf",
															"src": "12547:56:14"
														},
														{
															"nativeSrc": "12613:25:14",
															"nodeType": "YulAssignment",
															"src": "12613:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12625:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12625:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12633:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12633:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12621:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12621:3:14"
																},
																"nativeSrc": "12621:17:14",
																"nodeType": "YulFunctionCall",
																"src": "12621:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12613:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12613:4:14"
																}
															]
														},
														{
															"nativeSrc": "12675:23:14",
															"nodeType": "YulAssignment",
															"src": "12675:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "12687:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12687:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12693:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12693:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12683:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12683:3:14"
																},
																"nativeSrc": "12683:15:14",
																"nodeType": "YulFunctionCall",
																"src": "12683:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "12675:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12675:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12394:311:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "12460:6:14",
														"nodeType": "YulTypedName",
														"src": "12460:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "12471:4:14",
														"nodeType": "YulTypedName",
														"src": "12471:4:14",
														"type": ""
													}
												],
												"src": "12394:311:14"
											},
											{
												"body": {
													"nativeSrc": "12830:608:14",
													"nodeType": "YulBlock",
													"src": "12830:608:14",
													"statements": [
														{
															"nativeSrc": "12840:90:14",
															"nodeType": "YulAssignment",
															"src": "12840:90:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12922:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12922:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12865:56:14",
																			"nodeType": "YulIdentifier",
																			"src": "12865:56:14"
																		},
																		"nativeSrc": "12865:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12865:64:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12849:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "12849:15:14"
																},
																"nativeSrc": "12849:81:14",
																"nodeType": "YulFunctionCall",
																"src": "12849:81:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12840:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12840:5:14"
																}
															]
														},
														{
															"nativeSrc": "12939:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12939:16:14",
															"value": {
																"name": "array",
																"nativeSrc": "12950:5:14",
																"nodeType": "YulIdentifier",
																"src": "12950:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12943:3:14",
																	"nodeType": "YulTypedName",
																	"src": "12943:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12972:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "12972:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12979:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12979:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12965:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12965:6:14"
																},
																"nativeSrc": "12965:21:14",
																"nodeType": "YulFunctionCall",
																"src": "12965:21:14"
															},
															"nativeSrc": "12965:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "12965:21:14"
														},
														{
															"nativeSrc": "12995:23:14",
															"nodeType": "YulAssignment",
															"src": "12995:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "13006:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13006:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13013:4:14",
																		"nodeType": "YulLiteral",
																		"src": "13013:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13002:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13002:3:14"
																},
																"nativeSrc": "13002:16:14",
																"nodeType": "YulFunctionCall",
																"src": "13002:16:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "12995:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12995:3:14"
																}
															]
														},
														{
															"nativeSrc": "13028:44:14",
															"nodeType": "YulVariableDeclaration",
															"src": "13028:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13046:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13046:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13058:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13058:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13066:4:14",
																				"nodeType": "YulLiteral",
																				"src": "13066:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "13054:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13054:3:14"
																		},
																		"nativeSrc": "13054:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13054:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13042:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13042:3:14"
																},
																"nativeSrc": "13042:30:14",
																"nodeType": "YulFunctionCall",
																"src": "13042:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "13032:6:14",
																	"nodeType": "YulTypedName",
																	"src": "13032:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13100:103:14",
																"nodeType": "YulBlock",
																"src": "13100:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "13114:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "13114:77:14"
																			},
																			"nativeSrc": "13114:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13114:79:14"
																		},
																		"nativeSrc": "13114:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13114:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "13087:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13087:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13095:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13095:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13084:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "13084:2:14"
																},
																"nativeSrc": "13084:15:14",
																"nodeType": "YulFunctionCall",
																"src": "13084:15:14"
															},
															"nativeSrc": "13081:122:14",
															"nodeType": "YulIf",
															"src": "13081:122:14"
														},
														{
															"body": {
																"nativeSrc": "13288:144:14",
																"nodeType": "YulBlock",
																"src": "13288:144:14",
																"statements": [
																	{
																		"nativeSrc": "13303:21:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13303:21:14",
																		"value": {
																			"name": "src",
																			"nativeSrc": "13321:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13321:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "13307:10:14",
																				"nodeType": "YulTypedName",
																				"src": "13307:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "13345:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13345:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "13371:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "13371:10:14"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "13383:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "13383:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "13350:20:14",
																						"nodeType": "YulIdentifier",
																						"src": "13350:20:14"
																					},
																					"nativeSrc": "13350:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13350:37:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13338:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13338:6:14"
																			},
																			"nativeSrc": "13338:50:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13338:50:14"
																		},
																		"nativeSrc": "13338:50:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13338:50:14"
																	},
																	{
																		"nativeSrc": "13401:21:14",
																		"nodeType": "YulAssignment",
																		"src": "13401:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "13412:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13412:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13417:4:14",
																					"nodeType": "YulLiteral",
																					"src": "13417:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13408:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "13408:3:14"
																			},
																			"nativeSrc": "13408:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13408:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "13401:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "13401:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13241:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13241:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "13246:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13246:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13238:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "13238:2:14"
																},
																"nativeSrc": "13238:15:14",
																"nodeType": "YulFunctionCall",
																"src": "13238:15:14"
															},
															"nativeSrc": "13212:220:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13254:25:14",
																"nodeType": "YulBlock",
																"src": "13254:25:14",
																"statements": [
																	{
																		"nativeSrc": "13256:21:14",
																		"nodeType": "YulAssignment",
																		"src": "13256:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "13267:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13267:3:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13272:4:14",
																					"nodeType": "YulLiteral",
																					"src": "13272:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13263:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "13263:3:14"
																			},
																			"nativeSrc": "13263:14:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13263:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "13256:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "13256:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13216:21:14",
																"nodeType": "YulBlock",
																"src": "13216:21:14",
																"statements": [
																	{
																		"nativeSrc": "13218:17:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13218:17:14",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "13229:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13229:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "13222:3:14",
																				"nodeType": "YulTypedName",
																				"src": "13222:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "13212:220:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12728:710:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12800:6:14",
														"nodeType": "YulTypedName",
														"src": "12800:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12808:6:14",
														"nodeType": "YulTypedName",
														"src": "12808:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12816:3:14",
														"nodeType": "YulTypedName",
														"src": "12816:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12824:5:14",
														"nodeType": "YulTypedName",
														"src": "12824:5:14",
														"type": ""
													}
												],
												"src": "12728:710:14"
											},
											{
												"body": {
													"nativeSrc": "13538:293:14",
													"nodeType": "YulBlock",
													"src": "13538:293:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "13587:83:14",
																"nodeType": "YulBlock",
																"src": "13587:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "13589:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "13589:77:14"
																			},
																			"nativeSrc": "13589:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13589:79:14"
																		},
																		"nativeSrc": "13589:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13589:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "13566:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13566:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13574:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13574:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13562:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13562:3:14"
																				},
																				"nativeSrc": "13562:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13562:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "13581:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "13581:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "13558:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13558:3:14"
																		},
																		"nativeSrc": "13558:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13558:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13551:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "13551:6:14"
																},
																"nativeSrc": "13551:35:14",
																"nodeType": "YulFunctionCall",
																"src": "13551:35:14"
															},
															"nativeSrc": "13548:122:14",
															"nodeType": "YulIf",
															"src": "13548:122:14"
														},
														{
															"nativeSrc": "13679:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "13679:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13706:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13706:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "13693:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "13693:12:14"
																},
																"nativeSrc": "13693:20:14",
																"nodeType": "YulFunctionCall",
																"src": "13693:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13683:6:14",
																	"nodeType": "YulTypedName",
																	"src": "13683:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13722:103:14",
															"nodeType": "YulAssignment",
															"src": "13722:103:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13798:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13798:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13806:4:14",
																				"nodeType": "YulLiteral",
																				"src": "13806:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13794:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13794:3:14"
																		},
																		"nativeSrc": "13794:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13794:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13813:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13813:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13821:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13821:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "13731:62:14",
																	"nodeType": "YulIdentifier",
																	"src": "13731:62:14"
																},
																"nativeSrc": "13731:94:14",
																"nodeType": "YulFunctionCall",
																"src": "13731:94:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "13722:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13722:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "13461:370:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13516:6:14",
														"nodeType": "YulTypedName",
														"src": "13516:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13524:3:14",
														"nodeType": "YulTypedName",
														"src": "13524:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "13532:5:14",
														"nodeType": "YulTypedName",
														"src": "13532:5:14",
														"type": ""
													}
												],
												"src": "13461:370:14"
											},
											{
												"body": {
													"nativeSrc": "13970:761:14",
													"nodeType": "YulBlock",
													"src": "13970:761:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "14016:83:14",
																"nodeType": "YulBlock",
																"src": "14016:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14018:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "14018:77:14"
																			},
																			"nativeSrc": "14018:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14018:79:14"
																		},
																		"nativeSrc": "14018:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14018:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13991:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13991:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14000:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14000:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13987:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13987:3:14"
																		},
																		"nativeSrc": "13987:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13987:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14012:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14012:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13983:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13983:3:14"
																},
																"nativeSrc": "13983:32:14",
																"nodeType": "YulFunctionCall",
																"src": "13983:32:14"
															},
															"nativeSrc": "13980:119:14",
															"nodeType": "YulIf",
															"src": "13980:119:14"
														},
														{
															"nativeSrc": "14109:302:14",
															"nodeType": "YulBlock",
															"src": "14109:302:14",
															"statements": [
																{
																	"nativeSrc": "14124:45:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14124:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14155:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "14155:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14166:1:14",
																						"nodeType": "YulLiteral",
																						"src": "14166:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14151:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14151:3:14"
																				},
																				"nativeSrc": "14151:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14151:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "14138:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "14138:12:14"
																		},
																		"nativeSrc": "14138:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14138:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14128:6:14",
																			"nodeType": "YulTypedName",
																			"src": "14128:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "14216:83:14",
																		"nodeType": "YulBlock",
																		"src": "14216:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "14218:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "14218:77:14"
																					},
																					"nativeSrc": "14218:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "14218:79:14"
																				},
																				"nativeSrc": "14218:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "14218:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "14188:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14188:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14196:18:14",
																				"nodeType": "YulLiteral",
																				"src": "14196:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "14185:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "14185:2:14"
																		},
																		"nativeSrc": "14185:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14185:30:14"
																	},
																	"nativeSrc": "14182:117:14",
																	"nodeType": "YulIf",
																	"src": "14182:117:14"
																},
																{
																	"nativeSrc": "14313:88:14",
																	"nodeType": "YulAssignment",
																	"src": "14313:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14373:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "14373:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14384:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "14384:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14369:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14369:3:14"
																				},
																				"nativeSrc": "14369:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14369:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14393:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "14393:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "14323:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "14323:45:14"
																		},
																		"nativeSrc": "14323:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14323:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14313:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "14313:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14421:303:14",
															"nodeType": "YulBlock",
															"src": "14421:303:14",
															"statements": [
																{
																	"nativeSrc": "14436:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14436:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14467:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "14467:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14478:2:14",
																						"nodeType": "YulLiteral",
																						"src": "14478:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14463:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14463:3:14"
																				},
																				"nativeSrc": "14463:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14463:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "14450:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "14450:12:14"
																		},
																		"nativeSrc": "14450:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14450:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14440:6:14",
																			"nodeType": "YulTypedName",
																			"src": "14440:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "14529:83:14",
																		"nodeType": "YulBlock",
																		"src": "14529:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "14531:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "14531:77:14"
																					},
																					"nativeSrc": "14531:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "14531:79:14"
																				},
																				"nativeSrc": "14531:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "14531:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "14501:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14501:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14509:18:14",
																				"nodeType": "YulLiteral",
																				"src": "14509:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "14498:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "14498:2:14"
																		},
																		"nativeSrc": "14498:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14498:30:14"
																	},
																	"nativeSrc": "14495:117:14",
																	"nodeType": "YulIf",
																	"src": "14495:117:14"
																},
																{
																	"nativeSrc": "14626:88:14",
																	"nodeType": "YulAssignment",
																	"src": "14626:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14686:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "14686:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14697:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "14697:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14682:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14682:3:14"
																				},
																				"nativeSrc": "14682:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14682:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14706:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "14706:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "14636:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "14636:45:14"
																		},
																		"nativeSrc": "14636:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14636:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14626:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "14626:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13837:894:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13932:9:14",
														"nodeType": "YulTypedName",
														"src": "13932:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13943:7:14",
														"nodeType": "YulTypedName",
														"src": "13943:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13955:6:14",
														"nodeType": "YulTypedName",
														"src": "13955:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13963:6:14",
														"nodeType": "YulTypedName",
														"src": "13963:6:14",
														"type": ""
													}
												],
												"src": "13837:894:14"
											},
											{
												"body": {
													"nativeSrc": "14811:40:14",
													"nodeType": "YulBlock",
													"src": "14811:40:14",
													"statements": [
														{
															"nativeSrc": "14822:22:14",
															"nodeType": "YulAssignment",
															"src": "14822:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14838:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "14838:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14832:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "14832:5:14"
																},
																"nativeSrc": "14832:12:14",
																"nodeType": "YulFunctionCall",
																"src": "14832:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14822:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14822:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14737:114:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14794:5:14",
														"nodeType": "YulTypedName",
														"src": "14794:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14804:6:14",
														"nodeType": "YulTypedName",
														"src": "14804:6:14",
														"type": ""
													}
												],
												"src": "14737:114:14"
											},
											{
												"body": {
													"nativeSrc": "14968:73:14",
													"nodeType": "YulBlock",
													"src": "14968:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14985:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14985:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14990:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14990:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14978:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14978:6:14"
																},
																"nativeSrc": "14978:19:14",
																"nodeType": "YulFunctionCall",
																"src": "14978:19:14"
															},
															"nativeSrc": "14978:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "14978:19:14"
														},
														{
															"nativeSrc": "15006:29:14",
															"nodeType": "YulAssignment",
															"src": "15006:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15025:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15025:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15030:4:14",
																		"nodeType": "YulLiteral",
																		"src": "15030:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15021:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15021:3:14"
																},
																"nativeSrc": "15021:14:14",
																"nodeType": "YulFunctionCall",
																"src": "15021:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15006:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "15006:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "14857:184:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14940:3:14",
														"nodeType": "YulTypedName",
														"src": "14940:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14945:6:14",
														"nodeType": "YulTypedName",
														"src": "14945:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14956:11:14",
														"nodeType": "YulTypedName",
														"src": "14956:11:14",
														"type": ""
													}
												],
												"src": "14857:184:14"
											},
											{
												"body": {
													"nativeSrc": "15119:60:14",
													"nodeType": "YulBlock",
													"src": "15119:60:14",
													"statements": [
														{
															"nativeSrc": "15129:11:14",
															"nodeType": "YulAssignment",
															"src": "15129:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "15137:3:14",
																"nodeType": "YulIdentifier",
																"src": "15137:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15129:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15129:4:14"
																}
															]
														},
														{
															"nativeSrc": "15150:22:14",
															"nodeType": "YulAssignment",
															"src": "15150:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15162:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15162:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15167:4:14",
																		"nodeType": "YulLiteral",
																		"src": "15167:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15158:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15158:3:14"
																},
																"nativeSrc": "15158:14:14",
																"nodeType": "YulFunctionCall",
																"src": "15158:14:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15150:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15150:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "15047:132:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15106:3:14",
														"nodeType": "YulTypedName",
														"src": "15106:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15114:4:14",
														"nodeType": "YulTypedName",
														"src": "15114:4:14",
														"type": ""
													}
												],
												"src": "15047:132:14"
											},
											{
												"body": {
													"nativeSrc": "15240:53:14",
													"nodeType": "YulBlock",
													"src": "15240:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15257:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15257:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15280:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "15280:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "15262:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "15262:17:14"
																		},
																		"nativeSrc": "15262:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15262:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15250:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15250:6:14"
																},
																"nativeSrc": "15250:37:14",
																"nodeType": "YulFunctionCall",
																"src": "15250:37:14"
															},
															"nativeSrc": "15250:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "15250:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "15185:108:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15228:5:14",
														"nodeType": "YulTypedName",
														"src": "15228:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15235:3:14",
														"nodeType": "YulTypedName",
														"src": "15235:3:14",
														"type": ""
													}
												],
												"src": "15185:108:14"
											},
											{
												"body": {
													"nativeSrc": "15379:99:14",
													"nodeType": "YulBlock",
													"src": "15379:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15423:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15423:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15431:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15431:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "15389:33:14",
																	"nodeType": "YulIdentifier",
																	"src": "15389:33:14"
																},
																"nativeSrc": "15389:46:14",
																"nodeType": "YulFunctionCall",
																"src": "15389:46:14"
															},
															"nativeSrc": "15389:46:14",
															"nodeType": "YulExpressionStatement",
															"src": "15389:46:14"
														},
														{
															"nativeSrc": "15444:28:14",
															"nodeType": "YulAssignment",
															"src": "15444:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15462:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15462:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15467:4:14",
																		"nodeType": "YulLiteral",
																		"src": "15467:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15458:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15458:3:14"
																},
																"nativeSrc": "15458:14:14",
																"nodeType": "YulFunctionCall",
																"src": "15458:14:14"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "15444:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "15444:10:14"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "15299:179:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "15352:6:14",
														"nodeType": "YulTypedName",
														"src": "15352:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15360:3:14",
														"nodeType": "YulTypedName",
														"src": "15360:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "15368:10:14",
														"nodeType": "YulTypedName",
														"src": "15368:10:14",
														"type": ""
													}
												],
												"src": "15299:179:14"
											},
											{
												"body": {
													"nativeSrc": "15559:38:14",
													"nodeType": "YulBlock",
													"src": "15559:38:14",
													"statements": [
														{
															"nativeSrc": "15569:22:14",
															"nodeType": "YulAssignment",
															"src": "15569:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "15581:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15581:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15586:4:14",
																		"nodeType": "YulLiteral",
																		"src": "15586:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15577:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15577:3:14"
																},
																"nativeSrc": "15577:14:14",
																"nodeType": "YulFunctionCall",
																"src": "15577:14:14"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "15569:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15569:4:14"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "15484:113:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15546:3:14",
														"nodeType": "YulTypedName",
														"src": "15546:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "15554:4:14",
														"nodeType": "YulTypedName",
														"src": "15554:4:14",
														"type": ""
													}
												],
												"src": "15484:113:14"
											},
											{
												"body": {
													"nativeSrc": "15757:608:14",
													"nodeType": "YulBlock",
													"src": "15757:608:14",
													"statements": [
														{
															"nativeSrc": "15767:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15767:68:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15829:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "15829:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "15781:47:14",
																	"nodeType": "YulIdentifier",
																	"src": "15781:47:14"
																},
																"nativeSrc": "15781:54:14",
																"nodeType": "YulFunctionCall",
																"src": "15781:54:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15771:6:14",
																	"nodeType": "YulTypedName",
																	"src": "15771:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15844:93:14",
															"nodeType": "YulAssignment",
															"src": "15844:93:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15925:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15925:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15930:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15930:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "15851:73:14",
																	"nodeType": "YulIdentifier",
																	"src": "15851:73:14"
																},
																"nativeSrc": "15851:86:14",
																"nodeType": "YulFunctionCall",
																"src": "15851:86:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15844:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15844:3:14"
																}
															]
														},
														{
															"nativeSrc": "15946:71:14",
															"nodeType": "YulVariableDeclaration",
															"src": "15946:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16011:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16011:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "15961:49:14",
																	"nodeType": "YulIdentifier",
																	"src": "15961:49:14"
																},
																"nativeSrc": "15961:56:14",
																"nodeType": "YulFunctionCall",
																"src": "15961:56:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "15950:7:14",
																	"nodeType": "YulTypedName",
																	"src": "15950:7:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16026:21:14",
															"nodeType": "YulVariableDeclaration",
															"src": "16026:21:14",
															"value": {
																"name": "baseRef",
																"nativeSrc": "16040:7:14",
																"nodeType": "YulIdentifier",
																"src": "16040:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "16030:6:14",
																	"nodeType": "YulTypedName",
																	"src": "16030:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16116:224:14",
																"nodeType": "YulBlock",
																"src": "16116:224:14",
																"statements": [
																	{
																		"nativeSrc": "16130:34:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16130:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16157:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "16157:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "16151:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "16151:5:14"
																			},
																			"nativeSrc": "16151:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16151:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "16134:13:14",
																				"nodeType": "YulTypedName",
																				"src": "16134:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16177:70:14",
																		"nodeType": "YulAssignment",
																		"src": "16177:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "16228:13:14",
																					"nodeType": "YulIdentifier",
																					"src": "16228:13:14"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "16243:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "16243:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "16184:43:14",
																				"nodeType": "YulIdentifier",
																				"src": "16184:43:14"
																			},
																			"nativeSrc": "16184:63:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16184:63:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "16177:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "16177:3:14"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16260:70:14",
																		"nodeType": "YulAssignment",
																		"src": "16260:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16323:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "16323:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "16270:52:14",
																				"nodeType": "YulIdentifier",
																				"src": "16270:52:14"
																			},
																			"nativeSrc": "16270:60:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16270:60:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "16260:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "16260:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "16078:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16078:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16081:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16081:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16075:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16075:2:14"
																},
																"nativeSrc": "16075:13:14",
																"nodeType": "YulFunctionCall",
																"src": "16075:13:14"
															},
															"nativeSrc": "16056:284:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16089:18:14",
																"nodeType": "YulBlock",
																"src": "16089:18:14",
																"statements": [
																	{
																		"nativeSrc": "16091:14:14",
																		"nodeType": "YulAssignment",
																		"src": "16091:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "16100:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "16100:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16103:1:14",
																					"nodeType": "YulLiteral",
																					"src": "16103:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16096:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "16096:3:14"
																			},
																			"nativeSrc": "16096:9:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16096:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "16091:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "16091:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16060:14:14",
																"nodeType": "YulBlock",
																"src": "16060:14:14",
																"statements": [
																	{
																		"nativeSrc": "16062:10:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16062:10:14",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "16071:1:14",
																			"nodeType": "YulLiteral",
																			"src": "16071:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "16066:1:14",
																				"nodeType": "YulTypedName",
																				"src": "16066:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "16056:284:14"
														},
														{
															"nativeSrc": "16349:10:14",
															"nodeType": "YulAssignment",
															"src": "16349:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "16356:3:14",
																"nodeType": "YulIdentifier",
																"src": "16356:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16349:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16349:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "15633:732:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15736:5:14",
														"nodeType": "YulTypedName",
														"src": "15736:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15743:3:14",
														"nodeType": "YulTypedName",
														"src": "15743:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15752:3:14",
														"nodeType": "YulTypedName",
														"src": "15752:3:14",
														"type": ""
													}
												],
												"src": "15633:732:14"
											},
											{
												"body": {
													"nativeSrc": "16519:225:14",
													"nodeType": "YulBlock",
													"src": "16519:225:14",
													"statements": [
														{
															"nativeSrc": "16529:26:14",
															"nodeType": "YulAssignment",
															"src": "16529:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16541:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16541:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16552:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16552:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16537:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16537:3:14"
																},
																"nativeSrc": "16537:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16537:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16529:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16529:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16576:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16576:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16587:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16587:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16572:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16572:3:14"
																		},
																		"nativeSrc": "16572:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16572:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16595:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "16595:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16601:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16601:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16591:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16591:3:14"
																		},
																		"nativeSrc": "16591:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16591:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16565:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16565:6:14"
																},
																"nativeSrc": "16565:47:14",
																"nodeType": "YulFunctionCall",
																"src": "16565:47:14"
															},
															"nativeSrc": "16565:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "16565:47:14"
														},
														{
															"nativeSrc": "16621:116:14",
															"nodeType": "YulAssignment",
															"src": "16621:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16723:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16723:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "16732:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16732:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "16629:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "16629:93:14"
																},
																"nativeSrc": "16629:108:14",
																"nodeType": "YulFunctionCall",
																"src": "16629:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16621:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16621:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "16371:373:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16491:9:14",
														"nodeType": "YulTypedName",
														"src": "16491:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16503:6:14",
														"nodeType": "YulTypedName",
														"src": "16503:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16514:4:14",
														"nodeType": "YulTypedName",
														"src": "16514:4:14",
														"type": ""
													}
												],
												"src": "16371:373:14"
											},
											{
												"body": {
													"nativeSrc": "16900:889:14",
													"nodeType": "YulBlock",
													"src": "16900:889:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "16946:83:14",
																"nodeType": "YulBlock",
																"src": "16946:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16948:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "16948:77:14"
																			},
																			"nativeSrc": "16948:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16948:79:14"
																		},
																		"nativeSrc": "16948:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16948:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16921:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "16921:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16930:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16930:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16917:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16917:3:14"
																		},
																		"nativeSrc": "16917:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16917:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16942:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16942:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16913:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16913:3:14"
																},
																"nativeSrc": "16913:32:14",
																"nodeType": "YulFunctionCall",
																"src": "16913:32:14"
															},
															"nativeSrc": "16910:119:14",
															"nodeType": "YulIf",
															"src": "16910:119:14"
														},
														{
															"nativeSrc": "17039:117:14",
															"nodeType": "YulBlock",
															"src": "17039:117:14",
															"statements": [
																{
																	"nativeSrc": "17054:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17054:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17068:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17068:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17058:6:14",
																			"nodeType": "YulTypedName",
																			"src": "17058:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17083:63:14",
																	"nodeType": "YulAssignment",
																	"src": "17083:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17118:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17118:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17129:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17129:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17114:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17114:3:14"
																				},
																				"nativeSrc": "17114:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17114:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17138:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17138:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17093:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "17093:20:14"
																		},
																		"nativeSrc": "17093:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17093:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17083:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "17083:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17166:303:14",
															"nodeType": "YulBlock",
															"src": "17166:303:14",
															"statements": [
																{
																	"nativeSrc": "17181:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17181:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17212:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17212:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17223:2:14",
																						"nodeType": "YulLiteral",
																						"src": "17223:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17208:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17208:3:14"
																				},
																				"nativeSrc": "17208:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17208:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17195:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "17195:12:14"
																		},
																		"nativeSrc": "17195:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17195:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17185:6:14",
																			"nodeType": "YulTypedName",
																			"src": "17185:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "17274:83:14",
																		"nodeType": "YulBlock",
																		"src": "17274:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "17276:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "17276:77:14"
																					},
																					"nativeSrc": "17276:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "17276:79:14"
																				},
																				"nativeSrc": "17276:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "17276:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "17246:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17246:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17254:18:14",
																				"nodeType": "YulLiteral",
																				"src": "17254:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "17243:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "17243:2:14"
																		},
																		"nativeSrc": "17243:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17243:30:14"
																	},
																	"nativeSrc": "17240:117:14",
																	"nodeType": "YulIf",
																	"src": "17240:117:14"
																},
																{
																	"nativeSrc": "17371:88:14",
																	"nodeType": "YulAssignment",
																	"src": "17371:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17431:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17431:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17442:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17442:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17427:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17427:3:14"
																				},
																				"nativeSrc": "17427:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17427:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17451:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17451:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "17381:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "17381:45:14"
																		},
																		"nativeSrc": "17381:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17381:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17371:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "17371:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17479:303:14",
															"nodeType": "YulBlock",
															"src": "17479:303:14",
															"statements": [
																{
																	"nativeSrc": "17494:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17494:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17525:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17525:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17536:2:14",
																						"nodeType": "YulLiteral",
																						"src": "17536:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17521:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17521:3:14"
																				},
																				"nativeSrc": "17521:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17521:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "17508:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "17508:12:14"
																		},
																		"nativeSrc": "17508:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17508:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17498:6:14",
																			"nodeType": "YulTypedName",
																			"src": "17498:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "17587:83:14",
																		"nodeType": "YulBlock",
																		"src": "17587:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "17589:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "17589:77:14"
																					},
																					"nativeSrc": "17589:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "17589:79:14"
																				},
																				"nativeSrc": "17589:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "17589:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "17559:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17559:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17567:18:14",
																				"nodeType": "YulLiteral",
																				"src": "17567:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "17556:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "17556:2:14"
																		},
																		"nativeSrc": "17556:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17556:30:14"
																	},
																	"nativeSrc": "17553:117:14",
																	"nodeType": "YulIf",
																	"src": "17553:117:14"
																},
																{
																	"nativeSrc": "17684:88:14",
																	"nodeType": "YulAssignment",
																	"src": "17684:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17744:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "17744:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17755:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "17755:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17740:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17740:3:14"
																				},
																				"nativeSrc": "17740:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17740:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17764:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17764:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "17694:45:14",
																			"nodeType": "YulIdentifier",
																			"src": "17694:45:14"
																		},
																		"nativeSrc": "17694:78:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17694:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "17684:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "17684:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "16750:1039:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16854:9:14",
														"nodeType": "YulTypedName",
														"src": "16854:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16865:7:14",
														"nodeType": "YulTypedName",
														"src": "16865:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16877:6:14",
														"nodeType": "YulTypedName",
														"src": "16877:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16885:6:14",
														"nodeType": "YulTypedName",
														"src": "16885:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16893:6:14",
														"nodeType": "YulTypedName",
														"src": "16893:6:14",
														"type": ""
													}
												],
												"src": "16750:1039:14"
											},
											{
												"body": {
													"nativeSrc": "17860:53:14",
													"nodeType": "YulBlock",
													"src": "17860:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17877:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17877:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17900:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "17900:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "17882:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "17882:17:14"
																		},
																		"nativeSrc": "17882:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17882:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17870:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17870:6:14"
																},
																"nativeSrc": "17870:37:14",
																"nodeType": "YulFunctionCall",
																"src": "17870:37:14"
															},
															"nativeSrc": "17870:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "17870:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "17795:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17848:5:14",
														"nodeType": "YulTypedName",
														"src": "17848:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17855:3:14",
														"nodeType": "YulTypedName",
														"src": "17855:3:14",
														"type": ""
													}
												],
												"src": "17795:118:14"
											},
											{
												"body": {
													"nativeSrc": "18017:124:14",
													"nodeType": "YulBlock",
													"src": "18017:124:14",
													"statements": [
														{
															"nativeSrc": "18027:26:14",
															"nodeType": "YulAssignment",
															"src": "18027:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18039:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18039:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18050:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18050:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18035:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18035:3:14"
																},
																"nativeSrc": "18035:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18035:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18027:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18027:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18107:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18107:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18120:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18120:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18131:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18131:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18116:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18116:3:14"
																		},
																		"nativeSrc": "18116:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18116:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18063:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "18063:43:14"
																},
																"nativeSrc": "18063:71:14",
																"nodeType": "YulFunctionCall",
																"src": "18063:71:14"
															},
															"nativeSrc": "18063:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "18063:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "17919:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17989:9:14",
														"nodeType": "YulTypedName",
														"src": "17989:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18001:6:14",
														"nodeType": "YulTypedName",
														"src": "18001:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18012:4:14",
														"nodeType": "YulTypedName",
														"src": "18012:4:14",
														"type": ""
													}
												],
												"src": "17919:222:14"
											},
											{
												"body": {
													"nativeSrc": "18187:76:14",
													"nodeType": "YulBlock",
													"src": "18187:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "18241:16:14",
																"nodeType": "YulBlock",
																"src": "18241:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18250:1:14",
																					"nodeType": "YulLiteral",
																					"src": "18250:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18253:1:14",
																					"nodeType": "YulLiteral",
																					"src": "18253:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18243:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18243:6:14"
																			},
																			"nativeSrc": "18243:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18243:12:14"
																		},
																		"nativeSrc": "18243:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "18243:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18210:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "18210:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18232:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "18232:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "18217:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "18217:14:14"
																				},
																				"nativeSrc": "18217:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18217:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "18207:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "18207:2:14"
																		},
																		"nativeSrc": "18207:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18207:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18200:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18200:6:14"
																},
																"nativeSrc": "18200:40:14",
																"nodeType": "YulFunctionCall",
																"src": "18200:40:14"
															},
															"nativeSrc": "18197:60:14",
															"nodeType": "YulIf",
															"src": "18197:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "18147:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18180:5:14",
														"nodeType": "YulTypedName",
														"src": "18180:5:14",
														"type": ""
													}
												],
												"src": "18147:116:14"
											},
											{
												"body": {
													"nativeSrc": "18318:84:14",
													"nodeType": "YulBlock",
													"src": "18318:84:14",
													"statements": [
														{
															"nativeSrc": "18328:29:14",
															"nodeType": "YulAssignment",
															"src": "18328:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18350:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18350:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "18337:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "18337:12:14"
																},
																"nativeSrc": "18337:20:14",
																"nodeType": "YulFunctionCall",
																"src": "18337:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18328:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "18328:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18390:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "18390:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "18366:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "18366:23:14"
																},
																"nativeSrc": "18366:30:14",
																"nodeType": "YulFunctionCall",
																"src": "18366:30:14"
															},
															"nativeSrc": "18366:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "18366:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "18269:133:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18296:6:14",
														"nodeType": "YulTypedName",
														"src": "18296:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18304:3:14",
														"nodeType": "YulTypedName",
														"src": "18304:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18312:5:14",
														"nodeType": "YulTypedName",
														"src": "18312:5:14",
														"type": ""
													}
												],
												"src": "18269:133:14"
											},
											{
												"body": {
													"nativeSrc": "18488:388:14",
													"nodeType": "YulBlock",
													"src": "18488:388:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "18534:83:14",
																"nodeType": "YulBlock",
																"src": "18534:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18536:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "18536:77:14"
																			},
																			"nativeSrc": "18536:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18536:79:14"
																		},
																		"nativeSrc": "18536:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "18536:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18509:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "18509:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18518:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18518:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18505:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18505:3:14"
																		},
																		"nativeSrc": "18505:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18505:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18530:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18530:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18501:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18501:3:14"
																},
																"nativeSrc": "18501:32:14",
																"nodeType": "YulFunctionCall",
																"src": "18501:32:14"
															},
															"nativeSrc": "18498:119:14",
															"nodeType": "YulIf",
															"src": "18498:119:14"
														},
														{
															"nativeSrc": "18627:117:14",
															"nodeType": "YulBlock",
															"src": "18627:117:14",
															"statements": [
																{
																	"nativeSrc": "18642:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18642:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18656:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18656:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18646:6:14",
																			"nodeType": "YulTypedName",
																			"src": "18646:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18671:63:14",
																	"nodeType": "YulAssignment",
																	"src": "18671:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18706:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "18706:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18717:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "18717:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18702:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "18702:3:14"
																				},
																				"nativeSrc": "18702:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18702:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18726:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "18726:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18681:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "18681:20:14"
																		},
																		"nativeSrc": "18681:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18681:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18671:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "18671:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18754:115:14",
															"nodeType": "YulBlock",
															"src": "18754:115:14",
															"statements": [
																{
																	"nativeSrc": "18769:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18769:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18783:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18783:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18773:6:14",
																			"nodeType": "YulTypedName",
																			"src": "18773:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18799:60:14",
																	"nodeType": "YulAssignment",
																	"src": "18799:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18831:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "18831:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18842:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "18842:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18827:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "18827:3:14"
																				},
																				"nativeSrc": "18827:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18827:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18851:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "18851:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "18809:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "18809:17:14"
																		},
																		"nativeSrc": "18809:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18809:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "18799:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "18799:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "18408:468:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18450:9:14",
														"nodeType": "YulTypedName",
														"src": "18450:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18461:7:14",
														"nodeType": "YulTypedName",
														"src": "18461:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18473:6:14",
														"nodeType": "YulTypedName",
														"src": "18473:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18481:6:14",
														"nodeType": "YulTypedName",
														"src": "18481:6:14",
														"type": ""
													}
												],
												"src": "18408:468:14"
											},
											{
												"body": {
													"nativeSrc": "18974:560:14",
													"nodeType": "YulBlock",
													"src": "18974:560:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "19020:83:14",
																"nodeType": "YulBlock",
																"src": "19020:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19022:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "19022:77:14"
																			},
																			"nativeSrc": "19022:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "19022:79:14"
																		},
																		"nativeSrc": "19022:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "19022:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18995:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "18995:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19004:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19004:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18991:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18991:3:14"
																		},
																		"nativeSrc": "18991:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18991:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19016:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19016:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18987:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18987:3:14"
																},
																"nativeSrc": "18987:32:14",
																"nodeType": "YulFunctionCall",
																"src": "18987:32:14"
															},
															"nativeSrc": "18984:119:14",
															"nodeType": "YulIf",
															"src": "18984:119:14"
														},
														{
															"nativeSrc": "19113:117:14",
															"nodeType": "YulBlock",
															"src": "19113:117:14",
															"statements": [
																{
																	"nativeSrc": "19128:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19128:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19142:1:14",
																		"nodeType": "YulLiteral",
																		"src": "19142:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19132:6:14",
																			"nodeType": "YulTypedName",
																			"src": "19132:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19157:63:14",
																	"nodeType": "YulAssignment",
																	"src": "19157:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19192:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "19192:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19203:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "19203:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19188:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "19188:3:14"
																				},
																				"nativeSrc": "19188:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "19188:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19212:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19212:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "19167:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "19167:20:14"
																		},
																		"nativeSrc": "19167:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19167:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19157:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "19157:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19240:287:14",
															"nodeType": "YulBlock",
															"src": "19240:287:14",
															"statements": [
																{
																	"nativeSrc": "19255:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19255:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19286:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "19286:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19297:2:14",
																						"nodeType": "YulLiteral",
																						"src": "19297:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19282:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "19282:3:14"
																				},
																				"nativeSrc": "19282:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "19282:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "19269:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "19269:12:14"
																		},
																		"nativeSrc": "19269:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19269:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19259:6:14",
																			"nodeType": "YulTypedName",
																			"src": "19259:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "19348:83:14",
																		"nodeType": "YulBlock",
																		"src": "19348:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "19350:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "19350:77:14"
																					},
																					"nativeSrc": "19350:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "19350:79:14"
																				},
																				"nativeSrc": "19350:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "19350:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "19320:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19320:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19328:18:14",
																				"nodeType": "YulLiteral",
																				"src": "19328:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "19317:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "19317:2:14"
																		},
																		"nativeSrc": "19317:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19317:30:14"
																	},
																	"nativeSrc": "19314:117:14",
																	"nodeType": "YulIf",
																	"src": "19314:117:14"
																},
																{
																	"nativeSrc": "19445:72:14",
																	"nodeType": "YulAssignment",
																	"src": "19445:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19489:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "19489:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19500:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "19500:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19485:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "19485:3:14"
																				},
																				"nativeSrc": "19485:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "19485:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19509:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19509:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "19455:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "19455:29:14"
																		},
																		"nativeSrc": "19455:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19455:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "19445:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "19445:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "18882:652:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18936:9:14",
														"nodeType": "YulTypedName",
														"src": "18936:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18947:7:14",
														"nodeType": "YulTypedName",
														"src": "18947:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18959:6:14",
														"nodeType": "YulTypedName",
														"src": "18959:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18967:6:14",
														"nodeType": "YulTypedName",
														"src": "18967:6:14",
														"type": ""
													}
												],
												"src": "18882:652:14"
											},
											{
												"body": {
													"nativeSrc": "19623:391:14",
													"nodeType": "YulBlock",
													"src": "19623:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "19669:83:14",
																"nodeType": "YulBlock",
																"src": "19669:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19671:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "19671:77:14"
																			},
																			"nativeSrc": "19671:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "19671:79:14"
																		},
																		"nativeSrc": "19671:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "19671:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19644:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19644:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19653:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19653:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19640:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19640:3:14"
																		},
																		"nativeSrc": "19640:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19640:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19665:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19665:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19636:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19636:3:14"
																},
																"nativeSrc": "19636:32:14",
																"nodeType": "YulFunctionCall",
																"src": "19636:32:14"
															},
															"nativeSrc": "19633:119:14",
															"nodeType": "YulIf",
															"src": "19633:119:14"
														},
														{
															"nativeSrc": "19762:117:14",
															"nodeType": "YulBlock",
															"src": "19762:117:14",
															"statements": [
																{
																	"nativeSrc": "19777:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19777:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19791:1:14",
																		"nodeType": "YulLiteral",
																		"src": "19791:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19781:6:14",
																			"nodeType": "YulTypedName",
																			"src": "19781:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19806:63:14",
																	"nodeType": "YulAssignment",
																	"src": "19806:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19841:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "19841:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19852:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "19852:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19837:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "19837:3:14"
																				},
																				"nativeSrc": "19837:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "19837:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19861:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19861:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "19816:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "19816:20:14"
																		},
																		"nativeSrc": "19816:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19816:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19806:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "19806:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19889:118:14",
															"nodeType": "YulBlock",
															"src": "19889:118:14",
															"statements": [
																{
																	"nativeSrc": "19904:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19904:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19918:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19918:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19908:6:14",
																			"nodeType": "YulTypedName",
																			"src": "19908:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19934:63:14",
																	"nodeType": "YulAssignment",
																	"src": "19934:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19969:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "19969:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19980:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "19980:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19965:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "19965:3:14"
																				},
																				"nativeSrc": "19965:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "19965:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19989:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19989:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "19944:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "19944:20:14"
																		},
																		"nativeSrc": "19944:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19944:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "19934:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "19934:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "19540:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19585:9:14",
														"nodeType": "YulTypedName",
														"src": "19585:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19596:7:14",
														"nodeType": "YulTypedName",
														"src": "19596:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19608:6:14",
														"nodeType": "YulTypedName",
														"src": "19608:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19616:6:14",
														"nodeType": "YulTypedName",
														"src": "19616:6:14",
														"type": ""
													}
												],
												"src": "19540:474:14"
											},
											{
												"body": {
													"nativeSrc": "20163:946:14",
													"nodeType": "YulBlock",
													"src": "20163:946:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "20210:83:14",
																"nodeType": "YulBlock",
																"src": "20210:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20212:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "20212:77:14"
																			},
																			"nativeSrc": "20212:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "20212:79:14"
																		},
																		"nativeSrc": "20212:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "20212:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20184:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "20184:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20193:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20193:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20180:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20180:3:14"
																		},
																		"nativeSrc": "20180:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20180:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20205:3:14",
																		"nodeType": "YulLiteral",
																		"src": "20205:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20176:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20176:3:14"
																},
																"nativeSrc": "20176:33:14",
																"nodeType": "YulFunctionCall",
																"src": "20176:33:14"
															},
															"nativeSrc": "20173:120:14",
															"nodeType": "YulIf",
															"src": "20173:120:14"
														},
														{
															"nativeSrc": "20303:117:14",
															"nodeType": "YulBlock",
															"src": "20303:117:14",
															"statements": [
																{
																	"nativeSrc": "20318:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20318:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20332:1:14",
																		"nodeType": "YulLiteral",
																		"src": "20332:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20322:6:14",
																			"nodeType": "YulTypedName",
																			"src": "20322:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20347:63:14",
																	"nodeType": "YulAssignment",
																	"src": "20347:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20382:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "20382:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20393:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "20393:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20378:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "20378:3:14"
																				},
																				"nativeSrc": "20378:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20378:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20402:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "20402:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "20357:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "20357:20:14"
																		},
																		"nativeSrc": "20357:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20357:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20347:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "20347:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20430:118:14",
															"nodeType": "YulBlock",
															"src": "20430:118:14",
															"statements": [
																{
																	"nativeSrc": "20445:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20445:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20459:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20459:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20449:6:14",
																			"nodeType": "YulTypedName",
																			"src": "20449:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20475:63:14",
																	"nodeType": "YulAssignment",
																	"src": "20475:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20510:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "20510:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20521:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "20521:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20506:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "20506:3:14"
																				},
																				"nativeSrc": "20506:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20506:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20530:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "20530:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "20485:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "20485:20:14"
																		},
																		"nativeSrc": "20485:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20485:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "20475:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "20475:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20558:118:14",
															"nodeType": "YulBlock",
															"src": "20558:118:14",
															"statements": [
																{
																	"nativeSrc": "20573:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20573:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20587:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20587:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20577:6:14",
																			"nodeType": "YulTypedName",
																			"src": "20577:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20603:63:14",
																	"nodeType": "YulAssignment",
																	"src": "20603:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20638:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "20638:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20649:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "20649:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20634:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "20634:3:14"
																				},
																				"nativeSrc": "20634:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20634:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20658:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "20658:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "20613:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "20613:20:14"
																		},
																		"nativeSrc": "20613:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20613:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "20603:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "20603:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20686:118:14",
															"nodeType": "YulBlock",
															"src": "20686:118:14",
															"statements": [
																{
																	"nativeSrc": "20701:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20701:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20715:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20715:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20705:6:14",
																			"nodeType": "YulTypedName",
																			"src": "20705:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20731:63:14",
																	"nodeType": "YulAssignment",
																	"src": "20731:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20766:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "20766:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20777:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "20777:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20762:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "20762:3:14"
																				},
																				"nativeSrc": "20762:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20762:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20786:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "20786:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "20741:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "20741:20:14"
																		},
																		"nativeSrc": "20741:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20741:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "20731:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "20731:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20814:288:14",
															"nodeType": "YulBlock",
															"src": "20814:288:14",
															"statements": [
																{
																	"nativeSrc": "20829:47:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20829:47:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20860:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "20860:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20871:3:14",
																						"nodeType": "YulLiteral",
																						"src": "20871:3:14",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20856:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "20856:3:14"
																				},
																				"nativeSrc": "20856:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20856:19:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "20843:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "20843:12:14"
																		},
																		"nativeSrc": "20843:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20843:33:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20833:6:14",
																			"nodeType": "YulTypedName",
																			"src": "20833:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "20923:83:14",
																		"nodeType": "YulBlock",
																		"src": "20923:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "20925:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "20925:77:14"
																					},
																					"nativeSrc": "20925:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "20925:79:14"
																				},
																				"nativeSrc": "20925:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "20925:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "20895:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "20895:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20903:18:14",
																				"nodeType": "YulLiteral",
																				"src": "20903:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "20892:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "20892:2:14"
																		},
																		"nativeSrc": "20892:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20892:30:14"
																	},
																	"nativeSrc": "20889:117:14",
																	"nodeType": "YulIf",
																	"src": "20889:117:14"
																},
																{
																	"nativeSrc": "21020:72:14",
																	"nodeType": "YulAssignment",
																	"src": "21020:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21064:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "21064:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21075:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "21075:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21060:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "21060:3:14"
																				},
																				"nativeSrc": "21060:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "21060:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21084:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "21084:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "21030:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "21030:29:14"
																		},
																		"nativeSrc": "21030:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21030:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "21020:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "21020:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "20020:1089:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20101:9:14",
														"nodeType": "YulTypedName",
														"src": "20101:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20112:7:14",
														"nodeType": "YulTypedName",
														"src": "20112:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20124:6:14",
														"nodeType": "YulTypedName",
														"src": "20124:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20132:6:14",
														"nodeType": "YulTypedName",
														"src": "20132:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20140:6:14",
														"nodeType": "YulTypedName",
														"src": "20140:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20148:6:14",
														"nodeType": "YulTypedName",
														"src": "20148:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "20156:6:14",
														"nodeType": "YulTypedName",
														"src": "20156:6:14",
														"type": ""
													}
												],
												"src": "20020:1089:14"
											},
											{
												"body": {
													"nativeSrc": "21181:263:14",
													"nodeType": "YulBlock",
													"src": "21181:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "21227:83:14",
																"nodeType": "YulBlock",
																"src": "21227:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21229:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "21229:77:14"
																			},
																			"nativeSrc": "21229:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21229:79:14"
																		},
																		"nativeSrc": "21229:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21229:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21202:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "21202:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21211:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21211:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21198:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21198:3:14"
																		},
																		"nativeSrc": "21198:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21198:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21223:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21223:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21194:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21194:3:14"
																},
																"nativeSrc": "21194:32:14",
																"nodeType": "YulFunctionCall",
																"src": "21194:32:14"
															},
															"nativeSrc": "21191:119:14",
															"nodeType": "YulIf",
															"src": "21191:119:14"
														},
														{
															"nativeSrc": "21320:117:14",
															"nodeType": "YulBlock",
															"src": "21320:117:14",
															"statements": [
																{
																	"nativeSrc": "21335:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21335:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21349:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21349:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21339:6:14",
																			"nodeType": "YulTypedName",
																			"src": "21339:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21364:63:14",
																	"nodeType": "YulAssignment",
																	"src": "21364:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21399:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "21399:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21410:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "21410:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21395:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "21395:3:14"
																				},
																				"nativeSrc": "21395:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "21395:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21419:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "21419:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "21374:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "21374:20:14"
																		},
																		"nativeSrc": "21374:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21374:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21364:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "21364:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "21115:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21151:9:14",
														"nodeType": "YulTypedName",
														"src": "21151:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21162:7:14",
														"nodeType": "YulTypedName",
														"src": "21162:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21174:6:14",
														"nodeType": "YulTypedName",
														"src": "21174:6:14",
														"type": ""
													}
												],
												"src": "21115:329:14"
											},
											{
												"body": {
													"nativeSrc": "21550:519:14",
													"nodeType": "YulBlock",
													"src": "21550:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "21596:83:14",
																"nodeType": "YulBlock",
																"src": "21596:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21598:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "21598:77:14"
																			},
																			"nativeSrc": "21598:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21598:79:14"
																		},
																		"nativeSrc": "21598:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21598:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21571:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "21571:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21580:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21580:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21567:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21567:3:14"
																		},
																		"nativeSrc": "21567:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21567:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21592:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21592:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21563:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21563:3:14"
																},
																"nativeSrc": "21563:32:14",
																"nodeType": "YulFunctionCall",
																"src": "21563:32:14"
															},
															"nativeSrc": "21560:119:14",
															"nodeType": "YulIf",
															"src": "21560:119:14"
														},
														{
															"nativeSrc": "21689:117:14",
															"nodeType": "YulBlock",
															"src": "21689:117:14",
															"statements": [
																{
																	"nativeSrc": "21704:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21704:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21718:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21718:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21708:6:14",
																			"nodeType": "YulTypedName",
																			"src": "21708:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21733:63:14",
																	"nodeType": "YulAssignment",
																	"src": "21733:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21768:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "21768:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21779:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "21779:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21764:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "21764:3:14"
																				},
																				"nativeSrc": "21764:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "21764:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21788:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "21788:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "21743:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "21743:20:14"
																		},
																		"nativeSrc": "21743:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21743:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21733:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "21733:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21816:118:14",
															"nodeType": "YulBlock",
															"src": "21816:118:14",
															"statements": [
																{
																	"nativeSrc": "21831:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21831:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21845:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21845:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21835:6:14",
																			"nodeType": "YulTypedName",
																			"src": "21835:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21861:63:14",
																	"nodeType": "YulAssignment",
																	"src": "21861:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21896:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "21896:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21907:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "21907:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21892:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "21892:3:14"
																				},
																				"nativeSrc": "21892:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "21892:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21916:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "21916:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "21871:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "21871:20:14"
																		},
																		"nativeSrc": "21871:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21871:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "21861:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "21861:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21944:118:14",
															"nodeType": "YulBlock",
															"src": "21944:118:14",
															"statements": [
																{
																	"nativeSrc": "21959:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21959:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21973:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21973:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21963:6:14",
																			"nodeType": "YulTypedName",
																			"src": "21963:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21989:63:14",
																	"nodeType": "YulAssignment",
																	"src": "21989:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22024:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "22024:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22035:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "22035:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22020:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "22020:3:14"
																				},
																				"nativeSrc": "22020:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22020:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22044:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "22044:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "21999:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "21999:20:14"
																		},
																		"nativeSrc": "21999:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21999:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "21989:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "21989:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "21450:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21504:9:14",
														"nodeType": "YulTypedName",
														"src": "21504:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21515:7:14",
														"nodeType": "YulTypedName",
														"src": "21515:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21527:6:14",
														"nodeType": "YulTypedName",
														"src": "21527:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21535:6:14",
														"nodeType": "YulTypedName",
														"src": "21535:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21543:6:14",
														"nodeType": "YulTypedName",
														"src": "21543:6:14",
														"type": ""
													}
												],
												"src": "21450:619:14"
											},
											{
												"body": {
													"nativeSrc": "22103:152:14",
													"nodeType": "YulBlock",
													"src": "22103:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22120:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22120:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22123:77:14",
																		"nodeType": "YulLiteral",
																		"src": "22123:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22113:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22113:6:14"
																},
																"nativeSrc": "22113:88:14",
																"nodeType": "YulFunctionCall",
																"src": "22113:88:14"
															},
															"nativeSrc": "22113:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "22113:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22217:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22217:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22220:4:14",
																		"nodeType": "YulLiteral",
																		"src": "22220:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22210:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22210:6:14"
																},
																"nativeSrc": "22210:15:14",
																"nodeType": "YulFunctionCall",
																"src": "22210:15:14"
															},
															"nativeSrc": "22210:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "22210:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22241:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22241:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22244:4:14",
																		"nodeType": "YulLiteral",
																		"src": "22244:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22234:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22234:6:14"
																},
																"nativeSrc": "22234:15:14",
																"nodeType": "YulFunctionCall",
																"src": "22234:15:14"
															},
															"nativeSrc": "22234:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "22234:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "22075:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "22075:180:14"
											},
											{
												"body": {
													"nativeSrc": "22312:269:14",
													"nodeType": "YulBlock",
													"src": "22312:269:14",
													"statements": [
														{
															"nativeSrc": "22322:22:14",
															"nodeType": "YulAssignment",
															"src": "22322:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22336:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "22336:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22342:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22342:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22332:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22332:3:14"
																},
																"nativeSrc": "22332:12:14",
																"nodeType": "YulFunctionCall",
																"src": "22332:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "22322:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22322:6:14"
																}
															]
														},
														{
															"nativeSrc": "22353:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "22353:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22383:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "22383:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22389:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22389:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22379:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22379:3:14"
																},
																"nativeSrc": "22379:12:14",
																"nodeType": "YulFunctionCall",
																"src": "22379:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "22357:18:14",
																	"nodeType": "YulTypedName",
																	"src": "22357:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22430:51:14",
																"nodeType": "YulBlock",
																"src": "22430:51:14",
																"statements": [
																	{
																		"nativeSrc": "22444:27:14",
																		"nodeType": "YulAssignment",
																		"src": "22444:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "22458:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "22458:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22466:4:14",
																					"nodeType": "YulLiteral",
																					"src": "22466:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "22454:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "22454:3:14"
																			},
																			"nativeSrc": "22454:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "22454:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "22444:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "22444:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "22410:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "22410:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22403:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22403:6:14"
																},
																"nativeSrc": "22403:26:14",
																"nodeType": "YulFunctionCall",
																"src": "22403:26:14"
															},
															"nativeSrc": "22400:81:14",
															"nodeType": "YulIf",
															"src": "22400:81:14"
														},
														{
															"body": {
																"nativeSrc": "22533:42:14",
																"nodeType": "YulBlock",
																"src": "22533:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "22547:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "22547:16:14"
																			},
																			"nativeSrc": "22547:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "22547:18:14"
																		},
																		"nativeSrc": "22547:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "22547:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "22497:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "22497:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "22520:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "22520:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22528:2:14",
																				"nodeType": "YulLiteral",
																				"src": "22528:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "22517:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "22517:2:14"
																		},
																		"nativeSrc": "22517:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22517:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "22494:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "22494:2:14"
																},
																"nativeSrc": "22494:38:14",
																"nodeType": "YulFunctionCall",
																"src": "22494:38:14"
															},
															"nativeSrc": "22491:84:14",
															"nodeType": "YulIf",
															"src": "22491:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "22261:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22296:4:14",
														"nodeType": "YulTypedName",
														"src": "22296:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "22305:6:14",
														"nodeType": "YulTypedName",
														"src": "22305:6:14",
														"type": ""
													}
												],
												"src": "22261:320:14"
											},
											{
												"body": {
													"nativeSrc": "22713:206:14",
													"nodeType": "YulBlock",
													"src": "22713:206:14",
													"statements": [
														{
															"nativeSrc": "22723:26:14",
															"nodeType": "YulAssignment",
															"src": "22723:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22735:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "22735:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22746:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22746:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22731:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22731:3:14"
																},
																"nativeSrc": "22731:18:14",
																"nodeType": "YulFunctionCall",
																"src": "22731:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22723:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22723:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22803:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22803:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22816:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22816:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22827:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22827:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22812:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22812:3:14"
																		},
																		"nativeSrc": "22812:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22812:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22759:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "22759:43:14"
																},
																"nativeSrc": "22759:71:14",
																"nodeType": "YulFunctionCall",
																"src": "22759:71:14"
															},
															"nativeSrc": "22759:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "22759:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22884:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22884:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22897:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22897:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22908:2:14",
																				"nodeType": "YulLiteral",
																				"src": "22908:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22893:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22893:3:14"
																		},
																		"nativeSrc": "22893:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22893:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22840:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "22840:43:14"
																},
																"nativeSrc": "22840:72:14",
																"nodeType": "YulFunctionCall",
																"src": "22840:72:14"
															},
															"nativeSrc": "22840:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "22840:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "22587:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22677:9:14",
														"nodeType": "YulTypedName",
														"src": "22677:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22689:6:14",
														"nodeType": "YulTypedName",
														"src": "22689:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22697:6:14",
														"nodeType": "YulTypedName",
														"src": "22697:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22708:4:14",
														"nodeType": "YulTypedName",
														"src": "22708:4:14",
														"type": ""
													}
												],
												"src": "22587:332:14"
											},
											{
												"body": {
													"nativeSrc": "23051:206:14",
													"nodeType": "YulBlock",
													"src": "23051:206:14",
													"statements": [
														{
															"nativeSrc": "23061:26:14",
															"nodeType": "YulAssignment",
															"src": "23061:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23073:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "23073:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23084:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23084:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23069:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23069:3:14"
																},
																"nativeSrc": "23069:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23069:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23061:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23061:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23141:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23141:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23154:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23154:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23165:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23165:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23150:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23150:3:14"
																		},
																		"nativeSrc": "23150:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23150:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23097:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "23097:43:14"
																},
																"nativeSrc": "23097:71:14",
																"nodeType": "YulFunctionCall",
																"src": "23097:71:14"
															},
															"nativeSrc": "23097:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "23097:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23222:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "23222:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23235:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23235:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23246:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23246:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23231:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23231:3:14"
																		},
																		"nativeSrc": "23231:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23231:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23178:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "23178:43:14"
																},
																"nativeSrc": "23178:72:14",
																"nodeType": "YulFunctionCall",
																"src": "23178:72:14"
															},
															"nativeSrc": "23178:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "23178:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "22925:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23015:9:14",
														"nodeType": "YulTypedName",
														"src": "23015:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23027:6:14",
														"nodeType": "YulTypedName",
														"src": "23027:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23035:6:14",
														"nodeType": "YulTypedName",
														"src": "23035:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23046:4:14",
														"nodeType": "YulTypedName",
														"src": "23046:4:14",
														"type": ""
													}
												],
												"src": "22925:332:14"
											},
											{
												"body": {
													"nativeSrc": "23291:152:14",
													"nodeType": "YulBlock",
													"src": "23291:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23308:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23308:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23311:77:14",
																		"nodeType": "YulLiteral",
																		"src": "23311:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23301:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23301:6:14"
																},
																"nativeSrc": "23301:88:14",
																"nodeType": "YulFunctionCall",
																"src": "23301:88:14"
															},
															"nativeSrc": "23301:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "23301:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23405:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23405:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23408:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23408:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23398:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23398:6:14"
																},
																"nativeSrc": "23398:15:14",
																"nodeType": "YulFunctionCall",
																"src": "23398:15:14"
															},
															"nativeSrc": "23398:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "23398:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23429:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23429:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23432:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23432:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23422:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23422:6:14"
																},
																"nativeSrc": "23422:15:14",
																"nodeType": "YulFunctionCall",
																"src": "23422:15:14"
															},
															"nativeSrc": "23422:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "23422:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "23263:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "23263:180:14"
											},
											{
												"body": {
													"nativeSrc": "23477:152:14",
													"nodeType": "YulBlock",
													"src": "23477:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23494:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23494:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23497:77:14",
																		"nodeType": "YulLiteral",
																		"src": "23497:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23487:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23487:6:14"
																},
																"nativeSrc": "23487:88:14",
																"nodeType": "YulFunctionCall",
																"src": "23487:88:14"
															},
															"nativeSrc": "23487:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "23487:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23591:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23591:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23594:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23594:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23584:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23584:6:14"
																},
																"nativeSrc": "23584:15:14",
																"nodeType": "YulFunctionCall",
																"src": "23584:15:14"
															},
															"nativeSrc": "23584:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "23584:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23615:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23615:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23618:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23618:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23608:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23608:6:14"
																},
																"nativeSrc": "23608:15:14",
																"nodeType": "YulFunctionCall",
																"src": "23608:15:14"
															},
															"nativeSrc": "23608:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "23608:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "23449:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "23449:180:14"
											},
											{
												"body": {
													"nativeSrc": "23679:147:14",
													"nodeType": "YulBlock",
													"src": "23679:147:14",
													"statements": [
														{
															"nativeSrc": "23689:25:14",
															"nodeType": "YulAssignment",
															"src": "23689:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23712:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23712:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23694:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "23694:17:14"
																},
																"nativeSrc": "23694:20:14",
																"nodeType": "YulFunctionCall",
																"src": "23694:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23689:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "23689:1:14"
																}
															]
														},
														{
															"nativeSrc": "23723:25:14",
															"nodeType": "YulAssignment",
															"src": "23723:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23746:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23746:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23728:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "23728:17:14"
																},
																"nativeSrc": "23728:20:14",
																"nodeType": "YulFunctionCall",
																"src": "23728:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23723:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "23723:1:14"
																}
															]
														},
														{
															"nativeSrc": "23757:16:14",
															"nodeType": "YulAssignment",
															"src": "23757:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23768:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23768:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23771:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23771:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23764:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23764:3:14"
																},
																"nativeSrc": "23764:9:14",
																"nodeType": "YulFunctionCall",
																"src": "23764:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "23757:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23757:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23797:22:14",
																"nodeType": "YulBlock",
																"src": "23797:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23799:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "23799:16:14"
																			},
																			"nativeSrc": "23799:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "23799:18:14"
																		},
																		"nativeSrc": "23799:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "23799:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23789:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23789:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "23792:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23792:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23786:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "23786:2:14"
																},
																"nativeSrc": "23786:10:14",
																"nodeType": "YulFunctionCall",
																"src": "23786:10:14"
															},
															"nativeSrc": "23783:36:14",
															"nodeType": "YulIf",
															"src": "23783:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "23635:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23666:1:14",
														"nodeType": "YulTypedName",
														"src": "23666:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23669:1:14",
														"nodeType": "YulTypedName",
														"src": "23669:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23675:3:14",
														"nodeType": "YulTypedName",
														"src": "23675:3:14",
														"type": ""
													}
												],
												"src": "23635:191:14"
											},
											{
												"body": {
													"nativeSrc": "23886:87:14",
													"nodeType": "YulBlock",
													"src": "23886:87:14",
													"statements": [
														{
															"nativeSrc": "23896:11:14",
															"nodeType": "YulAssignment",
															"src": "23896:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "23904:3:14",
																"nodeType": "YulIdentifier",
																"src": "23904:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23896:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23896:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23924:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23924:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "23927:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23927:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23917:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23917:6:14"
																},
																"nativeSrc": "23917:14:14",
																"nodeType": "YulFunctionCall",
																"src": "23917:14:14"
															},
															"nativeSrc": "23917:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "23917:14:14"
														},
														{
															"nativeSrc": "23940:26:14",
															"nodeType": "YulAssignment",
															"src": "23940:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23958:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23958:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23961:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23961:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "23948:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "23948:9:14"
																},
																"nativeSrc": "23948:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23948:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23940:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23940:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "23832:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "23873:3:14",
														"nodeType": "YulTypedName",
														"src": "23873:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "23881:4:14",
														"nodeType": "YulTypedName",
														"src": "23881:4:14",
														"type": ""
													}
												],
												"src": "23832:141:14"
											},
											{
												"body": {
													"nativeSrc": "24023:49:14",
													"nodeType": "YulBlock",
													"src": "24023:49:14",
													"statements": [
														{
															"nativeSrc": "24033:33:14",
															"nodeType": "YulAssignment",
															"src": "24033:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24051:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "24051:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24058:2:14",
																				"nodeType": "YulLiteral",
																				"src": "24058:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24047:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24047:3:14"
																		},
																		"nativeSrc": "24047:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24047:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24063:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24063:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "24043:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24043:3:14"
																},
																"nativeSrc": "24043:23:14",
																"nodeType": "YulFunctionCall",
																"src": "24043:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24033:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24033:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "23979:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24006:5:14",
														"nodeType": "YulTypedName",
														"src": "24006:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24016:6:14",
														"nodeType": "YulTypedName",
														"src": "24016:6:14",
														"type": ""
													}
												],
												"src": "23979:93:14"
											},
											{
												"body": {
													"nativeSrc": "24131:54:14",
													"nodeType": "YulBlock",
													"src": "24131:54:14",
													"statements": [
														{
															"nativeSrc": "24141:37:14",
															"nodeType": "YulAssignment",
															"src": "24141:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24166:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24166:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24172:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24172:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "24162:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24162:3:14"
																},
																"nativeSrc": "24162:16:14",
																"nodeType": "YulFunctionCall",
																"src": "24162:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24141:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "24141:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "24078:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24106:4:14",
														"nodeType": "YulTypedName",
														"src": "24106:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24112:5:14",
														"nodeType": "YulTypedName",
														"src": "24112:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24122:8:14",
														"nodeType": "YulTypedName",
														"src": "24122:8:14",
														"type": ""
													}
												],
												"src": "24078:107:14"
											},
											{
												"body": {
													"nativeSrc": "24267:317:14",
													"nodeType": "YulBlock",
													"src": "24267:317:14",
													"statements": [
														{
															"nativeSrc": "24277:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24277:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "24298:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "24298:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24310:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24310:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "24294:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24294:3:14"
																},
																"nativeSrc": "24294:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24294:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "24281:9:14",
																	"nodeType": "YulTypedName",
																	"src": "24281:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24321:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24321:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "24352:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24352:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24363:66:14",
																		"nodeType": "YulLiteral",
																		"src": "24363:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "24333:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "24333:18:14"
																},
																"nativeSrc": "24333:97:14",
																"nodeType": "YulFunctionCall",
																"src": "24333:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24325:4:14",
																	"nodeType": "YulTypedName",
																	"src": "24325:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24439:51:14",
															"nodeType": "YulAssignment",
															"src": "24439:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "24470:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24470:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "24481:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "24481:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "24451:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "24451:18:14"
																},
																"nativeSrc": "24451:39:14",
																"nodeType": "YulFunctionCall",
																"src": "24451:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "24439:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "24439:8:14"
																}
															]
														},
														{
															"nativeSrc": "24499:30:14",
															"nodeType": "YulAssignment",
															"src": "24499:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24512:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24512:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "24523:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24523:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "24519:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24519:3:14"
																		},
																		"nativeSrc": "24519:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24519:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24508:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24508:3:14"
																},
																"nativeSrc": "24508:21:14",
																"nodeType": "YulFunctionCall",
																"src": "24508:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24499:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "24499:5:14"
																}
															]
														},
														{
															"nativeSrc": "24538:40:14",
															"nodeType": "YulAssignment",
															"src": "24538:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24551:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24551:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "24562:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "24562:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "24572:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24572:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "24558:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24558:3:14"
																		},
																		"nativeSrc": "24558:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24558:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24548:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "24548:2:14"
																},
																"nativeSrc": "24548:30:14",
																"nodeType": "YulFunctionCall",
																"src": "24548:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24538:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24538:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "24191:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24228:5:14",
														"nodeType": "YulTypedName",
														"src": "24228:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "24235:10:14",
														"nodeType": "YulTypedName",
														"src": "24235:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "24247:8:14",
														"nodeType": "YulTypedName",
														"src": "24247:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24260:6:14",
														"nodeType": "YulTypedName",
														"src": "24260:6:14",
														"type": ""
													}
												],
												"src": "24191:393:14"
											},
											{
												"body": {
													"nativeSrc": "24622:28:14",
													"nodeType": "YulBlock",
													"src": "24622:28:14",
													"statements": [
														{
															"nativeSrc": "24632:12:14",
															"nodeType": "YulAssignment",
															"src": "24632:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "24639:5:14",
																"nodeType": "YulIdentifier",
																"src": "24639:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24632:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24632:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "24590:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24608:5:14",
														"nodeType": "YulTypedName",
														"src": "24608:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24618:3:14",
														"nodeType": "YulTypedName",
														"src": "24618:3:14",
														"type": ""
													}
												],
												"src": "24590:60:14"
											},
											{
												"body": {
													"nativeSrc": "24716:82:14",
													"nodeType": "YulBlock",
													"src": "24716:82:14",
													"statements": [
														{
															"nativeSrc": "24726:66:14",
															"nodeType": "YulAssignment",
															"src": "24726:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24784:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "24784:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "24766:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "24766:17:14"
																				},
																				"nativeSrc": "24766:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "24766:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "24757:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "24757:8:14"
																		},
																		"nativeSrc": "24757:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24757:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "24739:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "24739:17:14"
																},
																"nativeSrc": "24739:53:14",
																"nodeType": "YulFunctionCall",
																"src": "24739:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "24726:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "24726:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "24656:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24696:5:14",
														"nodeType": "YulTypedName",
														"src": "24696:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "24706:9:14",
														"nodeType": "YulTypedName",
														"src": "24706:9:14",
														"type": ""
													}
												],
												"src": "24656:142:14"
											},
											{
												"body": {
													"nativeSrc": "24851:28:14",
													"nodeType": "YulBlock",
													"src": "24851:28:14",
													"statements": [
														{
															"nativeSrc": "24861:12:14",
															"nodeType": "YulAssignment",
															"src": "24861:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "24868:5:14",
																"nodeType": "YulIdentifier",
																"src": "24868:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "24861:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24861:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "24804:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24837:5:14",
														"nodeType": "YulTypedName",
														"src": "24837:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "24847:3:14",
														"nodeType": "YulTypedName",
														"src": "24847:3:14",
														"type": ""
													}
												],
												"src": "24804:75:14"
											},
											{
												"body": {
													"nativeSrc": "24961:193:14",
													"nodeType": "YulBlock",
													"src": "24961:193:14",
													"statements": [
														{
															"nativeSrc": "24971:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "24971:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "25026:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "25026:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "24995:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "24995:30:14"
																},
																"nativeSrc": "24995:39:14",
																"nodeType": "YulFunctionCall",
																"src": "24995:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "24975:16:14",
																	"nodeType": "YulTypedName",
																	"src": "24975:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25050:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25050:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "25090:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "25090:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "25084:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25084:5:14"
																				},
																				"nativeSrc": "25084:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25084:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "25097:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "25097:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "25129:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "25129:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "25105:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "25105:23:14"
																				},
																				"nativeSrc": "25105:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25105:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "25056:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "25056:27:14"
																		},
																		"nativeSrc": "25056:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25056:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "25043:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25043:6:14"
																},
																"nativeSrc": "25043:105:14",
																"nodeType": "YulFunctionCall",
																"src": "25043:105:14"
															},
															"nativeSrc": "25043:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "25043:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "24885:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24938:4:14",
														"nodeType": "YulTypedName",
														"src": "24938:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "24944:6:14",
														"nodeType": "YulTypedName",
														"src": "24944:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "24952:7:14",
														"nodeType": "YulTypedName",
														"src": "24952:7:14",
														"type": ""
													}
												],
												"src": "24885:269:14"
											},
											{
												"body": {
													"nativeSrc": "25209:24:14",
													"nodeType": "YulBlock",
													"src": "25209:24:14",
													"statements": [
														{
															"nativeSrc": "25219:8:14",
															"nodeType": "YulAssignment",
															"src": "25219:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "25226:1:14",
																"nodeType": "YulLiteral",
																"src": "25226:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25219:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25219:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "25160:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25205:3:14",
														"nodeType": "YulTypedName",
														"src": "25205:3:14",
														"type": ""
													}
												],
												"src": "25160:73:14"
											},
											{
												"body": {
													"nativeSrc": "25292:136:14",
													"nodeType": "YulBlock",
													"src": "25292:136:14",
													"statements": [
														{
															"nativeSrc": "25302:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25302:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "25316:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "25316:30:14"
																},
																"nativeSrc": "25316:32:14",
																"nodeType": "YulFunctionCall",
																"src": "25316:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "25306:6:14",
																	"nodeType": "YulTypedName",
																	"src": "25306:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25401:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25401:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "25407:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25407:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "25415:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "25415:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "25357:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "25357:43:14"
																},
																"nativeSrc": "25357:65:14",
																"nodeType": "YulFunctionCall",
																"src": "25357:65:14"
															},
															"nativeSrc": "25357:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "25357:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "25239:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25278:4:14",
														"nodeType": "YulTypedName",
														"src": "25278:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "25284:6:14",
														"nodeType": "YulTypedName",
														"src": "25284:6:14",
														"type": ""
													}
												],
												"src": "25239:189:14"
											},
											{
												"body": {
													"nativeSrc": "25484:136:14",
													"nodeType": "YulBlock",
													"src": "25484:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "25551:63:14",
																"nodeType": "YulBlock",
																"src": "25551:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "25595:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25595:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "25602:1:14",
																					"nodeType": "YulLiteral",
																					"src": "25602:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "25565:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "25565:29:14"
																			},
																			"nativeSrc": "25565:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25565:39:14"
																		},
																		"nativeSrc": "25565:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "25565:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "25504:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25504:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "25511:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "25511:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "25501:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "25501:2:14"
																},
																"nativeSrc": "25501:14:14",
																"nodeType": "YulFunctionCall",
																"src": "25501:14:14"
															},
															"nativeSrc": "25494:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "25516:26:14",
																"nodeType": "YulBlock",
																"src": "25516:26:14",
																"statements": [
																	{
																		"nativeSrc": "25518:22:14",
																		"nodeType": "YulAssignment",
																		"src": "25518:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "25531:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25531:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "25538:1:14",
																					"nodeType": "YulLiteral",
																					"src": "25538:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "25527:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "25527:3:14"
																			},
																			"nativeSrc": "25527:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25527:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "25518:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "25518:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "25498:2:14",
																"nodeType": "YulBlock",
																"src": "25498:2:14",
																"statements": []
															},
															"src": "25494:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "25434:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "25472:5:14",
														"nodeType": "YulTypedName",
														"src": "25472:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "25479:3:14",
														"nodeType": "YulTypedName",
														"src": "25479:3:14",
														"type": ""
													}
												],
												"src": "25434:186:14"
											},
											{
												"body": {
													"nativeSrc": "25705:464:14",
													"nodeType": "YulBlock",
													"src": "25705:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "25731:431:14",
																"nodeType": "YulBlock",
																"src": "25731:431:14",
																"statements": [
																	{
																		"nativeSrc": "25745:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "25745:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "25793:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25793:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "25761:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "25761:31:14"
																			},
																			"nativeSrc": "25761:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25761:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "25749:8:14",
																				"nodeType": "YulTypedName",
																				"src": "25749:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "25812:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "25812:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "25835:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "25835:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "25863:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "25863:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "25845:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "25845:17:14"
																					},
																					"nativeSrc": "25845:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "25845:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "25831:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "25831:3:14"
																			},
																			"nativeSrc": "25831:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25831:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "25816:11:14",
																				"nodeType": "YulTypedName",
																				"src": "25816:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "26032:27:14",
																			"nodeType": "YulBlock",
																			"src": "26032:27:14",
																			"statements": [
																				{
																					"nativeSrc": "26034:23:14",
																					"nodeType": "YulAssignment",
																					"src": "26034:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "26049:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "26049:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "26034:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "26034:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "26016:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "26016:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26028:2:14",
																					"nodeType": "YulLiteral",
																					"src": "26028:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "26013:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "26013:2:14"
																			},
																			"nativeSrc": "26013:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26013:18:14"
																		},
																		"nativeSrc": "26010:49:14",
																		"nodeType": "YulIf",
																		"src": "26010:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "26101:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "26101:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "26118:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "26118:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "26146:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "26146:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "26128:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "26128:17:14"
																							},
																							"nativeSrc": "26128:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "26128:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "26114:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "26114:3:14"
																					},
																					"nativeSrc": "26114:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "26114:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "26072:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "26072:28:14"
																			},
																			"nativeSrc": "26072:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26072:80:14"
																		},
																		"nativeSrc": "26072:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "26072:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "25722:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "25722:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25727:2:14",
																		"nodeType": "YulLiteral",
																		"src": "25727:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25719:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "25719:2:14"
																},
																"nativeSrc": "25719:11:14",
																"nodeType": "YulFunctionCall",
																"src": "25719:11:14"
															},
															"nativeSrc": "25716:446:14",
															"nodeType": "YulIf",
															"src": "25716:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "25626:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "25681:5:14",
														"nodeType": "YulTypedName",
														"src": "25681:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "25688:3:14",
														"nodeType": "YulTypedName",
														"src": "25688:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "25693:10:14",
														"nodeType": "YulTypedName",
														"src": "25693:10:14",
														"type": ""
													}
												],
												"src": "25626:543:14"
											},
											{
												"body": {
													"nativeSrc": "26238:54:14",
													"nodeType": "YulBlock",
													"src": "26238:54:14",
													"statements": [
														{
															"nativeSrc": "26248:37:14",
															"nodeType": "YulAssignment",
															"src": "26248:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "26273:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26273:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "26279:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "26279:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "26269:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26269:3:14"
																},
																"nativeSrc": "26269:16:14",
																"nodeType": "YulFunctionCall",
																"src": "26269:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "26248:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "26248:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "26175:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "26213:4:14",
														"nodeType": "YulTypedName",
														"src": "26213:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "26219:5:14",
														"nodeType": "YulTypedName",
														"src": "26219:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "26229:8:14",
														"nodeType": "YulTypedName",
														"src": "26229:8:14",
														"type": ""
													}
												],
												"src": "26175:117:14"
											},
											{
												"body": {
													"nativeSrc": "26349:118:14",
													"nodeType": "YulBlock",
													"src": "26349:118:14",
													"statements": [
														{
															"nativeSrc": "26359:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "26359:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26408:1:14",
																						"nodeType": "YulLiteral",
																						"src": "26408:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "26411:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "26411:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "26404:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "26404:3:14"
																				},
																				"nativeSrc": "26404:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "26404:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "26423:1:14",
																						"nodeType": "YulLiteral",
																						"src": "26423:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "26419:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "26419:3:14"
																				},
																				"nativeSrc": "26419:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "26419:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "26375:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "26375:28:14"
																		},
																		"nativeSrc": "26375:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26375:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "26371:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26371:3:14"
																},
																"nativeSrc": "26371:56:14",
																"nodeType": "YulFunctionCall",
																"src": "26371:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "26363:4:14",
																	"nodeType": "YulTypedName",
																	"src": "26363:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "26436:25:14",
															"nodeType": "YulAssignment",
															"src": "26436:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26450:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26450:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "26456:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26456:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "26446:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26446:3:14"
																},
																"nativeSrc": "26446:15:14",
																"nodeType": "YulFunctionCall",
																"src": "26446:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "26436:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "26436:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "26298:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "26326:4:14",
														"nodeType": "YulTypedName",
														"src": "26326:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "26332:5:14",
														"nodeType": "YulTypedName",
														"src": "26332:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "26342:6:14",
														"nodeType": "YulTypedName",
														"src": "26342:6:14",
														"type": ""
													}
												],
												"src": "26298:169:14"
											},
											{
												"body": {
													"nativeSrc": "26553:214:14",
													"nodeType": "YulBlock",
													"src": "26553:214:14",
													"statements": [
														{
															"nativeSrc": "26686:37:14",
															"nodeType": "YulAssignment",
															"src": "26686:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26713:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26713:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "26719:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26719:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "26694:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "26694:18:14"
																},
																"nativeSrc": "26694:29:14",
																"nodeType": "YulFunctionCall",
																"src": "26694:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "26686:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "26686:4:14"
																}
															]
														},
														{
															"nativeSrc": "26732:29:14",
															"nodeType": "YulAssignment",
															"src": "26732:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "26743:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26743:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "26753:1:14",
																				"nodeType": "YulLiteral",
																				"src": "26753:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "26756:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "26756:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "26749:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "26749:3:14"
																		},
																		"nativeSrc": "26749:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "26749:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "26740:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "26740:2:14"
																},
																"nativeSrc": "26740:21:14",
																"nodeType": "YulFunctionCall",
																"src": "26740:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "26732:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "26732:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "26472:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "26534:4:14",
														"nodeType": "YulTypedName",
														"src": "26534:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "26540:3:14",
														"nodeType": "YulTypedName",
														"src": "26540:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "26548:4:14",
														"nodeType": "YulTypedName",
														"src": "26548:4:14",
														"type": ""
													}
												],
												"src": "26472:295:14"
											},
											{
												"body": {
													"nativeSrc": "26864:1303:14",
													"nodeType": "YulBlock",
													"src": "26864:1303:14",
													"statements": [
														{
															"nativeSrc": "26875:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "26875:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "26922:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26922:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "26889:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "26889:32:14"
																},
																"nativeSrc": "26889:37:14",
																"nodeType": "YulFunctionCall",
																"src": "26889:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "26879:6:14",
																	"nodeType": "YulTypedName",
																	"src": "26879:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27011:22:14",
																"nodeType": "YulBlock",
																"src": "27011:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "27013:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "27013:16:14"
																			},
																			"nativeSrc": "27013:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "27013:18:14"
																		},
																		"nativeSrc": "27013:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "27013:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "26983:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "26983:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26991:18:14",
																		"nodeType": "YulLiteral",
																		"src": "26991:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26980:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "26980:2:14"
																},
																"nativeSrc": "26980:30:14",
																"nodeType": "YulFunctionCall",
																"src": "26980:30:14"
															},
															"nativeSrc": "26977:56:14",
															"nodeType": "YulIf",
															"src": "26977:56:14"
														},
														{
															"nativeSrc": "27043:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27043:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "27089:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "27089:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "27083:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "27083:5:14"
																		},
																		"nativeSrc": "27083:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27083:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "27057:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "27057:25:14"
																},
																"nativeSrc": "27057:38:14",
																"nodeType": "YulFunctionCall",
																"src": "27057:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "27047:6:14",
																	"nodeType": "YulTypedName",
																	"src": "27047:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "27188:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27188:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "27194:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27194:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "27202:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27202:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "27142:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "27142:45:14"
																},
																"nativeSrc": "27142:67:14",
																"nodeType": "YulFunctionCall",
																"src": "27142:67:14"
															},
															"nativeSrc": "27142:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "27142:67:14"
														},
														{
															"nativeSrc": "27219:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27219:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27236:1:14",
																"nodeType": "YulLiteral",
																"src": "27236:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27223:9:14",
																	"nodeType": "YulTypedName",
																	"src": "27223:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27247:17:14",
															"nodeType": "YulAssignment",
															"src": "27247:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27260:4:14",
																"nodeType": "YulLiteral",
																"src": "27260:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27247:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "27247:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "27311:611:14",
																		"nodeType": "YulBlock",
																		"src": "27311:611:14",
																		"statements": [
																			{
																				"nativeSrc": "27325:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27325:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "27344:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "27344:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "27356:4:14",
																									"nodeType": "YulLiteral",
																									"src": "27356:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "27352:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "27352:3:14"
																							},
																							"nativeSrc": "27352:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "27352:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "27340:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "27340:3:14"
																					},
																					"nativeSrc": "27340:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27340:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "27329:7:14",
																						"nodeType": "YulTypedName",
																						"src": "27329:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27376:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27376:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27422:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "27422:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "27390:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "27390:31:14"
																					},
																					"nativeSrc": "27390:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27390:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "27380:6:14",
																						"nodeType": "YulTypedName",
																						"src": "27380:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "27440:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27440:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27449:1:14",
																					"nodeType": "YulLiteral",
																					"src": "27449:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "27444:1:14",
																						"nodeType": "YulTypedName",
																						"src": "27444:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "27508:163:14",
																					"nodeType": "YulBlock",
																					"src": "27508:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27533:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "27533:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "27551:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "27551:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "27556:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "27556:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "27547:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "27547:3:14"
																												},
																												"nativeSrc": "27547:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "27547:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "27541:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "27541:5:14"
																										},
																										"nativeSrc": "27541:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "27541:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "27526:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "27526:6:14"
																								},
																								"nativeSrc": "27526:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27526:42:14"
																							},
																							"nativeSrc": "27526:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "27526:42:14"
																						},
																						{
																							"nativeSrc": "27585:24:14",
																							"nodeType": "YulAssignment",
																							"src": "27585:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27599:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "27599:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "27607:1:14",
																										"nodeType": "YulLiteral",
																										"src": "27607:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27595:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "27595:3:14"
																								},
																								"nativeSrc": "27595:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27595:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "27585:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "27585:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "27626:31:14",
																							"nodeType": "YulAssignment",
																							"src": "27626:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "27643:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "27643:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "27654:2:14",
																										"nodeType": "YulLiteral",
																										"src": "27654:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27639:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "27639:3:14"
																								},
																								"nativeSrc": "27639:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27639:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "27626:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "27626:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "27474:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "27474:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "27477:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "27477:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "27471:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "27471:2:14"
																					},
																					"nativeSrc": "27471:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27471:14:14"
																				},
																				"nativeSrc": "27463:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "27486:21:14",
																					"nodeType": "YulBlock",
																					"src": "27486:21:14",
																					"statements": [
																						{
																							"nativeSrc": "27488:17:14",
																							"nodeType": "YulAssignment",
																							"src": "27488:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "27497:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "27497:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "27500:4:14",
																										"nodeType": "YulLiteral",
																										"src": "27500:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "27493:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "27493:3:14"
																								},
																								"nativeSrc": "27493:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27493:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "27488:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "27488:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "27467:3:14",
																					"nodeType": "YulBlock",
																					"src": "27467:3:14",
																					"statements": []
																				},
																				"src": "27463:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "27707:156:14",
																					"nodeType": "YulBlock",
																					"src": "27707:156:14",
																					"statements": [
																						{
																							"nativeSrc": "27725:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "27725:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "27752:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "27752:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "27757:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "27757:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "27748:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "27748:3:14"
																										},
																										"nativeSrc": "27748:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "27748:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "27742:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "27742:5:14"
																								},
																								"nativeSrc": "27742:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27742:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "27729:9:14",
																									"nodeType": "YulTypedName",
																									"src": "27729:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "27792:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "27792:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "27819:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "27819:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "27834:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "27834:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "27842:4:14",
																														"nodeType": "YulLiteral",
																														"src": "27842:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "27830:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "27830:3:14"
																												},
																												"nativeSrc": "27830:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "27830:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "27800:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "27800:18:14"
																										},
																										"nativeSrc": "27800:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "27800:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "27785:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "27785:6:14"
																								},
																								"nativeSrc": "27785:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "27785:64:14"
																							},
																							"nativeSrc": "27785:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "27785:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "27690:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "27690:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "27699:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "27699:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "27687:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "27687:2:14"
																					},
																					"nativeSrc": "27687:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27687:19:14"
																				},
																				"nativeSrc": "27684:179:14",
																				"nodeType": "YulIf",
																				"src": "27684:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "27883:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "27883:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "27897:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "27897:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "27905:1:14",
																											"nodeType": "YulLiteral",
																											"src": "27905:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "27893:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "27893:3:14"
																									},
																									"nativeSrc": "27893:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "27893:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "27909:1:14",
																									"nodeType": "YulLiteral",
																									"src": "27909:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "27889:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "27889:3:14"
																							},
																							"nativeSrc": "27889:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "27889:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "27876:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "27876:6:14"
																					},
																					"nativeSrc": "27876:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "27876:36:14"
																				},
																				"nativeSrc": "27876:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "27876:36:14"
																			}
																		]
																	},
																	"nativeSrc": "27304:618:14",
																	"nodeType": "YulCase",
																	"src": "27304:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "27309:1:14",
																		"nodeType": "YulLiteral",
																		"src": "27309:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "27939:222:14",
																		"nodeType": "YulBlock",
																		"src": "27939:222:14",
																		"statements": [
																			{
																				"nativeSrc": "27953:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "27953:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "27966:1:14",
																					"nodeType": "YulLiteral",
																					"src": "27966:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "27957:5:14",
																						"nodeType": "YulTypedName",
																						"src": "27957:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "27990:67:14",
																					"nodeType": "YulBlock",
																					"src": "27990:67:14",
																					"statements": [
																						{
																							"nativeSrc": "28008:35:14",
																							"nodeType": "YulAssignment",
																							"src": "28008:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28027:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "28027:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28032:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28032:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28023:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "28023:3:14"
																										},
																										"nativeSrc": "28023:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28023:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28017:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28017:5:14"
																								},
																								"nativeSrc": "28017:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28017:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "28008:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28008:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "27983:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "27983:6:14"
																				},
																				"nativeSrc": "27980:77:14",
																				"nodeType": "YulIf",
																				"src": "27980:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28077:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28077:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "28136:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28136:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "28143:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28143:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "28083:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "28083:52:14"
																							},
																							"nativeSrc": "28083:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28083:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28070:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "28070:6:14"
																					},
																					"nativeSrc": "28070:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28070:81:14"
																				},
																				"nativeSrc": "28070:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "28070:81:14"
																			}
																		]
																	},
																	"nativeSrc": "27931:230:14",
																	"nodeType": "YulCase",
																	"src": "27931:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27284:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27284:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27292:2:14",
																		"nodeType": "YulLiteral",
																		"src": "27292:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27281:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27281:2:14"
																},
																"nativeSrc": "27281:14:14",
																"nodeType": "YulFunctionCall",
																"src": "27281:14:14"
															},
															"nativeSrc": "27274:887:14",
															"nodeType": "YulSwitch",
															"src": "27274:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "26772:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "26853:4:14",
														"nodeType": "YulTypedName",
														"src": "26853:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "26859:3:14",
														"nodeType": "YulTypedName",
														"src": "26859:3:14",
														"type": ""
													}
												],
												"src": "26772:1395:14"
											},
											{
												"body": {
													"nativeSrc": "28355:371:14",
													"nodeType": "YulBlock",
													"src": "28355:371:14",
													"statements": [
														{
															"nativeSrc": "28365:27:14",
															"nodeType": "YulAssignment",
															"src": "28365:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28377:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "28377:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28388:3:14",
																		"nodeType": "YulLiteral",
																		"src": "28388:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28373:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "28373:3:14"
																},
																"nativeSrc": "28373:19:14",
																"nodeType": "YulFunctionCall",
																"src": "28373:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28365:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "28365:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28446:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28446:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28459:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28459:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28470:1:14",
																				"nodeType": "YulLiteral",
																				"src": "28470:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28455:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28455:3:14"
																		},
																		"nativeSrc": "28455:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28455:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28402:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "28402:43:14"
																},
																"nativeSrc": "28402:71:14",
																"nodeType": "YulFunctionCall",
																"src": "28402:71:14"
															},
															"nativeSrc": "28402:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "28402:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28527:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28527:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28540:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28540:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28551:2:14",
																				"nodeType": "YulLiteral",
																				"src": "28551:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28536:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28536:3:14"
																		},
																		"nativeSrc": "28536:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28536:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28483:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "28483:43:14"
																},
																"nativeSrc": "28483:72:14",
																"nodeType": "YulFunctionCall",
																"src": "28483:72:14"
															},
															"nativeSrc": "28483:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "28483:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28609:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28609:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28622:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28622:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28633:2:14",
																				"nodeType": "YulLiteral",
																				"src": "28633:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28618:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28618:3:14"
																		},
																		"nativeSrc": "28618:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28618:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28565:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "28565:43:14"
																},
																"nativeSrc": "28565:72:14",
																"nodeType": "YulFunctionCall",
																"src": "28565:72:14"
															},
															"nativeSrc": "28565:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "28565:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "28691:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "28691:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28704:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "28704:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28715:2:14",
																				"nodeType": "YulLiteral",
																				"src": "28715:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28700:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "28700:3:14"
																		},
																		"nativeSrc": "28700:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "28700:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28647:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "28647:43:14"
																},
																"nativeSrc": "28647:72:14",
																"nodeType": "YulFunctionCall",
																"src": "28647:72:14"
															},
															"nativeSrc": "28647:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "28647:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "28173:553:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28303:9:14",
														"nodeType": "YulTypedName",
														"src": "28303:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "28315:6:14",
														"nodeType": "YulTypedName",
														"src": "28315:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28323:6:14",
														"nodeType": "YulTypedName",
														"src": "28323:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28331:6:14",
														"nodeType": "YulTypedName",
														"src": "28331:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28339:6:14",
														"nodeType": "YulTypedName",
														"src": "28339:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28350:4:14",
														"nodeType": "YulTypedName",
														"src": "28350:4:14",
														"type": ""
													}
												],
												"src": "28173:553:14"
											},
											{
												"body": {
													"nativeSrc": "28958:408:14",
													"nodeType": "YulBlock",
													"src": "28958:408:14",
													"statements": [
														{
															"nativeSrc": "28968:26:14",
															"nodeType": "YulAssignment",
															"src": "28968:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28980:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "28980:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28991:2:14",
																		"nodeType": "YulLiteral",
																		"src": "28991:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28976:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "28976:3:14"
																},
																"nativeSrc": "28976:18:14",
																"nodeType": "YulFunctionCall",
																"src": "28976:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28968:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "28968:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29015:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29015:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29026:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29026:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29011:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29011:3:14"
																		},
																		"nativeSrc": "29011:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29011:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29034:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "29034:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29040:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29040:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29030:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29030:3:14"
																		},
																		"nativeSrc": "29030:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29030:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29004:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29004:6:14"
																},
																"nativeSrc": "29004:47:14",
																"nodeType": "YulFunctionCall",
																"src": "29004:47:14"
															},
															"nativeSrc": "29004:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "29004:47:14"
														},
														{
															"nativeSrc": "29060:116:14",
															"nodeType": "YulAssignment",
															"src": "29060:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "29162:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29162:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29171:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "29171:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "29068:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "29068:93:14"
																},
																"nativeSrc": "29068:108:14",
																"nodeType": "YulFunctionCall",
																"src": "29068:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29060:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29060:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29197:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29197:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29208:2:14",
																				"nodeType": "YulLiteral",
																				"src": "29208:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29193:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29193:3:14"
																		},
																		"nativeSrc": "29193:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29193:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29217:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "29217:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29223:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29223:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29213:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29213:3:14"
																		},
																		"nativeSrc": "29213:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29213:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29186:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29186:6:14"
																},
																"nativeSrc": "29186:48:14",
																"nodeType": "YulFunctionCall",
																"src": "29186:48:14"
															},
															"nativeSrc": "29186:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "29186:48:14"
														},
														{
															"nativeSrc": "29243:116:14",
															"nodeType": "YulAssignment",
															"src": "29243:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "29345:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29345:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29354:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "29354:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "29251:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "29251:93:14"
																},
																"nativeSrc": "29251:108:14",
																"nodeType": "YulFunctionCall",
																"src": "29251:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29243:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29243:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "28732:634:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28922:9:14",
														"nodeType": "YulTypedName",
														"src": "28922:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28934:6:14",
														"nodeType": "YulTypedName",
														"src": "28934:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28942:6:14",
														"nodeType": "YulTypedName",
														"src": "28942:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28953:4:14",
														"nodeType": "YulTypedName",
														"src": "28953:4:14",
														"type": ""
													}
												],
												"src": "28732:634:14"
											},
											{
												"body": {
													"nativeSrc": "29430:40:14",
													"nodeType": "YulBlock",
													"src": "29430:40:14",
													"statements": [
														{
															"nativeSrc": "29441:22:14",
															"nodeType": "YulAssignment",
															"src": "29441:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29457:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "29457:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "29451:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "29451:5:14"
																},
																"nativeSrc": "29451:12:14",
																"nodeType": "YulFunctionCall",
																"src": "29451:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "29441:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29441:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "29372:98:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29413:5:14",
														"nodeType": "YulTypedName",
														"src": "29413:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "29423:6:14",
														"nodeType": "YulTypedName",
														"src": "29423:6:14",
														"type": ""
													}
												],
												"src": "29372:98:14"
											},
											{
												"body": {
													"nativeSrc": "29571:73:14",
													"nodeType": "YulBlock",
													"src": "29571:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29588:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29588:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29593:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29593:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29581:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29581:6:14"
																},
																"nativeSrc": "29581:19:14",
																"nodeType": "YulFunctionCall",
																"src": "29581:19:14"
															},
															"nativeSrc": "29581:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "29581:19:14"
														},
														{
															"nativeSrc": "29609:29:14",
															"nodeType": "YulAssignment",
															"src": "29609:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29628:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29628:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29633:4:14",
																		"nodeType": "YulLiteral",
																		"src": "29633:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29624:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29624:3:14"
																},
																"nativeSrc": "29624:14:14",
																"nodeType": "YulFunctionCall",
																"src": "29624:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "29609:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "29609:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "29476:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29543:3:14",
														"nodeType": "YulTypedName",
														"src": "29543:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "29548:6:14",
														"nodeType": "YulTypedName",
														"src": "29548:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "29559:11:14",
														"nodeType": "YulTypedName",
														"src": "29559:11:14",
														"type": ""
													}
												],
												"src": "29476:168:14"
											},
											{
												"body": {
													"nativeSrc": "29740:283:14",
													"nodeType": "YulBlock",
													"src": "29740:283:14",
													"statements": [
														{
															"nativeSrc": "29750:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "29750:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29796:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "29796:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "29764:31:14",
																	"nodeType": "YulIdentifier",
																	"src": "29764:31:14"
																},
																"nativeSrc": "29764:38:14",
																"nodeType": "YulFunctionCall",
																"src": "29764:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "29754:6:14",
																	"nodeType": "YulTypedName",
																	"src": "29754:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "29811:77:14",
															"nodeType": "YulAssignment",
															"src": "29811:77:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29876:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29876:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29881:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29881:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "29818:57:14",
																	"nodeType": "YulIdentifier",
																	"src": "29818:57:14"
																},
																"nativeSrc": "29818:70:14",
																"nodeType": "YulFunctionCall",
																"src": "29818:70:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29811:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29811:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "29936:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "29936:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29943:4:14",
																				"nodeType": "YulLiteral",
																				"src": "29943:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29932:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29932:3:14"
																		},
																		"nativeSrc": "29932:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29932:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "29950:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29950:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "29955:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29955:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "29897:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "29897:34:14"
																},
																"nativeSrc": "29897:65:14",
																"nodeType": "YulFunctionCall",
																"src": "29897:65:14"
															},
															"nativeSrc": "29897:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "29897:65:14"
														},
														{
															"nativeSrc": "29971:46:14",
															"nodeType": "YulAssignment",
															"src": "29971:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29982:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29982:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "30009:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "30009:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "29987:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "29987:21:14"
																		},
																		"nativeSrc": "29987:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29987:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29978:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29978:3:14"
																},
																"nativeSrc": "29978:39:14",
																"nodeType": "YulFunctionCall",
																"src": "29978:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29971:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29971:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "29650:373:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "29721:5:14",
														"nodeType": "YulTypedName",
														"src": "29721:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "29728:3:14",
														"nodeType": "YulTypedName",
														"src": "29728:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29736:3:14",
														"nodeType": "YulTypedName",
														"src": "29736:3:14",
														"type": ""
													}
												],
												"src": "29650:373:14"
											},
											{
												"body": {
													"nativeSrc": "30257:523:14",
													"nodeType": "YulBlock",
													"src": "30257:523:14",
													"statements": [
														{
															"nativeSrc": "30267:27:14",
															"nodeType": "YulAssignment",
															"src": "30267:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30279:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "30279:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30290:3:14",
																		"nodeType": "YulLiteral",
																		"src": "30290:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30275:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30275:3:14"
																},
																"nativeSrc": "30275:19:14",
																"nodeType": "YulFunctionCall",
																"src": "30275:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30267:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30267:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30348:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "30348:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30361:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30361:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30372:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30372:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30357:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30357:3:14"
																		},
																		"nativeSrc": "30357:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30357:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30304:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "30304:43:14"
																},
																"nativeSrc": "30304:71:14",
																"nodeType": "YulFunctionCall",
																"src": "30304:71:14"
															},
															"nativeSrc": "30304:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "30304:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30429:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "30429:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30442:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30442:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30453:2:14",
																				"nodeType": "YulLiteral",
																				"src": "30453:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30438:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30438:3:14"
																		},
																		"nativeSrc": "30438:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30438:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30385:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "30385:43:14"
																},
																"nativeSrc": "30385:72:14",
																"nodeType": "YulFunctionCall",
																"src": "30385:72:14"
															},
															"nativeSrc": "30385:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "30385:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "30511:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "30511:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30524:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30524:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30535:2:14",
																				"nodeType": "YulLiteral",
																				"src": "30535:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30520:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30520:3:14"
																		},
																		"nativeSrc": "30520:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30520:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30467:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "30467:43:14"
																},
																"nativeSrc": "30467:72:14",
																"nodeType": "YulFunctionCall",
																"src": "30467:72:14"
															},
															"nativeSrc": "30467:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "30467:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "30593:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "30593:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30606:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30606:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30617:2:14",
																				"nodeType": "YulLiteral",
																				"src": "30617:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30602:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30602:3:14"
																		},
																		"nativeSrc": "30602:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30602:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "30549:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "30549:43:14"
																},
																"nativeSrc": "30549:72:14",
																"nodeType": "YulFunctionCall",
																"src": "30549:72:14"
															},
															"nativeSrc": "30549:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "30549:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30642:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30642:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30653:3:14",
																				"nodeType": "YulLiteral",
																				"src": "30653:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30638:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30638:3:14"
																		},
																		"nativeSrc": "30638:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30638:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30663:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "30663:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30669:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30669:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30659:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30659:3:14"
																		},
																		"nativeSrc": "30659:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30659:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30631:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30631:6:14"
																},
																"nativeSrc": "30631:49:14",
																"nodeType": "YulFunctionCall",
																"src": "30631:49:14"
															},
															"nativeSrc": "30631:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "30631:49:14"
														},
														{
															"nativeSrc": "30689:84:14",
															"nodeType": "YulAssignment",
															"src": "30689:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "30759:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "30759:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "30768:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "30768:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "30697:61:14",
																	"nodeType": "YulIdentifier",
																	"src": "30697:61:14"
																},
																"nativeSrc": "30697:76:14",
																"nodeType": "YulFunctionCall",
																"src": "30697:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30689:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30689:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "30029:751:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30197:9:14",
														"nodeType": "YulTypedName",
														"src": "30197:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "30209:6:14",
														"nodeType": "YulTypedName",
														"src": "30209:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "30217:6:14",
														"nodeType": "YulTypedName",
														"src": "30217:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "30225:6:14",
														"nodeType": "YulTypedName",
														"src": "30225:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30233:6:14",
														"nodeType": "YulTypedName",
														"src": "30233:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30241:6:14",
														"nodeType": "YulTypedName",
														"src": "30241:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30252:4:14",
														"nodeType": "YulTypedName",
														"src": "30252:4:14",
														"type": ""
													}
												],
												"src": "30029:751:14"
											},
											{
												"body": {
													"nativeSrc": "30848:79:14",
													"nodeType": "YulBlock",
													"src": "30848:79:14",
													"statements": [
														{
															"nativeSrc": "30858:22:14",
															"nodeType": "YulAssignment",
															"src": "30858:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "30873:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "30873:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "30867:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "30867:5:14"
																},
																"nativeSrc": "30867:13:14",
																"nodeType": "YulFunctionCall",
																"src": "30867:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "30858:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "30858:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "30915:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "30915:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "30889:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "30889:25:14"
																},
																"nativeSrc": "30889:32:14",
																"nodeType": "YulFunctionCall",
																"src": "30889:32:14"
															},
															"nativeSrc": "30889:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "30889:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "30786:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "30826:6:14",
														"nodeType": "YulTypedName",
														"src": "30826:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "30834:3:14",
														"nodeType": "YulTypedName",
														"src": "30834:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "30842:5:14",
														"nodeType": "YulTypedName",
														"src": "30842:5:14",
														"type": ""
													}
												],
												"src": "30786:141:14"
											},
											{
												"body": {
													"nativeSrc": "31009:273:14",
													"nodeType": "YulBlock",
													"src": "31009:273:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "31055:83:14",
																"nodeType": "YulBlock",
																"src": "31055:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "31057:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "31057:77:14"
																			},
																			"nativeSrc": "31057:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "31057:79:14"
																		},
																		"nativeSrc": "31057:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "31057:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "31030:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "31030:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31039:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31039:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31026:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31026:3:14"
																		},
																		"nativeSrc": "31026:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31026:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31051:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31051:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "31022:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31022:3:14"
																},
																"nativeSrc": "31022:32:14",
																"nodeType": "YulFunctionCall",
																"src": "31022:32:14"
															},
															"nativeSrc": "31019:119:14",
															"nodeType": "YulIf",
															"src": "31019:119:14"
														},
														{
															"nativeSrc": "31148:127:14",
															"nodeType": "YulBlock",
															"src": "31148:127:14",
															"statements": [
																{
																	"nativeSrc": "31163:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "31163:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "31177:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31177:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "31167:6:14",
																			"nodeType": "YulTypedName",
																			"src": "31167:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "31192:73:14",
																	"nodeType": "YulAssignment",
																	"src": "31192:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "31237:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "31237:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "31248:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "31248:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "31233:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "31233:3:14"
																				},
																				"nativeSrc": "31233:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "31233:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "31257:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "31257:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "31202:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "31202:30:14"
																		},
																		"nativeSrc": "31202:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31202:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "31192:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "31192:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "30933:349:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30979:9:14",
														"nodeType": "YulTypedName",
														"src": "30979:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "30990:7:14",
														"nodeType": "YulTypedName",
														"src": "30990:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "31002:6:14",
														"nodeType": "YulTypedName",
														"src": "31002:6:14",
														"type": ""
													}
												],
												"src": "30933:349:14"
											},
											{
												"body": {
													"nativeSrc": "31616:725:14",
													"nodeType": "YulBlock",
													"src": "31616:725:14",
													"statements": [
														{
															"nativeSrc": "31626:27:14",
															"nodeType": "YulAssignment",
															"src": "31626:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31638:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "31638:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31649:3:14",
																		"nodeType": "YulLiteral",
																		"src": "31649:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31634:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31634:3:14"
																},
																"nativeSrc": "31634:19:14",
																"nodeType": "YulFunctionCall",
																"src": "31634:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31626:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "31626:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "31707:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "31707:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31720:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31720:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31731:1:14",
																				"nodeType": "YulLiteral",
																				"src": "31731:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31716:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31716:3:14"
																		},
																		"nativeSrc": "31716:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31716:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31663:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "31663:43:14"
																},
																"nativeSrc": "31663:71:14",
																"nodeType": "YulFunctionCall",
																"src": "31663:71:14"
															},
															"nativeSrc": "31663:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "31663:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "31788:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "31788:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31801:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31801:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31812:2:14",
																				"nodeType": "YulLiteral",
																				"src": "31812:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31797:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31797:3:14"
																		},
																		"nativeSrc": "31797:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31797:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "31744:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "31744:43:14"
																},
																"nativeSrc": "31744:72:14",
																"nodeType": "YulFunctionCall",
																"src": "31744:72:14"
															},
															"nativeSrc": "31744:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "31744:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31837:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31837:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31848:2:14",
																				"nodeType": "YulLiteral",
																				"src": "31848:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31833:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31833:3:14"
																		},
																		"nativeSrc": "31833:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31833:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31857:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "31857:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31863:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31863:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31853:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31853:3:14"
																		},
																		"nativeSrc": "31853:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31853:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31826:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31826:6:14"
																},
																"nativeSrc": "31826:48:14",
																"nodeType": "YulFunctionCall",
																"src": "31826:48:14"
															},
															"nativeSrc": "31826:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "31826:48:14"
														},
														{
															"nativeSrc": "31883:116:14",
															"nodeType": "YulAssignment",
															"src": "31883:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "31985:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "31985:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "31994:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "31994:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "31891:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "31891:93:14"
																},
																"nativeSrc": "31891:108:14",
																"nodeType": "YulFunctionCall",
																"src": "31891:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31883:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "31883:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32020:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32020:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32031:2:14",
																				"nodeType": "YulLiteral",
																				"src": "32031:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32016:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32016:3:14"
																		},
																		"nativeSrc": "32016:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32016:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32040:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "32040:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32046:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32046:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32036:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32036:3:14"
																		},
																		"nativeSrc": "32036:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32036:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32009:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32009:6:14"
																},
																"nativeSrc": "32009:48:14",
																"nodeType": "YulFunctionCall",
																"src": "32009:48:14"
															},
															"nativeSrc": "32009:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "32009:48:14"
														},
														{
															"nativeSrc": "32066:116:14",
															"nodeType": "YulAssignment",
															"src": "32066:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "32168:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "32168:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "32177:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "32177:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "32074:93:14",
																	"nodeType": "YulIdentifier",
																	"src": "32074:93:14"
																},
																"nativeSrc": "32074:108:14",
																"nodeType": "YulFunctionCall",
																"src": "32074:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32066:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32066:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32203:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32203:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32214:3:14",
																				"nodeType": "YulLiteral",
																				"src": "32214:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32199:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32199:3:14"
																		},
																		"nativeSrc": "32199:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32199:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32224:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "32224:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32230:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32230:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32220:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32220:3:14"
																		},
																		"nativeSrc": "32220:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32220:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32192:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32192:6:14"
																},
																"nativeSrc": "32192:49:14",
																"nodeType": "YulFunctionCall",
																"src": "32192:49:14"
															},
															"nativeSrc": "32192:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "32192:49:14"
														},
														{
															"nativeSrc": "32250:84:14",
															"nodeType": "YulAssignment",
															"src": "32250:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "32320:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "32320:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "32329:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "32329:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "32258:61:14",
																	"nodeType": "YulIdentifier",
																	"src": "32258:61:14"
																},
																"nativeSrc": "32258:76:14",
																"nodeType": "YulFunctionCall",
																"src": "32258:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32250:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32250:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "31288:1053:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31556:9:14",
														"nodeType": "YulTypedName",
														"src": "31556:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "31568:6:14",
														"nodeType": "YulTypedName",
														"src": "31568:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "31576:6:14",
														"nodeType": "YulTypedName",
														"src": "31576:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "31584:6:14",
														"nodeType": "YulTypedName",
														"src": "31584:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "31592:6:14",
														"nodeType": "YulTypedName",
														"src": "31592:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "31600:6:14",
														"nodeType": "YulTypedName",
														"src": "31600:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31611:4:14",
														"nodeType": "YulTypedName",
														"src": "31611:4:14",
														"type": ""
													}
												],
												"src": "31288:1053:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fd575f3560e01c8063715018a611610095578063e985e9c511610064578063e985e9c514610291578063f242432a146102c1578063f2fde38b146102dd578063f5298aca146102f9576100fd565b8063715018a6146102315780638da5cb5b1461023b578063a22cb46514610259578063b510391f14610275576100fd565b80632eb2c2d6116100d15780632eb2c2d6146101ad57806331f0e6c8146101c95780634e1273f4146101e55780636b20c45414610215576100fd565b8062fdd58e1461010157806301ffc9a71461013157806302fe5305146101615780630e89341c1461017d575b5f80fd5b61011b600480360381019061011691906119ee565b610315565b6040516101289190611a3b565b60405180910390f35b61014b60048036038101906101469190611aa9565b61036a565b6040516101589190611aee565b60405180910390f35b61017b60048036038101906101769190611c43565b61044b565b005b61019760048036038101906101929190611c8a565b61045f565b6040516101a49190611d15565b60405180910390f35b6101c760048036038101906101c29190611e97565b6104f1565b005b6101e360048036038101906101de9190611f62565b610598565b005b6101ff60048036038101906101fa919061208e565b6105c7565b60405161020c91906121bb565b60405180910390f35b61022f600480360381019061022a91906121db565b6106ce565b005b61023961077a565b005b61024361078d565b6040516102509190612272565b60405180910390f35b610273600480360381019061026e91906122b5565b6107b5565b005b61028f600480360381019061028a91906122f3565b6107cb565b005b6102ab60048036038101906102a6919061234d565b610804565b6040516102b89190611aee565b60405180910390f35b6102db60048036038101906102d6919061238b565b610892565b005b6102f760048036038101906102f2919061241e565b610939565b005b610313600480360381019061030e9190612449565b6109bd565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043457507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610444575061044382610a69565b5b9050919050565b610453610ad2565b61045c81610b59565b50565b60606002805461046e906124c6565b80601f016020809104026020016040519081016040528092919081815260200182805461049a906124c6565b80156104e55780601f106104bc576101008083540402835291602001916104e5565b820191905f5260205f20905b8154815290600101906020018083116104c857829003601f168201915b50505050509050919050565b5f6104fa610b6c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561053f575061053d8682610804565b155b156105835780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161057a9291906124f6565b60405180910390fd5b6105908686868686610b73565b505050505050565b6105a0610ad2565b5f5b828110156105c1576105b484836107cb565b80806001019150506105a2565b50505050565b6060815183511461061357815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161060a92919061251d565b60405180910390fd5b5f835167ffffffffffffffff81111561062f5761062e611b1f565b5b60405190808252806020026020018201604052801561065d5781602001602082028036833780820191505090505b5090505f5b84518110156106c3576106996106818287610c6790919063ffffffff16565b6106948387610c7a90919063ffffffff16565b610315565b8282815181106106ac576106ab612544565b5b602002602001018181525050806001019050610662565b508091505092915050565b6106d6610b6c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561071f575061071d83610718610b6c565b610804565b155b1561076a5761072c610b6c565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107619291906124f6565b60405180910390fd5b610775838383610c8d565b505050565b610782610ad2565b61078b5f610d1d565b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107c76107c0610b6c565b8383610de0565b5050565b6107d3610ad2565b5f60045490506107e68382600185610f49565b600160045f8282546107f8919061259e565b92505081905550505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f61089b610b6c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156108e057506108de8682610804565b155b156109245780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161091b9291906124f6565b60405180910390fd5b6109318686868686610fde565b505050505050565b610941610ad2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109b1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109a89190612272565b60405180910390fd5b6109ba81610d1d565b50565b6109c5610b6c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610a0e5750610a0c83610a07610b6c565b610804565b155b15610a5957610a1b610b6c565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610a509291906124f6565b60405180910390fd5b610a648383836110e4565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610ada610b6c565b73ffffffffffffffffffffffffffffffffffffffff16610af861078d565b73ffffffffffffffffffffffffffffffffffffffff1614610b5757610b1b610b6c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b4e9190612272565b60405180910390fd5b565b8060029081610b68919061276e565b5050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610be3575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610bda9190612272565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610c53575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c4a9190612272565b60405180910390fd5b610c608585858585611186565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cfd575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610cf49190612272565b60405180910390fd5b610d18835f848460405180602001604052805f815250611186565b505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e50575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610e479190612272565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f3c9190611aee565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fb9575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610fb09190612272565b60405180910390fd5b5f80610fc58585611232565b91509150610fd65f87848487611186565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361104e575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016110459190612272565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036110be575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016110b59190612272565b60405180910390fd5b5f806110ca8585611232565b915091506110db8787848487611186565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611154575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161114b9190612272565b60405180910390fd5b5f806111608484611232565b9150915061117f855f848460405180602001604052805f815250611186565b5050505050565b61119285858585611262565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461122b575f6111ce610b6c565b9050600184510361121a575f6111ed5f86610c7a90919063ffffffff16565b90505f6112035f86610c7a90919063ffffffff16565b90506112138389898585896115f2565b5050611229565b6112288187878787876117a1565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b80518251146112ac57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016112a392919061251d565b60405180910390fd5b5f6112b5610b6c565b90505f5b83518110156114b1575f6112d68286610c7a90919063ffffffff16565b90505f6112ec8386610c7a90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461140f575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156113bb57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016113b2949392919061283d565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146114a457805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461149c919061259e565b925050819055505b50508060010190506112b9565b50600183510361156c575f6114cf5f85610c7a90919063ffffffff16565b90505f6114e55f85610c7a90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62858560405161155d92919061251d565b60405180910390a450506115eb565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516115e2929190612880565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611799578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611652959493929190612907565b6020604051808303815f875af192505050801561168d57506040513d601f19601f8201168201806040525081019061168a9190612973565b60015b61170e573d805f81146116bb576040519150601f19603f3d011682016040523d82523d5f602084013e6116c0565b606091505b505f81510361170657846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116fd9190612272565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461179757846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161178e9190612272565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611948578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b815260040161180195949392919061299e565b6020604051808303815f875af192505050801561183c57506040513d601f19601f820116820180604052508101906118399190612973565b60015b6118bd573d805f811461186a576040519150601f19603f3d011682016040523d82523d5f602084013e61186f565b606091505b505f8151036118b557846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016118ac9190612272565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461194657846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161193d9190612272565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61198a82611961565b9050919050565b61199a81611980565b81146119a4575f80fd5b50565b5f813590506119b581611991565b92915050565b5f819050919050565b6119cd816119bb565b81146119d7575f80fd5b50565b5f813590506119e8816119c4565b92915050565b5f8060408385031215611a0457611a03611959565b5b5f611a11858286016119a7565b9250506020611a22858286016119da565b9150509250929050565b611a35816119bb565b82525050565b5f602082019050611a4e5f830184611a2c565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a8881611a54565b8114611a92575f80fd5b50565b5f81359050611aa381611a7f565b92915050565b5f60208284031215611abe57611abd611959565b5b5f611acb84828501611a95565b91505092915050565b5f8115159050919050565b611ae881611ad4565b82525050565b5f602082019050611b015f830184611adf565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b5582611b0f565b810181811067ffffffffffffffff82111715611b7457611b73611b1f565b5b80604052505050565b5f611b86611950565b9050611b928282611b4c565b919050565b5f67ffffffffffffffff821115611bb157611bb0611b1f565b5b611bba82611b0f565b9050602081019050919050565b828183375f83830152505050565b5f611be7611be284611b97565b611b7d565b905082815260208101848484011115611c0357611c02611b0b565b5b611c0e848285611bc7565b509392505050565b5f82601f830112611c2a57611c29611b07565b5b8135611c3a848260208601611bd5565b91505092915050565b5f60208284031215611c5857611c57611959565b5b5f82013567ffffffffffffffff811115611c7557611c7461195d565b5b611c8184828501611c16565b91505092915050565b5f60208284031215611c9f57611c9e611959565b5b5f611cac848285016119da565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611ce782611cb5565b611cf18185611cbf565b9350611d01818560208601611ccf565b611d0a81611b0f565b840191505092915050565b5f6020820190508181035f830152611d2d8184611cdd565b905092915050565b5f67ffffffffffffffff821115611d4f57611d4e611b1f565b5b602082029050602081019050919050565b5f80fd5b5f611d76611d7184611d35565b611b7d565b90508083825260208201905060208402830185811115611d9957611d98611d60565b5b835b81811015611dc25780611dae88826119da565b845260208401935050602081019050611d9b565b5050509392505050565b5f82601f830112611de057611ddf611b07565b5b8135611df0848260208601611d64565b91505092915050565b5f67ffffffffffffffff821115611e1357611e12611b1f565b5b611e1c82611b0f565b9050602081019050919050565b5f611e3b611e3684611df9565b611b7d565b905082815260208101848484011115611e5757611e56611b0b565b5b611e62848285611bc7565b509392505050565b5f82601f830112611e7e57611e7d611b07565b5b8135611e8e848260208601611e29565b91505092915050565b5f805f805f60a08688031215611eb057611eaf611959565b5b5f611ebd888289016119a7565b9550506020611ece888289016119a7565b945050604086013567ffffffffffffffff811115611eef57611eee61195d565b5b611efb88828901611dcc565b935050606086013567ffffffffffffffff811115611f1c57611f1b61195d565b5b611f2888828901611dcc565b925050608086013567ffffffffffffffff811115611f4957611f4861195d565b5b611f5588828901611e6a565b9150509295509295909350565b5f805f60608486031215611f7957611f78611959565b5b5f611f86868287016119a7565b9350506020611f97868287016119da565b925050604084013567ffffffffffffffff811115611fb857611fb761195d565b5b611fc486828701611e6a565b9150509250925092565b5f67ffffffffffffffff821115611fe857611fe7611b1f565b5b602082029050602081019050919050565b5f61200b61200684611fce565b611b7d565b9050808382526020820190506020840283018581111561202e5761202d611d60565b5b835b81811015612057578061204388826119a7565b845260208401935050602081019050612030565b5050509392505050565b5f82601f83011261207557612074611b07565b5b8135612085848260208601611ff9565b91505092915050565b5f80604083850312156120a4576120a3611959565b5b5f83013567ffffffffffffffff8111156120c1576120c061195d565b5b6120cd85828601612061565b925050602083013567ffffffffffffffff8111156120ee576120ed61195d565b5b6120fa85828601611dcc565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b612136816119bb565b82525050565b5f612147838361212d565b60208301905092915050565b5f602082019050919050565b5f61216982612104565b612173818561210e565b935061217e8361211e565b805f5b838110156121ae578151612195888261213c565b97506121a083612153565b925050600181019050612181565b5085935050505092915050565b5f6020820190508181035f8301526121d3818461215f565b905092915050565b5f805f606084860312156121f2576121f1611959565b5b5f6121ff868287016119a7565b935050602084013567ffffffffffffffff8111156122205761221f61195d565b5b61222c86828701611dcc565b925050604084013567ffffffffffffffff81111561224d5761224c61195d565b5b61225986828701611dcc565b9150509250925092565b61226c81611980565b82525050565b5f6020820190506122855f830184612263565b92915050565b61229481611ad4565b811461229e575f80fd5b50565b5f813590506122af8161228b565b92915050565b5f80604083850312156122cb576122ca611959565b5b5f6122d8858286016119a7565b92505060206122e9858286016122a1565b9150509250929050565b5f806040838503121561230957612308611959565b5b5f612316858286016119a7565b925050602083013567ffffffffffffffff8111156123375761233661195d565b5b61234385828601611e6a565b9150509250929050565b5f806040838503121561236357612362611959565b5b5f612370858286016119a7565b9250506020612381858286016119a7565b9150509250929050565b5f805f805f60a086880312156123a4576123a3611959565b5b5f6123b1888289016119a7565b95505060206123c2888289016119a7565b94505060406123d3888289016119da565b93505060606123e4888289016119da565b925050608086013567ffffffffffffffff8111156124055761240461195d565b5b61241188828901611e6a565b9150509295509295909350565b5f6020828403121561243357612432611959565b5b5f612440848285016119a7565b91505092915050565b5f805f606084860312156124605761245f611959565b5b5f61246d868287016119a7565b935050602061247e868287016119da565b925050604061248f868287016119da565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124dd57607f821691505b6020821081036124f0576124ef612499565b5b50919050565b5f6040820190506125095f830185612263565b6125166020830184612263565b9392505050565b5f6040820190506125305f830185611a2c565b61253d6020830184611a2c565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6125a8826119bb565b91506125b3836119bb565b92508282019050808211156125cb576125ca612571565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261262d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826125f2565b61263786836125f2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61267261266d612668846119bb565b61264f565b6119bb565b9050919050565b5f819050919050565b61268b83612658565b61269f61269782612679565b8484546125fe565b825550505050565b5f90565b6126b36126a7565b6126be818484612682565b505050565b5b818110156126e1576126d65f826126ab565b6001810190506126c4565b5050565b601f821115612726576126f7816125d1565b612700846125e3565b8101602085101561270f578190505b61272361271b856125e3565b8301826126c3565b50505b505050565b5f82821c905092915050565b5f6127465f198460080261272b565b1980831691505092915050565b5f61275e8383612737565b9150826002028217905092915050565b61277782611cb5565b67ffffffffffffffff8111156127905761278f611b1f565b5b61279a82546124c6565b6127a58282856126e5565b5f60209050601f8311600181146127d6575f84156127c4578287015190505b6127ce8582612753565b865550612835565b601f1984166127e4866125d1565b5f5b8281101561280b578489015182556001820191506020850194506020810190506127e6565b868310156128285784890151612824601f891682612737565b8355505b6001600288020188555050505b505050505050565b5f6080820190506128505f830187612263565b61285d6020830186611a2c565b61286a6040830185611a2c565b6128776060830184611a2c565b95945050505050565b5f6040820190508181035f830152612898818561215f565b905081810360208301526128ac818461215f565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f6128d9826128b5565b6128e381856128bf565b93506128f3818560208601611ccf565b6128fc81611b0f565b840191505092915050565b5f60a08201905061291a5f830188612263565b6129276020830187612263565b6129346040830186611a2c565b6129416060830185611a2c565b818103608083015261295381846128cf565b90509695505050505050565b5f8151905061296d81611a7f565b92915050565b5f6020828403121561298857612987611959565b5b5f6129958482850161295f565b91505092915050565b5f60a0820190506129b15f830188612263565b6129be6020830187612263565b81810360408301526129d0818661215f565b905081810360608301526129e4818561215f565b905081810360808301526129f881846128cf565b9050969550505050505056fea26469706673582212208188fdba4badb1d6c7b77d7c8e4312a86d05e853a58231cfa5e8c49f884e862c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2F9 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xB510391F EQ PUSH2 0x275 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x31F0E6C8 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x215 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x17D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x19EE JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1C43 JUMP JUMPDEST PUSH2 0x44B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1F62 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x208E JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH2 0x77A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x243 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x234D JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x241E JUMP JUMPDEST PUSH2 0x939 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x2449 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x434 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x443 DUP3 PUSH2 0xA69 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x45C DUP2 PUSH2 0xB59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x46E SWAP1 PUSH2 0x24C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49A SWAP1 PUSH2 0x24C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4FA PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x53F JUMPI POP PUSH2 0x53D DUP7 DUP3 PUSH2 0x804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x583 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57A SWAP3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x590 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xB73 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5A0 PUSH2 0xAD2 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x5B4 DUP5 DUP4 PUSH2 0x7CB JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5A2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x613 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60A SWAP3 SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6C3 JUMPI PUSH2 0x699 PUSH2 0x681 DUP3 DUP8 PUSH2 0xC67 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x694 DUP4 DUP8 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0x2544 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x662 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6D6 PUSH2 0xB6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x71F JUMPI POP PUSH2 0x71D DUP4 PUSH2 0x718 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x76A JUMPI PUSH2 0x72C PUSH2 0xB6C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x761 SWAP3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x775 DUP4 DUP4 DUP4 PUSH2 0xC8D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x782 PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x78B PUSH0 PUSH2 0xD1D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7C7 PUSH2 0x7C0 PUSH2 0xB6C JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDE0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xAD2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x7E6 DUP4 DUP3 PUSH1 0x1 DUP6 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x89B PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8E0 JUMPI POP PUSH2 0x8DE DUP7 DUP3 PUSH2 0x804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x924 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91B SWAP3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x931 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xFDE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x941 PUSH2 0xAD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A8 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BA DUP2 PUSH2 0xD1D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C5 PUSH2 0xB6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA0E JUMPI POP PUSH2 0xA0C DUP4 PUSH2 0xA07 PUSH2 0xB6C JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA1B PUSH2 0xB6C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP3 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA64 DUP4 DUP4 DUP4 PUSH2 0x10E4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xADA PUSH2 0xB6C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAF8 PUSH2 0x78D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB57 JUMPI PUSH2 0xB1B PUSH2 0xB6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x276E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDA SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC53 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC60 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCFD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF4 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD18 DUP4 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1186 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE50 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xFC5 DUP6 DUP6 PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xFD6 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x104E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1045 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B5 SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x10CA DUP6 DUP6 PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10DB DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1154 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114B SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x1160 DUP5 DUP5 PUSH2 0x1232 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x117F DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1186 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1192 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1262 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x122B JUMPI PUSH0 PUSH2 0x11CE PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x121A JUMPI PUSH0 PUSH2 0x11ED PUSH0 DUP7 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1203 PUSH0 DUP7 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1213 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x15F2 JUMP JUMPDEST POP POP PUSH2 0x1229 JUMP JUMPDEST PUSH2 0x1228 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x17A1 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x12AC JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A3 SWAP3 SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x12B5 PUSH2 0xB6C JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x14B1 JUMPI PUSH0 PUSH2 0x12D6 DUP3 DUP7 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12EC DUP4 DUP7 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x140F JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13BB JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x283D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14A4 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x149C SWAP2 SWAP1 PUSH2 0x259E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x12B9 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x156C JUMPI PUSH0 PUSH2 0x14CF PUSH0 DUP6 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x14E5 PUSH0 DUP6 PUSH2 0xC7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x155D SWAP3 SWAP2 SWAP1 PUSH2 0x251D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x15EB JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x15E2 SWAP3 SWAP2 SWAP1 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1799 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1652 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2907 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x168D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x168A SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x170E JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x16BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1706 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FD SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1797 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178E SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1948 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1801 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x299E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x183C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1839 SWAP2 SWAP1 PUSH2 0x2973 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x18BD JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x186A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x186F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x18B5 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AC SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1946 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193D SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x198A DUP3 PUSH2 0x1961 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x199A DUP2 PUSH2 0x1980 JUMP JUMPDEST DUP2 EQ PUSH2 0x19A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19B5 DUP2 PUSH2 0x1991 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CD DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP2 EQ PUSH2 0x19D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E8 DUP2 PUSH2 0x19C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A11 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A22 DUP6 DUP3 DUP7 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A35 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A4E PUSH0 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A88 DUP2 PUSH2 0x1A54 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A92 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AA3 DUP2 PUSH2 0x1A7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABE JUMPI PUSH2 0x1ABD PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ACB DUP5 DUP3 DUP6 ADD PUSH2 0x1A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B01 PUSH0 DUP4 ADD DUP5 PUSH2 0x1ADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B55 DUP3 PUSH2 0x1B0F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B74 JUMPI PUSH2 0x1B73 PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B86 PUSH2 0x1950 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B92 DUP3 DUP3 PUSH2 0x1B4C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BB1 JUMPI PUSH2 0x1BB0 PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH2 0x1BBA DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE7 PUSH2 0x1BE2 DUP5 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C03 JUMPI PUSH2 0x1C02 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST PUSH2 0x1C0E DUP5 DUP3 DUP6 PUSH2 0x1BC7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x1B07 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C3A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C75 JUMPI PUSH2 0x1C74 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1C81 DUP5 DUP3 DUP6 ADD PUSH2 0x1C16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9F JUMPI PUSH2 0x1C9E PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CAC DUP5 DUP3 DUP6 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE7 DUP3 PUSH2 0x1CB5 JUMP JUMPDEST PUSH2 0x1CF1 DUP2 DUP6 PUSH2 0x1CBF JUMP JUMPDEST SWAP4 POP PUSH2 0x1D01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1D0A DUP2 PUSH2 0x1B0F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D2D DUP2 DUP5 PUSH2 0x1CDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D4F JUMPI PUSH2 0x1D4E PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1D76 PUSH2 0x1D71 DUP5 PUSH2 0x1D35 JUMP JUMPDEST PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D98 PUSH2 0x1D60 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DC2 JUMPI DUP1 PUSH2 0x1DAE DUP9 DUP3 PUSH2 0x19DA JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D9B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DE0 JUMPI PUSH2 0x1DDF PUSH2 0x1B07 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E13 JUMPI PUSH2 0x1E12 PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH2 0x1E1C DUP3 PUSH2 0x1B0F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3B PUSH2 0x1E36 DUP5 PUSH2 0x1DF9 JUMP JUMPDEST PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E57 JUMPI PUSH2 0x1E56 PUSH2 0x1B0B JUMP JUMPDEST JUMPDEST PUSH2 0x1E62 DUP5 DUP3 DUP6 PUSH2 0x1BC7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x1B07 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E8E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EB0 JUMPI PUSH2 0x1EAF PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EBD DUP9 DUP3 DUP10 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1ECE DUP9 DUP3 DUP10 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EEF JUMPI PUSH2 0x1EEE PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1EFB DUP9 DUP3 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1F28 DUP9 DUP3 DUP10 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F49 JUMPI PUSH2 0x1F48 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1F55 DUP9 DUP3 DUP10 ADD PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F79 JUMPI PUSH2 0x1F78 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F86 DUP7 DUP3 DUP8 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F97 DUP7 DUP3 DUP8 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x1FC4 DUP7 DUP3 DUP8 ADD PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE8 JUMPI PUSH2 0x1FE7 PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x200B PUSH2 0x2006 DUP5 PUSH2 0x1FCE JUMP JUMPDEST PUSH2 0x1B7D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x202E JUMPI PUSH2 0x202D PUSH2 0x1D60 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2057 JUMPI DUP1 PUSH2 0x2043 DUP9 DUP3 PUSH2 0x19A7 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2030 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2075 JUMPI PUSH2 0x2074 PUSH2 0x1B07 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2085 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A3 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C1 JUMPI PUSH2 0x20C0 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x20CD DUP6 DUP3 DUP7 ADD PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20EE JUMPI PUSH2 0x20ED PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x20FA DUP6 DUP3 DUP7 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2136 DUP2 PUSH2 0x19BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2147 DUP4 DUP4 PUSH2 0x212D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2169 DUP3 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x2173 DUP2 DUP6 PUSH2 0x210E JUMP JUMPDEST SWAP4 POP PUSH2 0x217E DUP4 PUSH2 0x211E JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21AE JUMPI DUP2 MLOAD PUSH2 0x2195 DUP9 DUP3 PUSH2 0x213C JUMP JUMPDEST SWAP8 POP PUSH2 0x21A0 DUP4 PUSH2 0x2153 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2181 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D3 DUP2 DUP5 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21F2 JUMPI PUSH2 0x21F1 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21FF DUP7 DUP3 DUP8 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x221F PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x222C DUP7 DUP3 DUP8 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x2259 DUP7 DUP3 DUP8 ADD PUSH2 0x1DCC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x226C DUP2 PUSH2 0x1980 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2285 PUSH0 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2294 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST DUP2 EQ PUSH2 0x229E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22AF DUP2 PUSH2 0x228B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22CB JUMPI PUSH2 0x22CA PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22D8 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E9 DUP6 DUP3 DUP7 ADD PUSH2 0x22A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2309 JUMPI PUSH2 0x2308 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2316 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2337 JUMPI PUSH2 0x2336 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x2343 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2362 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2370 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2381 DUP6 DUP3 DUP7 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23A4 JUMPI PUSH2 0x23A3 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B1 DUP9 DUP3 DUP10 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23C2 DUP9 DUP3 DUP10 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23D3 DUP9 DUP3 DUP10 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x23E4 DUP9 DUP3 DUP10 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2405 JUMPI PUSH2 0x2404 PUSH2 0x195D JUMP JUMPDEST JUMPDEST PUSH2 0x2411 DUP9 DUP3 DUP10 ADD PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2433 JUMPI PUSH2 0x2432 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2440 DUP5 DUP3 DUP6 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2460 JUMPI PUSH2 0x245F PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x246D DUP7 DUP3 DUP8 ADD PUSH2 0x19A7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x247E DUP7 DUP3 DUP8 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x248F DUP7 DUP3 DUP8 ADD PUSH2 0x19DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x24DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24F0 JUMPI PUSH2 0x24EF PUSH2 0x2499 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2509 PUSH0 DUP4 ADD DUP6 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2516 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2263 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2530 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x253D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25A8 DUP3 PUSH2 0x19BB JUMP JUMPDEST SWAP2 POP PUSH2 0x25B3 DUP4 PUSH2 0x19BB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25CB JUMPI PUSH2 0x25CA PUSH2 0x2571 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x262D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x25F2 JUMP JUMPDEST PUSH2 0x2637 DUP7 DUP4 PUSH2 0x25F2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2672 PUSH2 0x266D PUSH2 0x2668 DUP5 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x264F JUMP JUMPDEST PUSH2 0x19BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x268B DUP4 PUSH2 0x2658 JUMP JUMPDEST PUSH2 0x269F PUSH2 0x2697 DUP3 PUSH2 0x2679 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x25FE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x26B3 PUSH2 0x26A7 JUMP JUMPDEST PUSH2 0x26BE DUP2 DUP5 DUP5 PUSH2 0x2682 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x26E1 JUMPI PUSH2 0x26D6 PUSH0 DUP3 PUSH2 0x26AB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2726 JUMPI PUSH2 0x26F7 DUP2 PUSH2 0x25D1 JUMP JUMPDEST PUSH2 0x2700 DUP5 PUSH2 0x25E3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x270F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2723 PUSH2 0x271B DUP6 PUSH2 0x25E3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x26C3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2746 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x272B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x275E DUP4 DUP4 PUSH2 0x2737 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2777 DUP3 PUSH2 0x1CB5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2790 JUMPI PUSH2 0x278F PUSH2 0x1B1F JUMP JUMPDEST JUMPDEST PUSH2 0x279A DUP3 SLOAD PUSH2 0x24C6 JUMP JUMPDEST PUSH2 0x27A5 DUP3 DUP3 DUP6 PUSH2 0x26E5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x27D6 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x27C4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x27CE DUP6 DUP3 PUSH2 0x2753 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2835 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x27E4 DUP7 PUSH2 0x25D1 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x280B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x27E6 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2828 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2824 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2737 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2850 PUSH0 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x285D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x286A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x2877 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A2C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2898 DUP2 DUP6 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x28AC DUP2 DUP5 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28D9 DUP3 PUSH2 0x28B5 JUMP JUMPDEST PUSH2 0x28E3 DUP2 DUP6 PUSH2 0x28BF JUMP JUMPDEST SWAP4 POP PUSH2 0x28F3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x28FC DUP2 PUSH2 0x1B0F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x291A PUSH0 DUP4 ADD DUP9 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2927 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x2934 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1A2C JUMP JUMPDEST PUSH2 0x2941 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1A2C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2953 DUP2 DUP5 PUSH2 0x28CF JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x296D DUP2 PUSH2 0x1A7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x1959 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2995 DUP5 DUP3 DUP6 ADD PUSH2 0x295F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x29B1 PUSH0 DUP4 ADD DUP9 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x29BE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2263 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x29D0 DUP2 DUP7 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x29E4 DUP2 DUP6 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x29F8 DUP2 DUP5 PUSH2 0x28CF JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 DUP9 REVERT 0xBA 0x4B 0xAD 0xB1 0xD6 0xC7 0xB7 PUSH30 0x7C8E4312A86D05E853A58231CFA5E8C49F884E862C64736F6C634300081A STOP CALLER ",
							"sourceMap": "300:741:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;554:87:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2084:103:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4014:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;836:203:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:313:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;647:183:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:157:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;394:281:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132:2;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;554:87:13:-;1531:13:0;:11;:13::i;:::-;619:15:13::1;627:6;619:7;:15::i;:::-;554:87:::0;:::o;2084:103:2:-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;4014:429::-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;836:203:13:-;1531:13:0;:11;:13::i;:::-;963:9:13::1;958:75;982:5;978:1;:9;958:75;;;1008:14;1013:2;1017:4;1008;:14::i;:::-;989:3;;;;;;;958:75;;;;836:203:::0;;;:::o;2536:552:2:-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;681:313:5:-;804:12;:10;:12::i;:::-;793:23;;:7;:23;;;;:67;;;;;821:39;838:7;847:12;:10;:12::i;:::-;821:16;:39::i;:::-;820:40;793:67;789:156;;;912:12;:10;:12::i;:::-;926:7;883:51;;;;;;;;;;;;:::i;:::-;;;;;;;;789:156;955:32;966:7;975:3;980:6;955:10;:32::i;:::-;681:313;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3156:144:2:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;647:183:13:-;1531:13:0;:11;:13::i;:::-;724:15:13::1;742:12;;724:30;;764:32;770:7;779;788:1;791:4;764:5;:32::i;:::-;822:1;806:12;;:17;;;;;;;:::i;:::-;;;;;;;;714:116;647:183:::0;;:::o;3367:157:2:-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;394:281:5:-;492:12;:10;:12::i;:::-;481:23;;:7;:23;;;;:67;;;;;509:39;526:7;535:12;:10;:12::i;:::-;509:16;:39::i;:::-;508:40;481:67;477:156;;;600:12;:10;:12::i;:::-;614:7;571:51;;;;;;;;;;;;:::i;:::-;;;;;;;;477:156;643:25;649:7;658:2;662:5;643;:25::i;:::-;394:281;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10282:86:2:-;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;9015:445:2:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:7:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;12784:265:2:-;12904:1;12888:18;;:4;:18;;;12884:88;;12958:1;12929:32;;;;;;;;;;;:::i;:::-;;;;;;;;12884:88;12981:61;13008:4;13022:1;13026:3;13031:6;12981:61;;;;;;;;;;;;:26;:61::i;:::-;12784:265;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;13268:315:2:-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;10746:346::-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;12099:329::-;12194:1;12178:18;;:4;:18;;;12174:88;;12248:1;12219:32;;;;;;;;;;;:::i;:::-;;;;;;;;12174:88;12272:20;12294:23;12321:29;12340:2;12344:5;12321:18;:29::i;:::-;12271:79;;;;12360:61;12387:4;12401:1;12405:3;12410:6;12360:61;;;;;;;;;;;;:26;:61::i;:::-;12164:264;;12099:329;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;5144:1281::-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;13761:974::-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:148::-;4587:6;4582:3;4577;4564:30;4628:1;4619:6;4614:3;4610:16;4603:27;4489:148;;;:::o;4643:425::-;4721:5;4746:66;4762:49;4804:6;4762:49;:::i;:::-;4746:66;:::i;:::-;4737:75;;4835:6;4828:5;4821:21;4873:4;4866:5;4862:16;4911:3;4902:6;4897:3;4893:16;4890:25;4887:112;;;4918:79;;:::i;:::-;4887:112;5008:54;5055:6;5050:3;5045;5008:54;:::i;:::-;4727:341;4643:425;;;;;:::o;5088:340::-;5144:5;5193:3;5186:4;5178:6;5174:17;5170:27;5160:122;;5201:79;;:::i;:::-;5160:122;5318:6;5305:20;5343:79;5418:3;5410:6;5403:4;5395:6;5391:17;5343:79;:::i;:::-;5334:88;;5150:278;5088:340;;;;:::o;5434:509::-;5503:6;5552:2;5540:9;5531:7;5527:23;5523:32;5520:119;;;5558:79;;:::i;:::-;5520:119;5706:1;5695:9;5691:17;5678:31;5736:18;5728:6;5725:30;5722:117;;;5758:79;;:::i;:::-;5722:117;5863:63;5918:7;5909:6;5898:9;5894:22;5863:63;:::i;:::-;5853:73;;5649:287;5434:509;;;;:::o;5949:329::-;6008:6;6057:2;6045:9;6036:7;6032:23;6028:32;6025:119;;;6063:79;;:::i;:::-;6025:119;6183:1;6208:53;6253:7;6244:6;6233:9;6229:22;6208:53;:::i;:::-;6198:63;;6154:117;5949:329;;;;:::o;6284:99::-;6336:6;6370:5;6364:12;6354:22;;6284:99;;;:::o;6389:169::-;6473:11;6507:6;6502:3;6495:19;6547:4;6542:3;6538:14;6523:29;;6389:169;;;;:::o;6564:139::-;6653:6;6648:3;6643;6637:23;6694:1;6685:6;6680:3;6676:16;6669:27;6564:139;;;:::o;6709:377::-;6797:3;6825:39;6858:5;6825:39;:::i;:::-;6880:71;6944:6;6939:3;6880:71;:::i;:::-;6873:78;;6960:65;7018:6;7013:3;7006:4;6999:5;6995:16;6960:65;:::i;:::-;7050:29;7072:6;7050:29;:::i;:::-;7045:3;7041:39;7034:46;;6801:285;6709:377;;;;:::o;7092:313::-;7205:4;7243:2;7232:9;7228:18;7220:26;;7292:9;7286:4;7282:20;7278:1;7267:9;7263:17;7256:47;7320:78;7393:4;7384:6;7320:78;:::i;:::-;7312:86;;7092:313;;;;:::o;7411:311::-;7488:4;7578:18;7570:6;7567:30;7564:56;;;7600:18;;:::i;:::-;7564:56;7650:4;7642:6;7638:17;7630:25;;7710:4;7704;7700:15;7692:23;;7411:311;;;:::o;7728:117::-;7837:1;7834;7827:12;7868:710;7964:5;7989:81;8005:64;8062:6;8005:64;:::i;:::-;7989:81;:::i;:::-;7980:90;;8090:5;8119:6;8112:5;8105:21;8153:4;8146:5;8142:16;8135:23;;8206:4;8198:6;8194:17;8186:6;8182:30;8235:3;8227:6;8224:15;8221:122;;;8254:79;;:::i;:::-;8221:122;8369:6;8352:220;8386:6;8381:3;8378:15;8352:220;;;8461:3;8490:37;8523:3;8511:10;8490:37;:::i;:::-;8485:3;8478:50;8557:4;8552:3;8548:14;8541:21;;8428:144;8412:4;8407:3;8403:14;8396:21;;8352:220;;;8356:21;7970:608;;7868:710;;;;;:::o;8601:370::-;8672:5;8721:3;8714:4;8706:6;8702:17;8698:27;8688:122;;8729:79;;:::i;:::-;8688:122;8846:6;8833:20;8871:94;8961:3;8953:6;8946:4;8938:6;8934:17;8871:94;:::i;:::-;8862:103;;8678:293;8601:370;;;;:::o;8977:307::-;9038:4;9128:18;9120:6;9117:30;9114:56;;;9150:18;;:::i;:::-;9114:56;9188:29;9210:6;9188:29;:::i;:::-;9180:37;;9272:4;9266;9262:15;9254:23;;8977:307;;;:::o;9290:423::-;9367:5;9392:65;9408:48;9449:6;9408:48;:::i;:::-;9392:65;:::i;:::-;9383:74;;9480:6;9473:5;9466:21;9518:4;9511:5;9507:16;9556:3;9547:6;9542:3;9538:16;9535:25;9532:112;;;9563:79;;:::i;:::-;9532:112;9653:54;9700:6;9695:3;9690;9653:54;:::i;:::-;9373:340;9290:423;;;;;:::o;9732:338::-;9787:5;9836:3;9829:4;9821:6;9817:17;9813:27;9803:122;;9844:79;;:::i;:::-;9803:122;9961:6;9948:20;9986:78;10060:3;10052:6;10045:4;10037:6;10033:17;9986:78;:::i;:::-;9977:87;;9793:277;9732:338;;;;:::o;10076:1509::-;10230:6;10238;10246;10254;10262;10311:3;10299:9;10290:7;10286:23;10282:33;10279:120;;;10318:79;;:::i;:::-;10279:120;10438:1;10463:53;10508:7;10499:6;10488:9;10484:22;10463:53;:::i;:::-;10453:63;;10409:117;10565:2;10591:53;10636:7;10627:6;10616:9;10612:22;10591:53;:::i;:::-;10581:63;;10536:118;10721:2;10710:9;10706:18;10693:32;10752:18;10744:6;10741:30;10738:117;;;10774:79;;:::i;:::-;10738:117;10879:78;10949:7;10940:6;10929:9;10925:22;10879:78;:::i;:::-;10869:88;;10664:303;11034:2;11023:9;11019:18;11006:32;11065:18;11057:6;11054:30;11051:117;;;11087:79;;:::i;:::-;11051:117;11192:78;11262:7;11253:6;11242:9;11238:22;11192:78;:::i;:::-;11182:88;;10977:303;11347:3;11336:9;11332:19;11319:33;11379:18;11371:6;11368:30;11365:117;;;11401:79;;:::i;:::-;11365:117;11506:62;11560:7;11551:6;11540:9;11536:22;11506:62;:::i;:::-;11496:72;;11290:288;10076:1509;;;;;;;;:::o;11591:797::-;11677:6;11685;11693;11742:2;11730:9;11721:7;11717:23;11713:32;11710:119;;;11748:79;;:::i;:::-;11710:119;11868:1;11893:53;11938:7;11929:6;11918:9;11914:22;11893:53;:::i;:::-;11883:63;;11839:117;11995:2;12021:53;12066:7;12057:6;12046:9;12042:22;12021:53;:::i;:::-;12011:63;;11966:118;12151:2;12140:9;12136:18;12123:32;12182:18;12174:6;12171:30;12168:117;;;12204:79;;:::i;:::-;12168:117;12309:62;12363:7;12354:6;12343:9;12339:22;12309:62;:::i;:::-;12299:72;;12094:287;11591:797;;;;;:::o;12394:311::-;12471:4;12561:18;12553:6;12550:30;12547:56;;;12583:18;;:::i;:::-;12547:56;12633:4;12625:6;12621:17;12613:25;;12693:4;12687;12683:15;12675:23;;12394:311;;;:::o;12728:710::-;12824:5;12849:81;12865:64;12922:6;12865:64;:::i;:::-;12849:81;:::i;:::-;12840:90;;12950:5;12979:6;12972:5;12965:21;13013:4;13006:5;13002:16;12995:23;;13066:4;13058:6;13054:17;13046:6;13042:30;13095:3;13087:6;13084:15;13081:122;;;13114:79;;:::i;:::-;13081:122;13229:6;13212:220;13246:6;13241:3;13238:15;13212:220;;;13321:3;13350:37;13383:3;13371:10;13350:37;:::i;:::-;13345:3;13338:50;13417:4;13412:3;13408:14;13401:21;;13288:144;13272:4;13267:3;13263:14;13256:21;;13212:220;;;13216:21;12830:608;;12728:710;;;;;:::o;13461:370::-;13532:5;13581:3;13574:4;13566:6;13562:17;13558:27;13548:122;;13589:79;;:::i;:::-;13548:122;13706:6;13693:20;13731:94;13821:3;13813:6;13806:4;13798:6;13794:17;13731:94;:::i;:::-;13722:103;;13538:293;13461:370;;;;:::o;13837:894::-;13955:6;13963;14012:2;14000:9;13991:7;13987:23;13983:32;13980:119;;;14018:79;;:::i;:::-;13980:119;14166:1;14155:9;14151:17;14138:31;14196:18;14188:6;14185:30;14182:117;;;14218:79;;:::i;:::-;14182:117;14323:78;14393:7;14384:6;14373:9;14369:22;14323:78;:::i;:::-;14313:88;;14109:302;14478:2;14467:9;14463:18;14450:32;14509:18;14501:6;14498:30;14495:117;;;14531:79;;:::i;:::-;14495:117;14636:78;14706:7;14697:6;14686:9;14682:22;14636:78;:::i;:::-;14626:88;;14421:303;13837:894;;;;;:::o;14737:114::-;14804:6;14838:5;14832:12;14822:22;;14737:114;;;:::o;14857:184::-;14956:11;14990:6;14985:3;14978:19;15030:4;15025:3;15021:14;15006:29;;14857:184;;;;:::o;15047:132::-;15114:4;15137:3;15129:11;;15167:4;15162:3;15158:14;15150:22;;15047:132;;;:::o;15185:108::-;15262:24;15280:5;15262:24;:::i;:::-;15257:3;15250:37;15185:108;;:::o;15299:179::-;15368:10;15389:46;15431:3;15423:6;15389:46;:::i;:::-;15467:4;15462:3;15458:14;15444:28;;15299:179;;;;:::o;15484:113::-;15554:4;15586;15581:3;15577:14;15569:22;;15484:113;;;:::o;15633:732::-;15752:3;15781:54;15829:5;15781:54;:::i;:::-;15851:86;15930:6;15925:3;15851:86;:::i;:::-;15844:93;;15961:56;16011:5;15961:56;:::i;:::-;16040:7;16071:1;16056:284;16081:6;16078:1;16075:13;16056:284;;;16157:6;16151:13;16184:63;16243:3;16228:13;16184:63;:::i;:::-;16177:70;;16270:60;16323:6;16270:60;:::i;:::-;16260:70;;16116:224;16103:1;16100;16096:9;16091:14;;16056:284;;;16060:14;16356:3;16349:10;;15757:608;;;15633:732;;;;:::o;16371:373::-;16514:4;16552:2;16541:9;16537:18;16529:26;;16601:9;16595:4;16591:20;16587:1;16576:9;16572:17;16565:47;16629:108;16732:4;16723:6;16629:108;:::i;:::-;16621:116;;16371:373;;;;:::o;16750:1039::-;16877:6;16885;16893;16942:2;16930:9;16921:7;16917:23;16913:32;16910:119;;;16948:79;;:::i;:::-;16910:119;17068:1;17093:53;17138:7;17129:6;17118:9;17114:22;17093:53;:::i;:::-;17083:63;;17039:117;17223:2;17212:9;17208:18;17195:32;17254:18;17246:6;17243:30;17240:117;;;17276:79;;:::i;:::-;17240:117;17381:78;17451:7;17442:6;17431:9;17427:22;17381:78;:::i;:::-;17371:88;;17166:303;17536:2;17525:9;17521:18;17508:32;17567:18;17559:6;17556:30;17553:117;;;17589:79;;:::i;:::-;17553:117;17694:78;17764:7;17755:6;17744:9;17740:22;17694:78;:::i;:::-;17684:88;;17479:303;16750:1039;;;;;:::o;17795:118::-;17882:24;17900:5;17882:24;:::i;:::-;17877:3;17870:37;17795:118;;:::o;17919:222::-;18012:4;18050:2;18039:9;18035:18;18027:26;;18063:71;18131:1;18120:9;18116:17;18107:6;18063:71;:::i;:::-;17919:222;;;;:::o;18147:116::-;18217:21;18232:5;18217:21;:::i;:::-;18210:5;18207:32;18197:60;;18253:1;18250;18243:12;18197:60;18147:116;:::o;18269:133::-;18312:5;18350:6;18337:20;18328:29;;18366:30;18390:5;18366:30;:::i;:::-;18269:133;;;;:::o;18408:468::-;18473:6;18481;18530:2;18518:9;18509:7;18505:23;18501:32;18498:119;;;18536:79;;:::i;:::-;18498:119;18656:1;18681:53;18726:7;18717:6;18706:9;18702:22;18681:53;:::i;:::-;18671:63;;18627:117;18783:2;18809:50;18851:7;18842:6;18831:9;18827:22;18809:50;:::i;:::-;18799:60;;18754:115;18408:468;;;;;:::o;18882:652::-;18959:6;18967;19016:2;19004:9;18995:7;18991:23;18987:32;18984:119;;;19022:79;;:::i;:::-;18984:119;19142:1;19167:53;19212:7;19203:6;19192:9;19188:22;19167:53;:::i;:::-;19157:63;;19113:117;19297:2;19286:9;19282:18;19269:32;19328:18;19320:6;19317:30;19314:117;;;19350:79;;:::i;:::-;19314:117;19455:62;19509:7;19500:6;19489:9;19485:22;19455:62;:::i;:::-;19445:72;;19240:287;18882:652;;;;;:::o;19540:474::-;19608:6;19616;19665:2;19653:9;19644:7;19640:23;19636:32;19633:119;;;19671:79;;:::i;:::-;19633:119;19791:1;19816:53;19861:7;19852:6;19841:9;19837:22;19816:53;:::i;:::-;19806:63;;19762:117;19918:2;19944:53;19989:7;19980:6;19969:9;19965:22;19944:53;:::i;:::-;19934:63;;19889:118;19540:474;;;;;:::o;20020:1089::-;20124:6;20132;20140;20148;20156;20205:3;20193:9;20184:7;20180:23;20176:33;20173:120;;;20212:79;;:::i;:::-;20173:120;20332:1;20357:53;20402:7;20393:6;20382:9;20378:22;20357:53;:::i;:::-;20347:63;;20303:117;20459:2;20485:53;20530:7;20521:6;20510:9;20506:22;20485:53;:::i;:::-;20475:63;;20430:118;20587:2;20613:53;20658:7;20649:6;20638:9;20634:22;20613:53;:::i;:::-;20603:63;;20558:118;20715:2;20741:53;20786:7;20777:6;20766:9;20762:22;20741:53;:::i;:::-;20731:63;;20686:118;20871:3;20860:9;20856:19;20843:33;20903:18;20895:6;20892:30;20889:117;;;20925:79;;:::i;:::-;20889:117;21030:62;21084:7;21075:6;21064:9;21060:22;21030:62;:::i;:::-;21020:72;;20814:288;20020:1089;;;;;;;;:::o;21115:329::-;21174:6;21223:2;21211:9;21202:7;21198:23;21194:32;21191:119;;;21229:79;;:::i;:::-;21191:119;21349:1;21374:53;21419:7;21410:6;21399:9;21395:22;21374:53;:::i;:::-;21364:63;;21320:117;21115:329;;;;:::o;21450:619::-;21527:6;21535;21543;21592:2;21580:9;21571:7;21567:23;21563:32;21560:119;;;21598:79;;:::i;:::-;21560:119;21718:1;21743:53;21788:7;21779:6;21768:9;21764:22;21743:53;:::i;:::-;21733:63;;21689:117;21845:2;21871:53;21916:7;21907:6;21896:9;21892:22;21871:53;:::i;:::-;21861:63;;21816:118;21973:2;21999:53;22044:7;22035:6;22024:9;22020:22;21999:53;:::i;:::-;21989:63;;21944:118;21450:619;;;;;:::o;22075:180::-;22123:77;22120:1;22113:88;22220:4;22217:1;22210:15;22244:4;22241:1;22234:15;22261:320;22305:6;22342:1;22336:4;22332:12;22322:22;;22389:1;22383:4;22379:12;22410:18;22400:81;;22466:4;22458:6;22454:17;22444:27;;22400:81;22528:2;22520:6;22517:14;22497:18;22494:38;22491:84;;22547:18;;:::i;:::-;22491:84;22312:269;22261:320;;;:::o;22587:332::-;22708:4;22746:2;22735:9;22731:18;22723:26;;22759:71;22827:1;22816:9;22812:17;22803:6;22759:71;:::i;:::-;22840:72;22908:2;22897:9;22893:18;22884:6;22840:72;:::i;:::-;22587:332;;;;;:::o;22925:::-;23046:4;23084:2;23073:9;23069:18;23061:26;;23097:71;23165:1;23154:9;23150:17;23141:6;23097:71;:::i;:::-;23178:72;23246:2;23235:9;23231:18;23222:6;23178:72;:::i;:::-;22925:332;;;;;:::o;23263:180::-;23311:77;23308:1;23301:88;23408:4;23405:1;23398:15;23432:4;23429:1;23422:15;23449:180;23497:77;23494:1;23487:88;23594:4;23591:1;23584:15;23618:4;23615:1;23608:15;23635:191;23675:3;23694:20;23712:1;23694:20;:::i;:::-;23689:25;;23728:20;23746:1;23728:20;:::i;:::-;23723:25;;23771:1;23768;23764:9;23757:16;;23792:3;23789:1;23786:10;23783:36;;;23799:18;;:::i;:::-;23783:36;23635:191;;;;:::o;23832:141::-;23881:4;23904:3;23896:11;;23927:3;23924:1;23917:14;23961:4;23958:1;23948:18;23940:26;;23832:141;;;:::o;23979:93::-;24016:6;24063:2;24058;24051:5;24047:14;24043:23;24033:33;;23979:93;;;:::o;24078:107::-;24122:8;24172:5;24166:4;24162:16;24141:37;;24078:107;;;;:::o;24191:393::-;24260:6;24310:1;24298:10;24294:18;24333:97;24363:66;24352:9;24333:97;:::i;:::-;24451:39;24481:8;24470:9;24451:39;:::i;:::-;24439:51;;24523:4;24519:9;24512:5;24508:21;24499:30;;24572:4;24562:8;24558:19;24551:5;24548:30;24538:40;;24267:317;;24191:393;;;;;:::o;24590:60::-;24618:3;24639:5;24632:12;;24590:60;;;:::o;24656:142::-;24706:9;24739:53;24757:34;24766:24;24784:5;24766:24;:::i;:::-;24757:34;:::i;:::-;24739:53;:::i;:::-;24726:66;;24656:142;;;:::o;24804:75::-;24847:3;24868:5;24861:12;;24804:75;;;:::o;24885:269::-;24995:39;25026:7;24995:39;:::i;:::-;25056:91;25105:41;25129:16;25105:41;:::i;:::-;25097:6;25090:4;25084:11;25056:91;:::i;:::-;25050:4;25043:105;24961:193;24885:269;;;:::o;25160:73::-;25205:3;25160:73;:::o;25239:189::-;25316:32;;:::i;:::-;25357:65;25415:6;25407;25401:4;25357:65;:::i;:::-;25292:136;25239:189;;:::o;25434:186::-;25494:120;25511:3;25504:5;25501:14;25494:120;;;25565:39;25602:1;25595:5;25565:39;:::i;:::-;25538:1;25531:5;25527:13;25518:22;;25494:120;;;25434:186;;:::o;25626:543::-;25727:2;25722:3;25719:11;25716:446;;;25761:38;25793:5;25761:38;:::i;:::-;25845:29;25863:10;25845:29;:::i;:::-;25835:8;25831:44;26028:2;26016:10;26013:18;26010:49;;;26049:8;26034:23;;26010:49;26072:80;26128:22;26146:3;26128:22;:::i;:::-;26118:8;26114:37;26101:11;26072:80;:::i;:::-;25731:431;;25716:446;25626:543;;;:::o;26175:117::-;26229:8;26279:5;26273:4;26269:16;26248:37;;26175:117;;;;:::o;26298:169::-;26342:6;26375:51;26423:1;26419:6;26411:5;26408:1;26404:13;26375:51;:::i;:::-;26371:56;26456:4;26450;26446:15;26436:25;;26349:118;26298:169;;;;:::o;26472:295::-;26548:4;26694:29;26719:3;26713:4;26694:29;:::i;:::-;26686:37;;26756:3;26753:1;26749:11;26743:4;26740:21;26732:29;;26472:295;;;;:::o;26772:1395::-;26889:37;26922:3;26889:37;:::i;:::-;26991:18;26983:6;26980:30;26977:56;;;27013:18;;:::i;:::-;26977:56;27057:38;27089:4;27083:11;27057:38;:::i;:::-;27142:67;27202:6;27194;27188:4;27142:67;:::i;:::-;27236:1;27260:4;27247:17;;27292:2;27284:6;27281:14;27309:1;27304:618;;;;27966:1;27983:6;27980:77;;;28032:9;28027:3;28023:19;28017:26;28008:35;;27980:77;28083:67;28143:6;28136:5;28083:67;:::i;:::-;28077:4;28070:81;27939:222;27274:887;;27304:618;27356:4;27352:9;27344:6;27340:22;27390:37;27422:4;27390:37;:::i;:::-;27449:1;27463:208;27477:7;27474:1;27471:14;27463:208;;;27556:9;27551:3;27547:19;27541:26;27533:6;27526:42;27607:1;27599:6;27595:14;27585:24;;27654:2;27643:9;27639:18;27626:31;;27500:4;27497:1;27493:12;27488:17;;27463:208;;;27699:6;27690:7;27687:19;27684:179;;;27757:9;27752:3;27748:19;27742:26;27800:48;27842:4;27834:6;27830:17;27819:9;27800:48;:::i;:::-;27792:6;27785:64;27707:156;27684:179;27909:1;27905;27897:6;27893:14;27889:22;27883:4;27876:36;27311:611;;;27274:887;;26864:1303;;;26772:1395;;:::o;28173:553::-;28350:4;28388:3;28377:9;28373:19;28365:27;;28402:71;28470:1;28459:9;28455:17;28446:6;28402:71;:::i;:::-;28483:72;28551:2;28540:9;28536:18;28527:6;28483:72;:::i;:::-;28565;28633:2;28622:9;28618:18;28609:6;28565:72;:::i;:::-;28647;28715:2;28704:9;28700:18;28691:6;28647:72;:::i;:::-;28173:553;;;;;;;:::o;28732:634::-;28953:4;28991:2;28980:9;28976:18;28968:26;;29040:9;29034:4;29030:20;29026:1;29015:9;29011:17;29004:47;29068:108;29171:4;29162:6;29068:108;:::i;:::-;29060:116;;29223:9;29217:4;29213:20;29208:2;29197:9;29193:18;29186:48;29251:108;29354:4;29345:6;29251:108;:::i;:::-;29243:116;;28732:634;;;;;:::o;29372:98::-;29423:6;29457:5;29451:12;29441:22;;29372:98;;;:::o;29476:168::-;29559:11;29593:6;29588:3;29581:19;29633:4;29628:3;29624:14;29609:29;;29476:168;;;;:::o;29650:373::-;29736:3;29764:38;29796:5;29764:38;:::i;:::-;29818:70;29881:6;29876:3;29818:70;:::i;:::-;29811:77;;29897:65;29955:6;29950:3;29943:4;29936:5;29932:16;29897:65;:::i;:::-;29987:29;30009:6;29987:29;:::i;:::-;29982:3;29978:39;29971:46;;29740:283;29650:373;;;;:::o;30029:751::-;30252:4;30290:3;30279:9;30275:19;30267:27;;30304:71;30372:1;30361:9;30357:17;30348:6;30304:71;:::i;:::-;30385:72;30453:2;30442:9;30438:18;30429:6;30385:72;:::i;:::-;30467;30535:2;30524:9;30520:18;30511:6;30467:72;:::i;:::-;30549;30617:2;30606:9;30602:18;30593:6;30549:72;:::i;:::-;30669:9;30663:4;30659:20;30653:3;30642:9;30638:19;30631:49;30697:76;30768:4;30759:6;30697:76;:::i;:::-;30689:84;;30029:751;;;;;;;;:::o;30786:141::-;30842:5;30873:6;30867:13;30858:22;;30889:32;30915:5;30889:32;:::i;:::-;30786:141;;;;:::o;30933:349::-;31002:6;31051:2;31039:9;31030:7;31026:23;31022:32;31019:119;;;31057:79;;:::i;:::-;31019:119;31177:1;31202:63;31257:7;31248:6;31237:9;31233:22;31202:63;:::i;:::-;31192:73;;31148:127;30933:349;;;;:::o;31288:1053::-;31611:4;31649:3;31638:9;31634:19;31626:27;;31663:71;31731:1;31720:9;31716:17;31707:6;31663:71;:::i;:::-;31744:72;31812:2;31801:9;31797:18;31788:6;31744:72;:::i;:::-;31863:9;31857:4;31853:20;31848:2;31837:9;31833:18;31826:48;31891:108;31994:4;31985:6;31891:108;:::i;:::-;31883:116;;32046:9;32040:4;32036:20;32031:2;32020:9;32016:18;32009:48;32074:108;32177:4;32168:6;32074:108;:::i;:::-;32066:116;;32230:9;32224:4;32220:20;32214:3;32203:9;32199:19;32192:49;32258:76;32329:4;32320:6;32258:76;:::i;:::-;32250:84;;31288:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2162000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,bytes)": "infinite",
								"mintBatch(address,uint256,bytes)": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "809",
								"transferOwnership(address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 300,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 548,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 548,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 548,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 548,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 399,
									"end": 548,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 399,
									"end": 548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 399,
									"end": 548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 501,
									"end": 513,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 485,
									"end": 491,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 540,
									"end": 541,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 525,
									"end": 537,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 525,
									"end": 541,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 525,
									"end": 541,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 525,
									"end": 541,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 525,
									"end": 541,
									"modifierDepth": 2,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 399,
									"end": 548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "67"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 14,
									"value": "77"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 14,
									"value": "81"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 14,
									"value": "85"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2210,
									"end": 2216,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2205,
									"end": 2208,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2194,
									"end": 2217,
									"name": "MCOPY",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2252,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2248,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2237,
									"end": 2240,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2233,
									"end": 2249,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2226,
									"end": 2253,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2121,
									"end": 2260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2355,
									"end": 2360,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 2396,
									"end": 2445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "tag",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 2380,
									"end": 2446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2462,
									"end": 2467,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2455,
									"end": 2476,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2507,
									"end": 2511,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2500,
									"end": 2505,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2496,
									"end": 2512,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2545,
									"end": 2548,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2536,
									"end": 2542,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2531,
									"end": 2534,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2527,
									"end": 2543,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2524,
									"end": 2549,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 2552,
									"end": 2631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "tag",
									"source": 14,
									"value": "90"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 2687,
									"end": 2693,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2682,
									"end": 2685,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 2680,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 2642,
									"end": 2694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2361,
									"end": 2700,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2266,
									"end": 2700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2787,
									"end": 2792,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2836,
									"end": 2839,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2829,
									"end": 2833,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2821,
									"end": 2827,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2817,
									"end": 2834,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2813,
									"end": 2840,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 2844,
									"end": 2923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "tag",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2948,
									"end": 2961,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 3065,
									"end": 3068,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3057,
									"end": 3063,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3050,
									"end": 3054,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3042,
									"end": 3048,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3038,
									"end": 3055,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 2979,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "tag",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2793,
									"end": 3075,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2720,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3170,
									"end": 3176,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3178,
									"end": 3184,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3227,
									"end": 3229,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 3215,
									"end": 3224,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3206,
									"end": 3213,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3202,
									"end": 3225,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 3198,
									"end": 3230,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3233,
									"end": 3312,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 3233,
									"end": 3312,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 3233,
									"end": 3312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3233,
									"end": 3312,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 3233,
									"end": 3312,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "tag",
									"source": 14,
									"value": "98"
								},
								{
									"begin": 3195,
									"end": 3314,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3353,
									"end": 3354,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3378,
									"end": 3442,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 3434,
									"end": 3441,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3425,
									"end": 3431,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3414,
									"end": 3423,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3410,
									"end": 3432,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3378,
									"end": 3442,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 3378,
									"end": 3442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3378,
									"end": 3442,
									"name": "tag",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 3378,
									"end": 3442,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3368,
									"end": 3442,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3368,
									"end": 3442,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3324,
									"end": 3452,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3512,
									"end": 3514,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 3501,
									"end": 3510,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3497,
									"end": 3515,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3491,
									"end": 3516,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3543,
									"end": 3561,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3535,
									"end": 3541,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3532,
									"end": 3562,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3565,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 3565,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 3565,
									"end": 3644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3565,
									"end": 3644,
									"name": "tag",
									"source": 14,
									"value": "102"
								},
								{
									"begin": 3565,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 3529,
									"end": 3646,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3670,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 3736,
									"end": 3743,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3727,
									"end": 3733,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3716,
									"end": 3725,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3712,
									"end": 3734,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3670,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 3670,
									"end": 3744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3670,
									"end": 3744,
									"name": "tag",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 3670,
									"end": 3744,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3660,
									"end": 3744,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3660,
									"end": 3744,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3462,
									"end": 3754,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 3761,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3081,
									"end": 3761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3767,
									"end": 3885,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 3767,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3854,
									"end": 3878,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 3872,
									"end": 3877,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3854,
									"end": 3878,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 3854,
									"end": 3878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3854,
									"end": 3878,
									"name": "tag",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 3854,
									"end": 3878,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3849,
									"end": 3852,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3842,
									"end": 3879,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 3767,
									"end": 3885,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3767,
									"end": 3885,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3767,
									"end": 3885,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3891,
									"end": 4113,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 3891,
									"end": 4113,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3984,
									"end": 3988,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4022,
									"end": 4024,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4011,
									"end": 4020,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4007,
									"end": 4025,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3999,
									"end": 4025,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3999,
									"end": 4025,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4035,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 4103,
									"end": 4104,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4092,
									"end": 4101,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4088,
									"end": 4105,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4079,
									"end": 4085,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4035,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 4035,
									"end": 4106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4035,
									"end": 4106,
									"name": "tag",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 4035,
									"end": 4106,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3891,
									"end": 4113,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3891,
									"end": 4113,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3891,
									"end": 4113,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3891,
									"end": 4113,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3891,
									"end": 4113,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4119,
									"end": 4218,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4119,
									"end": 4218,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4171,
									"end": 4177,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4199,
									"end": 4211,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 4189,
									"end": 4211,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4189,
									"end": 4211,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4119,
									"end": 4218,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4119,
									"end": 4218,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4119,
									"end": 4218,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4119,
									"end": 4218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4224,
									"end": 4404,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 4224,
									"end": 4404,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4272,
									"end": 4349,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4269,
									"end": 4270,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4262,
									"end": 4350,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4369,
									"end": 4373,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 4366,
									"end": 4367,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 4359,
									"end": 4374,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4393,
									"end": 4397,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 4390,
									"end": 4391,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4383,
									"end": 4398,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 4410,
									"end": 4730,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 4410,
									"end": 4730,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4454,
									"end": 4460,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4491,
									"end": 4492,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 4485,
									"end": 4489,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4481,
									"end": 4493,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 4471,
									"end": 4493,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4471,
									"end": 4493,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4538,
									"end": 4539,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4532,
									"end": 4536,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4528,
									"end": 4540,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4559,
									"end": 4577,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4549,
									"end": 4630,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 4549,
									"end": 4630,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4615,
									"end": 4619,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 4607,
									"end": 4613,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4603,
									"end": 4620,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4593,
									"end": 4620,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4593,
									"end": 4620,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4549,
									"end": 4630,
									"name": "tag",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 4549,
									"end": 4630,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4677,
									"end": 4679,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4669,
									"end": 4675,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4666,
									"end": 4680,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4646,
									"end": 4664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4643,
									"end": 4681,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4640,
									"end": 4724,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 4640,
									"end": 4724,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4696,
									"end": 4714,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 4696,
									"end": 4714,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 4696,
									"end": 4714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4696,
									"end": 4714,
									"name": "tag",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 4696,
									"end": 4714,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4640,
									"end": 4724,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 4640,
									"end": 4724,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4461,
									"end": 4730,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4410,
									"end": 4730,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4410,
									"end": 4730,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4410,
									"end": 4730,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4410,
									"end": 4730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4736,
									"end": 4877,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 4736,
									"end": 4877,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4785,
									"end": 4789,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4800,
									"end": 4811,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4800,
									"end": 4811,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4831,
									"end": 4834,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4828,
									"end": 4829,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4821,
									"end": 4835,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4865,
									"end": 4869,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4862,
									"end": 4863,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4852,
									"end": 4870,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 4844,
									"end": 4870,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4844,
									"end": 4870,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4736,
									"end": 4877,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4736,
									"end": 4877,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4736,
									"end": 4877,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4736,
									"end": 4877,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4883,
									"end": 4976,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 4883,
									"end": 4976,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4920,
									"end": 4926,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4967,
									"end": 4969,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4962,
									"end": 4964,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4955,
									"end": 4960,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4951,
									"end": 4965,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4947,
									"end": 4970,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 4937,
									"end": 4970,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4937,
									"end": 4970,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4883,
									"end": 4976,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4883,
									"end": 4976,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4883,
									"end": 4976,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4883,
									"end": 4976,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4982,
									"end": 5089,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 4982,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5026,
									"end": 5034,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5076,
									"end": 5081,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5070,
									"end": 5074,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5066,
									"end": 5082,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 5045,
									"end": 5082,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5045,
									"end": 5082,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4982,
									"end": 5089,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4982,
									"end": 5089,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4982,
									"end": 5089,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4982,
									"end": 5089,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4982,
									"end": 5089,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5095,
									"end": 5488,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 5095,
									"end": 5488,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5164,
									"end": 5170,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5214,
									"end": 5215,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 5202,
									"end": 5212,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5198,
									"end": 5216,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 5237,
									"end": 5334,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 5267,
									"end": 5333,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5256,
									"end": 5265,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5237,
									"end": 5334,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 5237,
									"end": 5334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5237,
									"end": 5334,
									"name": "tag",
									"source": 14,
									"value": "118"
								},
								{
									"begin": 5237,
									"end": 5334,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5355,
									"end": 5394,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 5385,
									"end": 5393,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5355,
									"end": 5394,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 5355,
									"end": 5394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5355,
									"end": 5394,
									"name": "tag",
									"source": 14,
									"value": "119"
								},
								{
									"begin": 5355,
									"end": 5394,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5343,
									"end": 5394,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 5343,
									"end": 5394,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5427,
									"end": 5431,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5423,
									"end": 5432,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5416,
									"end": 5421,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5412,
									"end": 5433,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5403,
									"end": 5433,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 5403,
									"end": 5433,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5476,
									"end": 5480,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 5466,
									"end": 5474,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5462,
									"end": 5481,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5455,
									"end": 5460,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5452,
									"end": 5482,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 5442,
									"end": 5482,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5442,
									"end": 5482,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5171,
									"end": 5488,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5171,
									"end": 5488,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5095,
									"end": 5488,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 5095,
									"end": 5488,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5095,
									"end": 5488,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5095,
									"end": 5488,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5095,
									"end": 5488,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5095,
									"end": 5488,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5494,
									"end": 5571,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 5494,
									"end": 5571,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5531,
									"end": 5538,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5560,
									"end": 5565,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5549,
									"end": 5565,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5549,
									"end": 5565,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5494,
									"end": 5571,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5494,
									"end": 5571,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5494,
									"end": 5571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5494,
									"end": 5571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5577,
									"end": 5637,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 5577,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5605,
									"end": 5608,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5626,
									"end": 5631,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5619,
									"end": 5631,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5619,
									"end": 5631,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5577,
									"end": 5637,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5577,
									"end": 5637,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5577,
									"end": 5637,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5577,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5643,
									"end": 5785,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 5643,
									"end": 5785,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5693,
									"end": 5702,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5726,
									"end": 5779,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 5744,
									"end": 5778,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 5753,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 5771,
									"end": 5776,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5753,
									"end": 5777,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 5753,
									"end": 5777,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5753,
									"end": 5777,
									"name": "tag",
									"source": 14,
									"value": "125"
								},
								{
									"begin": 5753,
									"end": 5777,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5744,
									"end": 5778,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 5744,
									"end": 5778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5744,
									"end": 5778,
									"name": "tag",
									"source": 14,
									"value": "124"
								},
								{
									"begin": 5744,
									"end": 5778,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5726,
									"end": 5779,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 5726,
									"end": 5779,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5726,
									"end": 5779,
									"name": "tag",
									"source": 14,
									"value": "123"
								},
								{
									"begin": 5726,
									"end": 5779,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5713,
									"end": 5779,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5713,
									"end": 5779,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5643,
									"end": 5785,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5643,
									"end": 5785,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5643,
									"end": 5785,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5643,
									"end": 5785,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5791,
									"end": 5866,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 5791,
									"end": 5866,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5834,
									"end": 5837,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5855,
									"end": 5860,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5848,
									"end": 5860,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5848,
									"end": 5860,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5791,
									"end": 5866,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5791,
									"end": 5866,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5791,
									"end": 5866,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5791,
									"end": 5866,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5872,
									"end": 6141,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 5872,
									"end": 6141,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5982,
									"end": 6021,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 6013,
									"end": 6020,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5982,
									"end": 6021,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 5982,
									"end": 6021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5982,
									"end": 6021,
									"name": "tag",
									"source": 14,
									"value": "128"
								},
								{
									"begin": 5982,
									"end": 6021,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6043,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 6092,
									"end": 6133,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 6116,
									"end": 6132,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6092,
									"end": 6133,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 6092,
									"end": 6133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6092,
									"end": 6133,
									"name": "tag",
									"source": 14,
									"value": "130"
								},
								{
									"begin": 6092,
									"end": 6133,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6084,
									"end": 6090,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6077,
									"end": 6081,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6071,
									"end": 6082,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 6043,
									"end": 6134,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 6043,
									"end": 6134,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6043,
									"end": 6134,
									"name": "tag",
									"source": 14,
									"value": "129"
								},
								{
									"begin": 6043,
									"end": 6134,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6037,
									"end": 6041,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6030,
									"end": 6135,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5948,
									"end": 6141,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5872,
									"end": 6141,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5872,
									"end": 6141,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5872,
									"end": 6141,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5872,
									"end": 6141,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6147,
									"end": 6220,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 6147,
									"end": 6220,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6192,
									"end": 6195,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6147,
									"end": 6220,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6147,
									"end": 6220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6226,
									"end": 6415,
									"name": "tag",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 6226,
									"end": 6415,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6303,
									"end": 6335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 6303,
									"end": 6335,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 6303,
									"end": 6335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6303,
									"end": 6335,
									"name": "tag",
									"source": 14,
									"value": "133"
								},
								{
									"begin": 6303,
									"end": 6335,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6344,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 6402,
									"end": 6408,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6394,
									"end": 6400,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6388,
									"end": 6392,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6344,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 6344,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6344,
									"end": 6409,
									"name": "tag",
									"source": 14,
									"value": "134"
								},
								{
									"begin": 6344,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6279,
									"end": 6415,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6226,
									"end": 6415,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6226,
									"end": 6415,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6226,
									"end": 6415,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6421,
									"end": 6607,
									"name": "tag",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 6421,
									"end": 6607,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6481,
									"end": 6601,
									"name": "tag",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 6481,
									"end": 6601,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6498,
									"end": 6501,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6491,
									"end": 6496,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6488,
									"end": 6502,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6481,
									"end": 6601,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6481,
									"end": 6601,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 6481,
									"end": 6601,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6552,
									"end": 6591,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 6589,
									"end": 6590,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6582,
									"end": 6587,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6552,
									"end": 6591,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "53"
								},
								{
									"begin": 6552,
									"end": 6591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6552,
									"end": 6591,
									"name": "tag",
									"source": 14,
									"value": "139"
								},
								{
									"begin": 6552,
									"end": 6591,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6525,
									"end": 6526,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6518,
									"end": 6523,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6514,
									"end": 6527,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6505,
									"end": 6527,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6505,
									"end": 6527,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6481,
									"end": 6601,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "136"
								},
								{
									"begin": 6481,
									"end": 6601,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6481,
									"end": 6601,
									"name": "tag",
									"source": 14,
									"value": "138"
								},
								{
									"begin": 6481,
									"end": 6601,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6421,
									"end": 6607,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6421,
									"end": 6607,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6421,
									"end": 6607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6613,
									"end": 7156,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 6613,
									"end": 7156,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6714,
									"end": 6716,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6709,
									"end": 6712,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6706,
									"end": 6717,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 6703,
									"end": 7149,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6703,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 6703,
									"end": 7149,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6748,
									"end": 6786,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 6780,
									"end": 6785,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6748,
									"end": 6786,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 6748,
									"end": 6786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6748,
									"end": 6786,
									"name": "tag",
									"source": 14,
									"value": "142"
								},
								{
									"begin": 6748,
									"end": 6786,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6832,
									"end": 6861,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 6850,
									"end": 6860,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6832,
									"end": 6861,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 6832,
									"end": 6861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6832,
									"end": 6861,
									"name": "tag",
									"source": 14,
									"value": "143"
								},
								{
									"begin": 6832,
									"end": 6861,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6822,
									"end": 6830,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 6818,
									"end": 6862,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7015,
									"end": 7017,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7003,
									"end": 7013,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 7000,
									"end": 7018,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 6997,
									"end": 7046,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6997,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "144"
								},
								{
									"begin": 6997,
									"end": 7046,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 7036,
									"end": 7044,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7021,
									"end": 7044,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7021,
									"end": 7044,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6997,
									"end": 7046,
									"name": "tag",
									"source": 14,
									"value": "144"
								},
								{
									"begin": 6997,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7059,
									"end": 7139,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 7115,
									"end": 7137,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "146"
								},
								{
									"begin": 7133,
									"end": 7136,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 7115,
									"end": 7137,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 7115,
									"end": 7137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7115,
									"end": 7137,
									"name": "tag",
									"source": 14,
									"value": "146"
								},
								{
									"begin": 7115,
									"end": 7137,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7105,
									"end": 7113,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7101,
									"end": 7138,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 7088,
									"end": 7099,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7059,
									"end": 7139,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 7059,
									"end": 7139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7059,
									"end": 7139,
									"name": "tag",
									"source": 14,
									"value": "145"
								},
								{
									"begin": 7059,
									"end": 7139,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6718,
									"end": 7149,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6718,
									"end": 7149,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6703,
									"end": 7149,
									"name": "tag",
									"source": 14,
									"value": "141"
								},
								{
									"begin": 6703,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6613,
									"end": 7156,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6613,
									"end": 7156,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6613,
									"end": 7156,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6613,
									"end": 7156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7162,
									"end": 7279,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 7162,
									"end": 7279,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7216,
									"end": 7224,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7266,
									"end": 7271,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7260,
									"end": 7264,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7256,
									"end": 7272,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 7235,
									"end": 7272,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7235,
									"end": 7272,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7162,
									"end": 7279,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7162,
									"end": 7279,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7162,
									"end": 7279,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7162,
									"end": 7279,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7162,
									"end": 7279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7285,
									"end": 7454,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 7285,
									"end": 7454,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7329,
									"end": 7335,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7362,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 7410,
									"end": 7411,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7406,
									"end": 7412,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 7398,
									"end": 7403,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 7395,
									"end": 7396,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 7391,
									"end": 7404,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 7362,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 7362,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7362,
									"end": 7413,
									"name": "tag",
									"source": 14,
									"value": "149"
								},
								{
									"begin": 7362,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7358,
									"end": 7414,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 7443,
									"end": 7447,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7433,
									"end": 7448,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 7423,
									"end": 7448,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7423,
									"end": 7448,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7336,
									"end": 7454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7285,
									"end": 7454,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7285,
									"end": 7454,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7285,
									"end": 7454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7285,
									"end": 7454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7285,
									"end": 7454,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7459,
									"end": 7754,
									"name": "tag",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 7459,
									"end": 7754,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7535,
									"end": 7539,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 7681,
									"end": 7710,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "151"
								},
								{
									"begin": 7706,
									"end": 7709,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7700,
									"end": 7704,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 7681,
									"end": 7710,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 7681,
									"end": 7710,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7681,
									"end": 7710,
									"name": "tag",
									"source": 14,
									"value": "151"
								},
								{
									"begin": 7681,
									"end": 7710,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7673,
									"end": 7710,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7673,
									"end": 7710,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7743,
									"end": 7746,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7740,
									"end": 7741,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 7736,
									"end": 7747,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 7730,
									"end": 7734,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7727,
									"end": 7748,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 7719,
									"end": 7748,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 7719,
									"end": 7748,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7459,
									"end": 7754,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7459,
									"end": 7754,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7459,
									"end": 7754,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7459,
									"end": 7754,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7459,
									"end": 7754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7759,
									"end": 9154,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 7759,
									"end": 9154,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7876,
									"end": 7913,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "153"
								},
								{
									"begin": 7909,
									"end": 7912,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 7876,
									"end": 7913,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 7876,
									"end": 7913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 7876,
									"end": 7913,
									"name": "tag",
									"source": 14,
									"value": "153"
								},
								{
									"begin": 7876,
									"end": 7913,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7978,
									"end": 7996,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7970,
									"end": 7976,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 7967,
									"end": 7997,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 7964,
									"end": 8020,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 7964,
									"end": 8020,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "154"
								},
								{
									"begin": 7964,
									"end": 8020,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8000,
									"end": 8018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 8000,
									"end": 8018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 8000,
									"end": 8018,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8000,
									"end": 8018,
									"name": "tag",
									"source": 14,
									"value": "155"
								},
								{
									"begin": 8000,
									"end": 8018,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7964,
									"end": 8020,
									"name": "tag",
									"source": 14,
									"value": "154"
								},
								{
									"begin": 7964,
									"end": 8020,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8044,
									"end": 8082,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "156"
								},
								{
									"begin": 8076,
									"end": 8080,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8070,
									"end": 8081,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 8044,
									"end": 8082,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 8044,
									"end": 8082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8044,
									"end": 8082,
									"name": "tag",
									"source": 14,
									"value": "156"
								},
								{
									"begin": 8044,
									"end": 8082,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8129,
									"end": 8196,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "157"
								},
								{
									"begin": 8189,
									"end": 8195,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8181,
									"end": 8187,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8175,
									"end": 8179,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8129,
									"end": 8196,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 8129,
									"end": 8196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8129,
									"end": 8196,
									"name": "tag",
									"source": 14,
									"value": "157"
								},
								{
									"begin": 8129,
									"end": 8196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8223,
									"end": 8224,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8247,
									"end": 8251,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8279,
									"end": 8281,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 8271,
									"end": 8277,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8268,
									"end": 8282,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 8296,
									"end": 8297,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8291,
									"end": 8909,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8291,
									"end": 8909,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 8291,
									"end": 8909,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "159"
								},
								{
									"begin": 8291,
									"end": 8909,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8953,
									"end": 8954,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8970,
									"end": 8976,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8967,
									"end": 9044,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8967,
									"end": 9044,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "160"
								},
								{
									"begin": 8967,
									"end": 9044,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 9019,
									"end": 9028,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9014,
									"end": 9017,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 9010,
									"end": 9029,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 9004,
									"end": 9030,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8995,
									"end": 9030,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8995,
									"end": 9030,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8967,
									"end": 9044,
									"name": "tag",
									"source": 14,
									"value": "160"
								},
								{
									"begin": 8967,
									"end": 9044,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9070,
									"end": 9137,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "161"
								},
								{
									"begin": 9130,
									"end": 9136,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 9123,
									"end": 9128,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 9070,
									"end": 9137,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "58"
								},
								{
									"begin": 9070,
									"end": 9137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 9070,
									"end": 9137,
									"name": "tag",
									"source": 14,
									"value": "161"
								},
								{
									"begin": 9070,
									"end": 9137,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 9064,
									"end": 9068,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 9057,
									"end": 9138,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8926,
									"end": 9148,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8261,
									"end": 9148,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "158"
								},
								{
									"begin": 8261,
									"end": 9148,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8291,
									"end": 8909,
									"name": "tag",
									"source": 14,
									"value": "159"
								},
								{
									"begin": 8291,
									"end": 8909,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8343,
									"end": 8347,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 8339,
									"end": 8348,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 8331,
									"end": 8337,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8327,
									"end": 8349,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 8377,
									"end": 8414,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "162"
								},
								{
									"begin": 8409,
									"end": 8413,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8377,
									"end": 8414,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 8377,
									"end": 8414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8377,
									"end": 8414,
									"name": "tag",
									"source": 14,
									"value": "162"
								},
								{
									"begin": 8377,
									"end": 8414,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8436,
									"end": 8437,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 8450,
									"end": 8658,
									"name": "tag",
									"source": 14,
									"value": "163"
								},
								{
									"begin": 8450,
									"end": 8658,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8464,
									"end": 8471,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8461,
									"end": 8462,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8458,
									"end": 8472,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 8450,
									"end": 8658,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8450,
									"end": 8658,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "165"
								},
								{
									"begin": 8450,
									"end": 8658,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8543,
									"end": 8552,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8538,
									"end": 8541,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8534,
									"end": 8553,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8528,
									"end": 8554,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8520,
									"end": 8526,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8513,
									"end": 8555,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8594,
									"end": 8595,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8586,
									"end": 8592,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8582,
									"end": 8596,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8572,
									"end": 8596,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 8572,
									"end": 8596,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8641,
									"end": 8643,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8630,
									"end": 8639,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 8626,
									"end": 8644,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8613,
									"end": 8644,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 8613,
									"end": 8644,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8487,
									"end": 8491,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 8484,
									"end": 8485,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 8480,
									"end": 8492,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8475,
									"end": 8492,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 8475,
									"end": 8492,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8450,
									"end": 8658,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "163"
								},
								{
									"begin": 8450,
									"end": 8658,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8450,
									"end": 8658,
									"name": "tag",
									"source": 14,
									"value": "165"
								},
								{
									"begin": 8450,
									"end": 8658,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8686,
									"end": 8692,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 8677,
									"end": 8684,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8674,
									"end": 8693,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 8671,
									"end": 8850,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 8671,
									"end": 8850,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "166"
								},
								{
									"begin": 8671,
									"end": 8850,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 8744,
									"end": 8753,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 8739,
									"end": 8742,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8735,
									"end": 8754,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8729,
									"end": 8755,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 8787,
									"end": 8835,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "167"
								},
								{
									"begin": 8829,
									"end": 8833,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 8821,
									"end": 8827,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 8817,
									"end": 8834,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 8806,
									"end": 8815,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 8787,
									"end": 8835,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 8787,
									"end": 8835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 8787,
									"end": 8835,
									"name": "tag",
									"source": 14,
									"value": "167"
								},
								{
									"begin": 8787,
									"end": 8835,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8779,
									"end": 8785,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 8772,
									"end": 8836,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8694,
									"end": 8850,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8671,
									"end": 8850,
									"name": "tag",
									"source": 14,
									"value": "166"
								},
								{
									"begin": 8671,
									"end": 8850,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8896,
									"end": 8897,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 8892,
									"end": 8893,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 8884,
									"end": 8890,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 8880,
									"end": 8894,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 8876,
									"end": 8898,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 8870,
									"end": 8874,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 8863,
									"end": 8899,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 8298,
									"end": 8909,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8298,
									"end": 8909,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8298,
									"end": 8909,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 8261,
									"end": 9148,
									"name": "tag",
									"source": 14,
									"value": "158"
								},
								{
									"begin": 8261,
									"end": 9148,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 8261,
									"end": 9148,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7851,
									"end": 9154,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7851,
									"end": 9154,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7851,
									"end": 9154,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7759,
									"end": 9154,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7759,
									"end": 9154,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7759,
									"end": 9154,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 1041,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208188fdba4badb1d6c7b77d7c8e4312a86d05e853a58231cfa5e8c49f884e862c64736f6c634300081a0033",
									".code": [
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "F242432A"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "F5298ACA"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "B510391F"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "2EB2C2D6"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "2EB2C2D6"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "31F0E6C8"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "4E1273F4"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "6B20C454"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "FDD58E"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "2FE5305"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "E89341C"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 300,
											"end": 1041,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 554,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 554,
											"end": 641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 554,
											"end": 641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 836,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 836,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 830,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 647,
											"end": 830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 647,
											"end": 830,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 830,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 647,
											"end": 830,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 647,
											"end": 830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 647,
											"end": 830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 647,
											"end": 830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 647,
											"end": 830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 554,
											"end": 641,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 554,
											"end": 641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 619,
											"end": 634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 627,
											"end": 633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 619,
											"end": 626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 619,
											"end": 634,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 619,
											"end": 634,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 619,
											"end": 634,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 554,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 963,
											"end": 972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 982,
											"end": 987,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 978,
											"end": 979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 978,
											"end": 987,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1008,
											"end": 1022,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1013,
											"end": 1015,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1017,
											"end": 1021,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1008,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1008,
											"end": 1022,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1008,
											"end": 1022,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1008,
											"end": 1022,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 989,
											"end": 992,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 989,
											"end": 992,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 989,
											"end": 992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 989,
											"end": 992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 989,
											"end": 992,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 989,
											"end": 992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 989,
											"end": 992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 958,
											"end": 1033,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 836,
											"end": 1039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 804,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 804,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 816,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 804,
											"end": 816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 793,
											"end": 860,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 821,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 838,
											"end": 845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 847,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 847,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 847,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 847,
											"end": 859,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 847,
											"end": 859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 821,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 821,
											"end": 860,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 821,
											"end": 860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 820,
											"end": 860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 793,
											"end": 860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 789,
											"end": 945,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 789,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 789,
											"end": 945,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 912,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 912,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 912,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 924,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 912,
											"end": 924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 926,
											"end": 933,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 883,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 789,
											"end": 945,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 789,
											"end": 945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 955,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 966,
											"end": 973,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 975,
											"end": 978,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 955,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 955,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 987,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 955,
											"end": 987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 647,
											"end": 830,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 647,
											"end": 830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 724,
											"end": 739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 742,
											"end": 754,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 724,
											"end": 754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 724,
											"end": 754,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 764,
											"end": 796,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 770,
											"end": 777,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 779,
											"end": 786,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 788,
											"end": 789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 791,
											"end": 795,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 764,
											"end": 769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 764,
											"end": 796,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 764,
											"end": 796,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 764,
											"end": 796,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 822,
											"end": 823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 806,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 806,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 806,
											"end": 823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 806,
											"end": 823,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 647,
											"end": 830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 492,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 492,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 492,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 492,
											"end": 504,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 492,
											"end": 504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 481,
											"end": 488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 481,
											"end": 548,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 526,
											"end": 533,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 535,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 535,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 535,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 535,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 535,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 509,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 509,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 508,
											"end": 548,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 481,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 477,
											"end": 633,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 477,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 477,
											"end": 633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 600,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 600,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 600,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 600,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 614,
											"end": 621,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 571,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 477,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 477,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 649,
											"end": 656,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 658,
											"end": 660,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 662,
											"end": 667,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 643,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 643,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 643,
											"end": 668,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 643,
											"end": 668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10352,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10348,
											"end": 10361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10361,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10282,
											"end": 10368,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10282,
											"end": 10368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12904,
											"end": 12905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12888,
											"end": 12892,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12958,
											"end": 12959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 12929,
											"end": 12961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 13008,
											"end": 13012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13022,
											"end": 13023,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13026,
											"end": 13029,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13031,
											"end": 13037,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 12981,
											"end": 13042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 12219,
											"end": 12251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12294,
											"end": 12317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 12340,
											"end": 12342,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12344,
											"end": 12349,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 12321,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12401,
											"end": 12402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12410,
											"end": 12416,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 12360,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3531,
											"end": 3545,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3527,
											"end": 3555,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3459,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "tag",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3615,
											"end": 3692,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3693,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3712,
											"end": 3716,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3717,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3736,
											"end": 3740,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3741,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 3836,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3864,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3928,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 3977,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4027,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4006,
											"end": 4028,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 4034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 4034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 4101,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 4130,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4040,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4237,
											"end": 4241,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 4349,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 4387,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4469,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4461,
											"end": 4476,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4585,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 4580,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 4628,
											"end": 4629,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4614,
											"end": 4617,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4603,
											"end": 4630,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4489,
											"end": 4637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 4726,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 4762,
											"end": 4811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 4746,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4737,
											"end": 4812,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4737,
											"end": 4812,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4842,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4873,
											"end": 4877,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4866,
											"end": 4871,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4862,
											"end": 4878,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4911,
											"end": 4914,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 4908,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4893,
											"end": 4909,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 4915,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 4918,
											"end": 4997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5053,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 5008,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4727,
											"end": 5068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4643,
											"end": 5068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5196,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5186,
											"end": 5190,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 5201,
											"end": 5280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 5418,
											"end": 5421,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5410,
											"end": 5416,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5401,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5391,
											"end": 5408,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 5343,
											"end": 5422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5150,
											"end": 5428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5088,
											"end": 5428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5509,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5540,
											"end": 5549,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5531,
											"end": 5538,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5527,
											"end": 5550,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5523,
											"end": 5555,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 5558,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5691,
											"end": 5708,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5736,
											"end": 5754,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5725,
											"end": 5755,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 5758,
											"end": 5837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 5918,
											"end": 5925,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5898,
											"end": 5907,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5894,
											"end": 5916,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 5863,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5853,
											"end": 5926,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5853,
											"end": 5926,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5649,
											"end": 5936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6008,
											"end": 6014,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6057,
											"end": 6059,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6045,
											"end": 6054,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6036,
											"end": 6043,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6032,
											"end": 6055,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 6063,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6183,
											"end": 6184,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6233,
											"end": 6242,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6229,
											"end": 6251,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 6208,
											"end": 6261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6198,
											"end": 6261,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6198,
											"end": 6261,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6154,
											"end": 6271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5949,
											"end": 6278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6336,
											"end": 6342,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6375,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6364,
											"end": 6376,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6354,
											"end": 6376,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6354,
											"end": 6376,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6284,
											"end": 6383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6484,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6495,
											"end": 6514,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6551,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6545,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6538,
											"end": 6552,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6552,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6523,
											"end": 6552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6389,
											"end": 6558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6653,
											"end": 6659,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6648,
											"end": 6651,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6637,
											"end": 6660,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6691,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6680,
											"end": 6683,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6676,
											"end": 6692,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6669,
											"end": 6696,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6564,
											"end": 6703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6797,
											"end": 6800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 6858,
											"end": 6863,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 6825,
											"end": 6864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 6944,
											"end": 6950,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6939,
											"end": 6942,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 6880,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6873,
											"end": 6951,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6873,
											"end": 6951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 7018,
											"end": 7024,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 6960,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 7072,
											"end": 7078,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 7050,
											"end": 7079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7045,
											"end": 7048,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7041,
											"end": 7080,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7034,
											"end": 7080,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7034,
											"end": 7080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6801,
											"end": 7086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6709,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7205,
											"end": 7209,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7245,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7241,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7220,
											"end": 7246,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7220,
											"end": 7246,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7286,
											"end": 7290,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7282,
											"end": 7302,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7267,
											"end": 7276,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7256,
											"end": 7303,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 7393,
											"end": 7397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7384,
											"end": 7390,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 7320,
											"end": 7398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7312,
											"end": 7398,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7312,
											"end": 7398,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7092,
											"end": 7405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7570,
											"end": 7576,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7567,
											"end": 7597,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 7600,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7642,
											"end": 7648,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7638,
											"end": 7655,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7630,
											"end": 7655,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7630,
											"end": 7655,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7710,
											"end": 7714,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7704,
											"end": 7708,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7700,
											"end": 7715,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7692,
											"end": 7715,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7692,
											"end": 7715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7411,
											"end": 7722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7728,
											"end": 7845,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 7728,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7835,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7827,
											"end": 7839,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 7969,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 8062,
											"end": 8068,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 8005,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 7989,
											"end": 8070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7980,
											"end": 8070,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7980,
											"end": 8070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8090,
											"end": 8095,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8119,
											"end": 8125,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8112,
											"end": 8117,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8105,
											"end": 8126,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8153,
											"end": 8157,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8146,
											"end": 8151,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8142,
											"end": 8158,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8204,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8194,
											"end": 8211,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 8186,
											"end": 8192,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8182,
											"end": 8212,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8235,
											"end": 8238,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8227,
											"end": 8233,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8224,
											"end": 8239,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 8254,
											"end": 8333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8369,
											"end": 8375,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8392,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8381,
											"end": 8384,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8378,
											"end": 8393,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8461,
											"end": 8464,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 8523,
											"end": 8526,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8511,
											"end": 8521,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 8490,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8485,
											"end": 8488,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8478,
											"end": 8528,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8557,
											"end": 8561,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8555,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8541,
											"end": 8562,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8541,
											"end": 8562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8428,
											"end": 8572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8407,
											"end": 8410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8403,
											"end": 8417,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8396,
											"end": 8417,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8396,
											"end": 8417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8356,
											"end": 8377,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7970,
											"end": 8578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7970,
											"end": 8578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8672,
											"end": 8677,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8724,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8714,
											"end": 8718,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8702,
											"end": 8719,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8698,
											"end": 8725,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 8729,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8833,
											"end": 8853,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 8961,
											"end": 8964,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8953,
											"end": 8959,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8934,
											"end": 8951,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 8871,
											"end": 8965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8862,
											"end": 8965,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8862,
											"end": 8965,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8678,
											"end": 8971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8601,
											"end": 8971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9038,
											"end": 9042,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9146,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9120,
											"end": 9126,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9117,
											"end": 9147,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 9150,
											"end": 9168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 9210,
											"end": 9216,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 9188,
											"end": 9217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9180,
											"end": 9217,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9180,
											"end": 9217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9272,
											"end": 9276,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9266,
											"end": 9270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9262,
											"end": 9277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9254,
											"end": 9277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9254,
											"end": 9277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8977,
											"end": 9284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9372,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 9408,
											"end": 9456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 9392,
											"end": 9457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9383,
											"end": 9457,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9383,
											"end": 9457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9480,
											"end": 9486,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9473,
											"end": 9478,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9466,
											"end": 9487,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9511,
											"end": 9516,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9507,
											"end": 9523,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9556,
											"end": 9559,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9547,
											"end": 9553,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9542,
											"end": 9545,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9538,
											"end": 9554,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9535,
											"end": 9560,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 9563,
											"end": 9642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 9700,
											"end": 9706,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9695,
											"end": 9698,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9690,
											"end": 9693,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 9653,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9373,
											"end": 9713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9787,
											"end": 9792,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9839,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9821,
											"end": 9827,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9817,
											"end": 9834,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9813,
											"end": 9840,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 9844,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9948,
											"end": 9968,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 10060,
											"end": 10063,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10058,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10045,
											"end": 10049,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10037,
											"end": 10043,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10033,
											"end": 10050,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 9986,
											"end": 10064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9977,
											"end": 10064,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9977,
											"end": 10064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9793,
											"end": 10070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9732,
											"end": 10070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10230,
											"end": 10236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10244,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10246,
											"end": 10252,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10260,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10262,
											"end": 10268,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10311,
											"end": 10314,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 10299,
											"end": 10308,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10290,
											"end": 10297,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10286,
											"end": 10309,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10318,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 10318,
											"end": 10397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10318,
											"end": 10397,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 10318,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "tag",
											"source": 14,
											"value": "510"
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10438,
											"end": 10439,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 10508,
											"end": 10515,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10499,
											"end": 10505,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10488,
											"end": 10497,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10484,
											"end": 10506,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10463,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 10463,
											"end": 10516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10463,
											"end": 10516,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 10463,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10453,
											"end": 10516,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10453,
											"end": 10516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10409,
											"end": 10526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10565,
											"end": 10567,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10591,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10636,
											"end": 10643,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10627,
											"end": 10633,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10616,
											"end": 10625,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10612,
											"end": 10634,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10591,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 10591,
											"end": 10644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10591,
											"end": 10644,
											"name": "tag",
											"source": 14,
											"value": "513"
										},
										{
											"begin": 10591,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10581,
											"end": 10644,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10581,
											"end": 10644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10536,
											"end": 10654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10721,
											"end": 10723,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10710,
											"end": 10719,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10706,
											"end": 10724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10693,
											"end": 10725,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10752,
											"end": 10770,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10741,
											"end": 10771,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10774,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10774,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 10774,
											"end": 10853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10774,
											"end": 10853,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 10774,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10879,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 10949,
											"end": 10956,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10940,
											"end": 10946,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10929,
											"end": 10938,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10925,
											"end": 10947,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10879,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 10879,
											"end": 10957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10879,
											"end": 10957,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 10879,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10869,
											"end": 10957,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10869,
											"end": 10957,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10664,
											"end": 10967,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11034,
											"end": 11036,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11023,
											"end": 11032,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11006,
											"end": 11038,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11054,
											"end": 11084,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 11087,
											"end": 11166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 11262,
											"end": 11269,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11253,
											"end": 11259,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11251,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 11192,
											"end": 11270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11182,
											"end": 11270,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11182,
											"end": 11270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10977,
											"end": 11280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11347,
											"end": 11350,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11332,
											"end": 11351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11319,
											"end": 11352,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11379,
											"end": 11397,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11371,
											"end": 11377,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11401,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 11401,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 11401,
											"end": 11480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11401,
											"end": 11480,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 11401,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 11560,
											"end": 11567,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11551,
											"end": 11557,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11540,
											"end": 11549,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 11536,
											"end": 11558,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 11506,
											"end": 11568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11568,
											"name": "tag",
											"source": 14,
											"value": "522"
										},
										{
											"begin": 11506,
											"end": 11568,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11496,
											"end": 11568,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11496,
											"end": 11568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11290,
											"end": 11578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10076,
											"end": 11585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 12388,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 11591,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11677,
											"end": 11683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11685,
											"end": 11691,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11693,
											"end": 11699,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11742,
											"end": 11744,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11730,
											"end": 11739,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11721,
											"end": 11728,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11717,
											"end": 11740,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11713,
											"end": 11745,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11710,
											"end": 11829,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11710,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 11710,
											"end": 11829,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11748,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11748,
											"end": 11827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 11748,
											"end": 11827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11748,
											"end": 11827,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 11748,
											"end": 11827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11710,
											"end": 11829,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 11710,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11868,
											"end": 11869,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11893,
											"end": 11946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 11938,
											"end": 11945,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11918,
											"end": 11927,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11914,
											"end": 11936,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11893,
											"end": 11946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 11893,
											"end": 11946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11893,
											"end": 11946,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 11893,
											"end": 11946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11883,
											"end": 11946,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11883,
											"end": 11946,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11839,
											"end": 11956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11995,
											"end": 11997,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12021,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 12066,
											"end": 12073,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12057,
											"end": 12063,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12046,
											"end": 12055,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12042,
											"end": 12064,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12021,
											"end": 12074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 12021,
											"end": 12074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12021,
											"end": 12074,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 12021,
											"end": 12074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12011,
											"end": 12074,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12011,
											"end": 12074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11966,
											"end": 12084,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12151,
											"end": 12153,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12140,
											"end": 12149,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12136,
											"end": 12154,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12123,
											"end": 12155,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 12182,
											"end": 12200,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12174,
											"end": 12180,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12171,
											"end": 12201,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12168,
											"end": 12285,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12168,
											"end": 12285,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 12168,
											"end": 12285,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12204,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 12204,
											"end": 12283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 12204,
											"end": 12283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12204,
											"end": 12283,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 12204,
											"end": 12283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12168,
											"end": 12285,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 12168,
											"end": 12285,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12309,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 12363,
											"end": 12370,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12354,
											"end": 12360,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12343,
											"end": 12352,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12339,
											"end": 12361,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12309,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 12309,
											"end": 12371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12309,
											"end": 12371,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 12309,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12299,
											"end": 12371,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12299,
											"end": 12371,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12094,
											"end": 12381,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 12388,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 12388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 12388,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 12388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 12388,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11591,
											"end": 12388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12394,
											"end": 12705,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 12394,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12471,
											"end": 12475,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12561,
											"end": 12579,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12553,
											"end": 12559,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12550,
											"end": 12580,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12547,
											"end": 12603,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12547,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 12547,
											"end": 12603,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 12583,
											"end": 12601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 12583,
											"end": 12601,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12547,
											"end": 12603,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 12547,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12633,
											"end": 12637,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12625,
											"end": 12631,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12621,
											"end": 12638,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12613,
											"end": 12638,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12613,
											"end": 12638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12693,
											"end": 12697,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12687,
											"end": 12691,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12683,
											"end": 12698,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12675,
											"end": 12698,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12675,
											"end": 12698,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12394,
											"end": 12705,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12394,
											"end": 12705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12394,
											"end": 12705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12394,
											"end": 12705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12728,
											"end": 13438,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 12728,
											"end": 13438,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12824,
											"end": 12829,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12849,
											"end": 12930,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 12865,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 12922,
											"end": 12928,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12865,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 12865,
											"end": 12929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12865,
											"end": 12929,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 12865,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12849,
											"end": 12930,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 12849,
											"end": 12930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12849,
											"end": 12930,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 12849,
											"end": 12930,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12840,
											"end": 12930,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12840,
											"end": 12930,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12950,
											"end": 12955,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12979,
											"end": 12985,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12972,
											"end": 12977,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12965,
											"end": 12986,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13013,
											"end": 13017,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13006,
											"end": 13011,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13002,
											"end": 13018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12995,
											"end": 13018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12995,
											"end": 13018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13066,
											"end": 13070,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13058,
											"end": 13064,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13054,
											"end": 13071,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 13046,
											"end": 13052,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13072,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13095,
											"end": 13098,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13087,
											"end": 13093,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13084,
											"end": 13099,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13081,
											"end": 13203,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13081,
											"end": 13203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 13081,
											"end": 13203,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13114,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 13114,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 13114,
											"end": 13193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13114,
											"end": 13193,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 13114,
											"end": 13193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13081,
											"end": 13203,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 13081,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13229,
											"end": 13235,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13212,
											"end": 13432,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 13212,
											"end": 13432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13246,
											"end": 13252,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13241,
											"end": 13244,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13238,
											"end": 13253,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13212,
											"end": 13432,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13212,
											"end": 13432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 13212,
											"end": 13432,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13321,
											"end": 13324,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13350,
											"end": 13387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 13383,
											"end": 13386,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 13371,
											"end": 13381,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13350,
											"end": 13387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 13350,
											"end": 13387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13350,
											"end": 13387,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 13350,
											"end": 13387,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13345,
											"end": 13348,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13338,
											"end": 13388,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13417,
											"end": 13421,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13412,
											"end": 13415,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13408,
											"end": 13422,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13401,
											"end": 13422,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13401,
											"end": 13422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13288,
											"end": 13432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13272,
											"end": 13276,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13267,
											"end": 13270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13263,
											"end": 13277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13256,
											"end": 13277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13256,
											"end": 13277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13212,
											"end": 13432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 13212,
											"end": 13432,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13212,
											"end": 13432,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 13212,
											"end": 13432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13216,
											"end": 13237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12830,
											"end": 13438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12830,
											"end": 13438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12728,
											"end": 13438,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12728,
											"end": 13438,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12728,
											"end": 13438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12728,
											"end": 13438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12728,
											"end": 13438,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12728,
											"end": 13438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13461,
											"end": 13831,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 13461,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13532,
											"end": 13537,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13581,
											"end": 13584,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13574,
											"end": 13578,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 13566,
											"end": 13572,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13562,
											"end": 13579,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13558,
											"end": 13585,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13548,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 13548,
											"end": 13670,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13589,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 13589,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 13589,
											"end": 13668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13589,
											"end": 13668,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 13589,
											"end": 13668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13548,
											"end": 13670,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 13548,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13706,
											"end": 13712,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13713,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13731,
											"end": 13825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 13821,
											"end": 13824,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13813,
											"end": 13819,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13806,
											"end": 13810,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13798,
											"end": 13804,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13794,
											"end": 13811,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13731,
											"end": 13825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 13731,
											"end": 13825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13731,
											"end": 13825,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 13731,
											"end": 13825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13722,
											"end": 13825,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13722,
											"end": 13825,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13538,
											"end": 13831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13461,
											"end": 13831,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13461,
											"end": 13831,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13461,
											"end": 13831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13461,
											"end": 13831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13461,
											"end": 13831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 14731,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 13837,
											"end": 14731,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13955,
											"end": 13961,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13963,
											"end": 13969,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14012,
											"end": 14014,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14000,
											"end": 14009,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13991,
											"end": 13998,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13987,
											"end": 14010,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13983,
											"end": 14015,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 14099,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 14099,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 13980,
											"end": 14099,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14018,
											"end": 14097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 14018,
											"end": 14097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 14018,
											"end": 14097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14018,
											"end": 14097,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 14018,
											"end": 14097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13980,
											"end": 14099,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 13980,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14166,
											"end": 14167,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14155,
											"end": 14164,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14151,
											"end": 14168,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14138,
											"end": 14169,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 14196,
											"end": 14214,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14188,
											"end": 14194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14185,
											"end": 14215,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14182,
											"end": 14299,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14182,
											"end": 14299,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 14182,
											"end": 14299,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14218,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 14218,
											"end": 14297,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 14218,
											"end": 14297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14218,
											"end": 14297,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 14218,
											"end": 14297,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14182,
											"end": 14299,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 14182,
											"end": 14299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14323,
											"end": 14401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 14393,
											"end": 14400,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14384,
											"end": 14390,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14373,
											"end": 14382,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14369,
											"end": 14391,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14323,
											"end": 14401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 14323,
											"end": 14401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14323,
											"end": 14401,
											"name": "tag",
											"source": 14,
											"value": "552"
										},
										{
											"begin": 14323,
											"end": 14401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14313,
											"end": 14401,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14313,
											"end": 14401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14109,
											"end": 14411,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14478,
											"end": 14480,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14467,
											"end": 14476,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14463,
											"end": 14481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14450,
											"end": 14482,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14501,
											"end": 14507,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14498,
											"end": 14528,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14495,
											"end": 14612,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14495,
											"end": 14612,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 14495,
											"end": 14612,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14531,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 14531,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 14531,
											"end": 14610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14531,
											"end": 14610,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 14531,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14495,
											"end": 14612,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 14495,
											"end": 14612,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14636,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 14706,
											"end": 14713,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14697,
											"end": 14703,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14686,
											"end": 14695,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14682,
											"end": 14704,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14636,
											"end": 14714,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 14636,
											"end": 14714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14636,
											"end": 14714,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 14636,
											"end": 14714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14626,
											"end": 14714,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14626,
											"end": 14714,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14421,
											"end": 14724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 14731,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 14731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 14731,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 14731,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 14731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 14731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14737,
											"end": 14851,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 14737,
											"end": 14851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14804,
											"end": 14810,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14838,
											"end": 14843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14832,
											"end": 14844,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14822,
											"end": 14844,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14822,
											"end": 14844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14737,
											"end": 14851,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14737,
											"end": 14851,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14737,
											"end": 14851,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14737,
											"end": 14851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14857,
											"end": 15041,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 14857,
											"end": 15041,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14956,
											"end": 14967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14990,
											"end": 14996,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14985,
											"end": 14988,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14978,
											"end": 14997,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15030,
											"end": 15034,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15025,
											"end": 15028,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15021,
											"end": 15035,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15006,
											"end": 15035,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15006,
											"end": 15035,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14857,
											"end": 15041,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14857,
											"end": 15041,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14857,
											"end": 15041,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14857,
											"end": 15041,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14857,
											"end": 15041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15047,
											"end": 15179,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 15047,
											"end": 15179,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15114,
											"end": 15118,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15137,
											"end": 15140,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15129,
											"end": 15140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15129,
											"end": 15140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15167,
											"end": 15171,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15162,
											"end": 15165,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15158,
											"end": 15172,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15150,
											"end": 15172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15150,
											"end": 15172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15047,
											"end": 15179,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15047,
											"end": 15179,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15047,
											"end": 15179,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15047,
											"end": 15179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15185,
											"end": 15293,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 15185,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15262,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 15280,
											"end": 15285,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15262,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 15262,
											"end": 15286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15262,
											"end": 15286,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 15262,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15257,
											"end": 15260,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15250,
											"end": 15287,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15185,
											"end": 15293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15185,
											"end": 15293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15185,
											"end": 15293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15478,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 15299,
											"end": 15478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15368,
											"end": 15378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15389,
											"end": 15435,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 15431,
											"end": 15434,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15423,
											"end": 15429,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15435,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 15389,
											"end": 15435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15389,
											"end": 15435,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 15389,
											"end": 15435,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15467,
											"end": 15471,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15462,
											"end": 15465,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15458,
											"end": 15472,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15444,
											"end": 15472,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15444,
											"end": 15472,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15478,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15478,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15478,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15478,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15299,
											"end": 15478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15484,
											"end": 15597,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 15484,
											"end": 15597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15554,
											"end": 15558,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15586,
											"end": 15590,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15581,
											"end": 15584,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15577,
											"end": 15591,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15569,
											"end": 15591,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15569,
											"end": 15591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15484,
											"end": 15597,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15484,
											"end": 15597,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15484,
											"end": 15597,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15484,
											"end": 15597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15633,
											"end": 16365,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 15633,
											"end": 16365,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15752,
											"end": 15755,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15781,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 15829,
											"end": 15834,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15781,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 15781,
											"end": 15835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15781,
											"end": 15835,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 15781,
											"end": 15835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15851,
											"end": 15937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 15930,
											"end": 15936,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15925,
											"end": 15928,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15851,
											"end": 15937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 15851,
											"end": 15937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15851,
											"end": 15937,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 15851,
											"end": 15937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15844,
											"end": 15937,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15844,
											"end": 15937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15961,
											"end": 16017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 16011,
											"end": 16016,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15961,
											"end": 16017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 15961,
											"end": 16017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15961,
											"end": 16017,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 15961,
											"end": 16017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16040,
											"end": 16047,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16071,
											"end": 16072,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16056,
											"end": 16340,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 16056,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16081,
											"end": 16087,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16078,
											"end": 16079,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16075,
											"end": 16088,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 16056,
											"end": 16340,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16056,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 16056,
											"end": 16340,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16157,
											"end": 16163,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16151,
											"end": 16164,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 16184,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 16243,
											"end": 16246,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 16228,
											"end": 16241,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16184,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 16184,
											"end": 16247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16184,
											"end": 16247,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 16184,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16247,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 16177,
											"end": 16247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16270,
											"end": 16330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 16323,
											"end": 16329,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16270,
											"end": 16330,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 16270,
											"end": 16330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16270,
											"end": 16330,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 16270,
											"end": 16330,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16260,
											"end": 16330,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16260,
											"end": 16330,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16116,
											"end": 16340,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16103,
											"end": 16104,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16100,
											"end": 16101,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16096,
											"end": 16105,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16091,
											"end": 16105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16091,
											"end": 16105,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16056,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 16056,
											"end": 16340,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16056,
											"end": 16340,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 16056,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16060,
											"end": 16074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16356,
											"end": 16359,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16349,
											"end": 16359,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16349,
											"end": 16359,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15757,
											"end": 16365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15757,
											"end": 16365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15757,
											"end": 16365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15633,
											"end": 16365,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15633,
											"end": 16365,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15633,
											"end": 16365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15633,
											"end": 16365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15633,
											"end": 16365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16744,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 16371,
											"end": 16744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16514,
											"end": 16518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16552,
											"end": 16554,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16541,
											"end": 16550,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16537,
											"end": 16555,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16529,
											"end": 16555,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16529,
											"end": 16555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16610,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16595,
											"end": 16599,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16591,
											"end": 16611,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16587,
											"end": 16588,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16576,
											"end": 16585,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16572,
											"end": 16589,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16565,
											"end": 16612,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16629,
											"end": 16737,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 16732,
											"end": 16736,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16723,
											"end": 16729,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16629,
											"end": 16737,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 16629,
											"end": 16737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16629,
											"end": 16737,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 16629,
											"end": 16737,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16621,
											"end": 16737,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16621,
											"end": 16737,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16744,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16744,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16744,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16744,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16371,
											"end": 16744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16750,
											"end": 17789,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 16750,
											"end": 17789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16877,
											"end": 16883,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16885,
											"end": 16891,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16893,
											"end": 16899,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16942,
											"end": 16944,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 16930,
											"end": 16939,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16921,
											"end": 16928,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16917,
											"end": 16940,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16913,
											"end": 16945,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 16910,
											"end": 17029,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16910,
											"end": 17029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 16910,
											"end": 17029,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16948,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 16948,
											"end": 17027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 16948,
											"end": 17027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16948,
											"end": 17027,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 16948,
											"end": 17027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16910,
											"end": 17029,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 16910,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17068,
											"end": 17069,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17093,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 17138,
											"end": 17145,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17129,
											"end": 17135,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17118,
											"end": 17127,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17114,
											"end": 17136,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17093,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 17093,
											"end": 17146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17093,
											"end": 17146,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 17093,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17083,
											"end": 17146,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 17083,
											"end": 17146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17039,
											"end": 17156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17223,
											"end": 17225,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17212,
											"end": 17221,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17208,
											"end": 17226,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17195,
											"end": 17227,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 17254,
											"end": 17272,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17246,
											"end": 17252,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17243,
											"end": 17273,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17240,
											"end": 17357,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17240,
											"end": 17357,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 17240,
											"end": 17357,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17276,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 17276,
											"end": 17355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 17276,
											"end": 17355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17276,
											"end": 17355,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 17276,
											"end": 17355,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17240,
											"end": 17357,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 17240,
											"end": 17357,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17381,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 17451,
											"end": 17458,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17442,
											"end": 17448,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17431,
											"end": 17440,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17427,
											"end": 17449,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17381,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 17381,
											"end": 17459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17381,
											"end": 17459,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 17381,
											"end": 17459,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17371,
											"end": 17459,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17371,
											"end": 17459,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17166,
											"end": 17469,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17536,
											"end": 17538,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 17525,
											"end": 17534,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17508,
											"end": 17540,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 17567,
											"end": 17585,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17559,
											"end": 17565,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17556,
											"end": 17586,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17553,
											"end": 17670,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17553,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 17553,
											"end": 17670,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17589,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 17589,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 17589,
											"end": 17668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17589,
											"end": 17668,
											"name": "tag",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 17589,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17553,
											"end": 17670,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 17553,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17694,
											"end": 17772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 17764,
											"end": 17771,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17755,
											"end": 17761,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17744,
											"end": 17753,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17740,
											"end": 17762,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17694,
											"end": 17772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 17694,
											"end": 17772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17694,
											"end": 17772,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 17694,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17684,
											"end": 17772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17684,
											"end": 17772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17479,
											"end": 17782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16750,
											"end": 17789,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16750,
											"end": 17789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16750,
											"end": 17789,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16750,
											"end": 17789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16750,
											"end": 17789,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16750,
											"end": 17789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17795,
											"end": 17913,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 17795,
											"end": 17913,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17882,
											"end": 17906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 17900,
											"end": 17905,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17882,
											"end": 17906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 17882,
											"end": 17906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17882,
											"end": 17906,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 17882,
											"end": 17906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17877,
											"end": 17880,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17870,
											"end": 17907,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17795,
											"end": 17913,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17795,
											"end": 17913,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17795,
											"end": 17913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17919,
											"end": 18141,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 17919,
											"end": 18141,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18012,
											"end": 18016,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18050,
											"end": 18052,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18039,
											"end": 18048,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18035,
											"end": 18053,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18027,
											"end": 18053,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18027,
											"end": 18053,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18063,
											"end": 18134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 18131,
											"end": 18132,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18120,
											"end": 18129,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18116,
											"end": 18133,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18107,
											"end": 18113,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18063,
											"end": 18134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 18063,
											"end": 18134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18063,
											"end": 18134,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 18063,
											"end": 18134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17919,
											"end": 18141,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17919,
											"end": 18141,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17919,
											"end": 18141,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17919,
											"end": 18141,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17919,
											"end": 18141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18147,
											"end": 18263,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 18147,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18217,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 18232,
											"end": 18237,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18217,
											"end": 18238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 18217,
											"end": 18238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18217,
											"end": 18238,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 18217,
											"end": 18238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18210,
											"end": 18215,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18207,
											"end": 18239,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18197,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 18197,
											"end": 18257,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18253,
											"end": 18254,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18250,
											"end": 18251,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18243,
											"end": 18255,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18197,
											"end": 18257,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 18197,
											"end": 18257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18147,
											"end": 18263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18147,
											"end": 18263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18269,
											"end": 18402,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 18269,
											"end": 18402,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18312,
											"end": 18317,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18350,
											"end": 18356,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18337,
											"end": 18357,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 18328,
											"end": 18357,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18328,
											"end": 18357,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18366,
											"end": 18396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 18390,
											"end": 18395,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18366,
											"end": 18396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 18366,
											"end": 18396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18366,
											"end": 18396,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 18366,
											"end": 18396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18269,
											"end": 18402,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18269,
											"end": 18402,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18269,
											"end": 18402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18269,
											"end": 18402,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18269,
											"end": 18402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18408,
											"end": 18876,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 18408,
											"end": 18876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18473,
											"end": 18479,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18481,
											"end": 18487,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18530,
											"end": 18532,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 18518,
											"end": 18527,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18509,
											"end": 18516,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18505,
											"end": 18528,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18501,
											"end": 18533,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 18498,
											"end": 18617,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18498,
											"end": 18617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 18498,
											"end": 18617,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18536,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 18536,
											"end": 18615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 18536,
											"end": 18615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18536,
											"end": 18615,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 18536,
											"end": 18615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18498,
											"end": 18617,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 18498,
											"end": 18617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18656,
											"end": 18657,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18681,
											"end": 18734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 18726,
											"end": 18733,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18717,
											"end": 18723,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18706,
											"end": 18715,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18702,
											"end": 18724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18681,
											"end": 18734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 18681,
											"end": 18734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18681,
											"end": 18734,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 18681,
											"end": 18734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18671,
											"end": 18734,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18671,
											"end": 18734,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18627,
											"end": 18744,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18783,
											"end": 18785,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18809,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 18851,
											"end": 18858,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18842,
											"end": 18848,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18831,
											"end": 18840,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18827,
											"end": 18849,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18809,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 18809,
											"end": 18859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18809,
											"end": 18859,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 18809,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18799,
											"end": 18859,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18799,
											"end": 18859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18754,
											"end": 18869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18408,
											"end": 18876,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18408,
											"end": 18876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18408,
											"end": 18876,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18408,
											"end": 18876,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18408,
											"end": 18876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18408,
											"end": 18876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18882,
											"end": 19534,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 18882,
											"end": 19534,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18959,
											"end": 18965,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18967,
											"end": 18973,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 19016,
											"end": 19018,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19004,
											"end": 19013,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18995,
											"end": 19002,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18991,
											"end": 19014,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18987,
											"end": 19019,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 18984,
											"end": 19103,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18984,
											"end": 19103,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 18984,
											"end": 19103,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19022,
											"end": 19101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 19022,
											"end": 19101,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 19022,
											"end": 19101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19022,
											"end": 19101,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 19022,
											"end": 19101,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18984,
											"end": 19103,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 18984,
											"end": 19103,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19142,
											"end": 19143,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19167,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 19212,
											"end": 19219,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19203,
											"end": 19209,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19192,
											"end": 19201,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19188,
											"end": 19210,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19167,
											"end": 19220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 19167,
											"end": 19220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19167,
											"end": 19220,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 19167,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19157,
											"end": 19220,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19157,
											"end": 19220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19113,
											"end": 19230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19297,
											"end": 19299,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19286,
											"end": 19295,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19282,
											"end": 19300,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19269,
											"end": 19301,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 19328,
											"end": 19346,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19320,
											"end": 19326,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19317,
											"end": 19347,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19314,
											"end": 19431,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19314,
											"end": 19431,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 19314,
											"end": 19431,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19350,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 19350,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 19350,
											"end": 19429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19350,
											"end": 19429,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 19350,
											"end": 19429,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19314,
											"end": 19431,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 19314,
											"end": 19431,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19455,
											"end": 19517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 19509,
											"end": 19516,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19500,
											"end": 19506,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19489,
											"end": 19498,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19485,
											"end": 19507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19455,
											"end": 19517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 19455,
											"end": 19517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19455,
											"end": 19517,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 19455,
											"end": 19517,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19445,
											"end": 19517,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19445,
											"end": 19517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19240,
											"end": 19527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18882,
											"end": 19534,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18882,
											"end": 19534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18882,
											"end": 19534,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18882,
											"end": 19534,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18882,
											"end": 19534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18882,
											"end": 19534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19540,
											"end": 20014,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 19540,
											"end": 20014,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19608,
											"end": 19614,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19616,
											"end": 19622,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 19665,
											"end": 19667,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19653,
											"end": 19662,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19644,
											"end": 19651,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19640,
											"end": 19663,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19636,
											"end": 19668,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 19633,
											"end": 19752,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19633,
											"end": 19752,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 19633,
											"end": 19752,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19671,
											"end": 19750,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 19671,
											"end": 19750,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 19671,
											"end": 19750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19671,
											"end": 19750,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 19671,
											"end": 19750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19633,
											"end": 19752,
											"name": "tag",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 19633,
											"end": 19752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19791,
											"end": 19792,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19816,
											"end": 19869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 19861,
											"end": 19868,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19852,
											"end": 19858,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19841,
											"end": 19850,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19837,
											"end": 19859,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19816,
											"end": 19869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 19816,
											"end": 19869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19816,
											"end": 19869,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 19816,
											"end": 19869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19806,
											"end": 19869,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19806,
											"end": 19869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19762,
											"end": 19879,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19918,
											"end": 19920,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19944,
											"end": 19997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 19989,
											"end": 19996,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19980,
											"end": 19986,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19969,
											"end": 19978,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19965,
											"end": 19987,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19944,
											"end": 19997,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 19944,
											"end": 19997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19944,
											"end": 19997,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 19944,
											"end": 19997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19934,
											"end": 19997,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19934,
											"end": 19997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19889,
											"end": 20007,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19540,
											"end": 20014,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19540,
											"end": 20014,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19540,
											"end": 20014,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19540,
											"end": 20014,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19540,
											"end": 20014,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19540,
											"end": 20014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20124,
											"end": 20130,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20132,
											"end": 20138,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 20140,
											"end": 20146,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20148,
											"end": 20154,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 20156,
											"end": 20162,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20205,
											"end": 20208,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 20193,
											"end": 20202,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20184,
											"end": 20191,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 20180,
											"end": 20203,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20176,
											"end": 20209,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 20173,
											"end": 20293,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20173,
											"end": 20293,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 20173,
											"end": 20293,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20212,
											"end": 20291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 20212,
											"end": 20291,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 20212,
											"end": 20291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20212,
											"end": 20291,
											"name": "tag",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 20212,
											"end": 20291,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20173,
											"end": 20293,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 20173,
											"end": 20293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20332,
											"end": 20333,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20357,
											"end": 20410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 20402,
											"end": 20409,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 20393,
											"end": 20399,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20382,
											"end": 20391,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 20378,
											"end": 20400,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20357,
											"end": 20410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 20357,
											"end": 20410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20357,
											"end": 20410,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 20357,
											"end": 20410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20347,
											"end": 20410,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 20347,
											"end": 20410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20303,
											"end": 20420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20459,
											"end": 20461,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20485,
											"end": 20538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 20530,
											"end": 20537,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 20521,
											"end": 20527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20510,
											"end": 20519,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 20506,
											"end": 20528,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20485,
											"end": 20538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 20485,
											"end": 20538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20485,
											"end": 20538,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 20485,
											"end": 20538,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20475,
											"end": 20538,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 20475,
											"end": 20538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20430,
											"end": 20548,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20587,
											"end": 20589,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20613,
											"end": 20666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 20658,
											"end": 20665,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 20649,
											"end": 20655,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20638,
											"end": 20647,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 20634,
											"end": 20656,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20613,
											"end": 20666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 20613,
											"end": 20666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20613,
											"end": 20666,
											"name": "tag",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 20613,
											"end": 20666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20603,
											"end": 20666,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 20603,
											"end": 20666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20558,
											"end": 20676,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20715,
											"end": 20717,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 20741,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 20786,
											"end": 20793,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 20777,
											"end": 20783,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20766,
											"end": 20775,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 20762,
											"end": 20784,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20741,
											"end": 20794,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 20741,
											"end": 20794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20741,
											"end": 20794,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 20741,
											"end": 20794,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20731,
											"end": 20794,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20731,
											"end": 20794,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20686,
											"end": 20804,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20871,
											"end": 20874,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 20860,
											"end": 20869,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20856,
											"end": 20875,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20843,
											"end": 20876,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 20903,
											"end": 20921,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20895,
											"end": 20901,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20892,
											"end": 20922,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 20889,
											"end": 21006,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20889,
											"end": 21006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 20889,
											"end": 21006,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20925,
											"end": 21004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 20925,
											"end": 21004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 20925,
											"end": 21004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20925,
											"end": 21004,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 20925,
											"end": 21004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20889,
											"end": 21006,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 20889,
											"end": 21006,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21030,
											"end": 21092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 21084,
											"end": 21091,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 21075,
											"end": 21081,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21064,
											"end": 21073,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 21060,
											"end": 21082,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21030,
											"end": 21092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 21030,
											"end": 21092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21030,
											"end": 21092,
											"name": "tag",
											"source": 14,
											"value": "620"
										},
										{
											"begin": 21030,
											"end": 21092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21020,
											"end": 21092,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21020,
											"end": 21092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20814,
											"end": 21102,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 21109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21115,
											"end": 21444,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 21115,
											"end": 21444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21174,
											"end": 21180,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21223,
											"end": 21225,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21211,
											"end": 21220,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21202,
											"end": 21209,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21198,
											"end": 21221,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21194,
											"end": 21226,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21229,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 21229,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 21229,
											"end": 21308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21229,
											"end": 21308,
											"name": "tag",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 21229,
											"end": 21308,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 21191,
											"end": 21310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21349,
											"end": 21350,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21374,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 21419,
											"end": 21426,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21410,
											"end": 21416,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21399,
											"end": 21408,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 21395,
											"end": 21417,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21374,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 21374,
											"end": 21427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21374,
											"end": 21427,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 21374,
											"end": 21427,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21364,
											"end": 21427,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21364,
											"end": 21427,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21320,
											"end": 21437,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21115,
											"end": 21444,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21115,
											"end": 21444,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21115,
											"end": 21444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21115,
											"end": 21444,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21115,
											"end": 21444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21450,
											"end": 22069,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 21450,
											"end": 22069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21527,
											"end": 21533,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21535,
											"end": 21541,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21543,
											"end": 21549,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21592,
											"end": 21594,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 21580,
											"end": 21589,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21571,
											"end": 21578,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 21567,
											"end": 21590,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21563,
											"end": 21595,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 21560,
											"end": 21679,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21560,
											"end": 21679,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 21560,
											"end": 21679,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21598,
											"end": 21677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 21598,
											"end": 21677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 21598,
											"end": 21677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21598,
											"end": 21677,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 21598,
											"end": 21677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21560,
											"end": 21679,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 21560,
											"end": 21679,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21718,
											"end": 21719,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21743,
											"end": 21796,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 21788,
											"end": 21795,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 21779,
											"end": 21785,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21768,
											"end": 21777,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 21764,
											"end": 21786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21743,
											"end": 21796,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 21743,
											"end": 21796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21743,
											"end": 21796,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 21743,
											"end": 21796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21733,
											"end": 21796,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 21733,
											"end": 21796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21689,
											"end": 21806,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21845,
											"end": 21847,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21871,
											"end": 21924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 21916,
											"end": 21923,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 21907,
											"end": 21913,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21896,
											"end": 21905,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 21892,
											"end": 21914,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21871,
											"end": 21924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 21871,
											"end": 21924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21871,
											"end": 21924,
											"name": "tag",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 21871,
											"end": 21924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21861,
											"end": 21924,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21861,
											"end": 21924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21816,
											"end": 21934,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21973,
											"end": 21975,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 21999,
											"end": 22052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 22044,
											"end": 22051,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 22035,
											"end": 22041,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22024,
											"end": 22033,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 22020,
											"end": 22042,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21999,
											"end": 22052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 21999,
											"end": 22052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21999,
											"end": 22052,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 21999,
											"end": 22052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21989,
											"end": 22052,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21989,
											"end": 22052,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21944,
											"end": 22062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21450,
											"end": 22069,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21450,
											"end": 22069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21450,
											"end": 22069,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21450,
											"end": 22069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21450,
											"end": 22069,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21450,
											"end": 22069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22075,
											"end": 22255,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 22075,
											"end": 22255,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22123,
											"end": 22200,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22120,
											"end": 22121,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22113,
											"end": 22201,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22220,
											"end": 22224,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 22217,
											"end": 22218,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 22210,
											"end": 22225,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22244,
											"end": 22248,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 22241,
											"end": 22242,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22234,
											"end": 22249,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 22261,
											"end": 22581,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 22261,
											"end": 22581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22305,
											"end": 22311,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22342,
											"end": 22343,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 22336,
											"end": 22340,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22332,
											"end": 22344,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 22322,
											"end": 22344,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22322,
											"end": 22344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22389,
											"end": 22390,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 22383,
											"end": 22387,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22379,
											"end": 22391,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 22410,
											"end": 22428,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 22400,
											"end": 22481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 22400,
											"end": 22481,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22466,
											"end": 22470,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 22458,
											"end": 22464,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22454,
											"end": 22471,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 22444,
											"end": 22471,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22444,
											"end": 22471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22400,
											"end": 22481,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 22400,
											"end": 22481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22528,
											"end": 22530,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22520,
											"end": 22526,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22517,
											"end": 22531,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 22497,
											"end": 22515,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22494,
											"end": 22532,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22491,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 22491,
											"end": 22575,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22547,
											"end": 22565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 22547,
											"end": 22565,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 22547,
											"end": 22565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22547,
											"end": 22565,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 22547,
											"end": 22565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22491,
											"end": 22575,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 22491,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22312,
											"end": 22581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22261,
											"end": 22581,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22261,
											"end": 22581,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22261,
											"end": 22581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22261,
											"end": 22581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22587,
											"end": 22919,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 22587,
											"end": 22919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22708,
											"end": 22712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22746,
											"end": 22748,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 22735,
											"end": 22744,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22731,
											"end": 22749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22723,
											"end": 22749,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22723,
											"end": 22749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22759,
											"end": 22830,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 22827,
											"end": 22828,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22816,
											"end": 22825,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22812,
											"end": 22829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22803,
											"end": 22809,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22759,
											"end": 22830,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 22759,
											"end": 22830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22759,
											"end": 22830,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 22759,
											"end": 22830,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22840,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 22908,
											"end": 22910,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22897,
											"end": 22906,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22893,
											"end": 22911,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22884,
											"end": 22890,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22840,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 22840,
											"end": 22912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22840,
											"end": 22912,
											"name": "tag",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 22840,
											"end": 22912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22587,
											"end": 22919,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 22587,
											"end": 22919,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22587,
											"end": 22919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22587,
											"end": 22919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22587,
											"end": 22919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22587,
											"end": 22919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22925,
											"end": 23257,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 22925,
											"end": 23257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23046,
											"end": 23050,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23084,
											"end": 23086,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 23073,
											"end": 23082,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23069,
											"end": 23087,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23061,
											"end": 23087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23061,
											"end": 23087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 23165,
											"end": 23166,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23154,
											"end": 23163,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23150,
											"end": 23167,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23141,
											"end": 23147,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 23097,
											"end": 23168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 23097,
											"end": 23168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23178,
											"end": 23250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 23246,
											"end": 23248,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23235,
											"end": 23244,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23231,
											"end": 23249,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23222,
											"end": 23228,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23178,
											"end": 23250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 23178,
											"end": 23250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23178,
											"end": 23250,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 23178,
											"end": 23250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22925,
											"end": 23257,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 22925,
											"end": 23257,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22925,
											"end": 23257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22925,
											"end": 23257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22925,
											"end": 23257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22925,
											"end": 23257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23263,
											"end": 23443,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 23263,
											"end": 23443,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23311,
											"end": 23388,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23308,
											"end": 23309,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23301,
											"end": 23389,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23408,
											"end": 23412,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 23405,
											"end": 23406,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 23398,
											"end": 23413,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23432,
											"end": 23436,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 23429,
											"end": 23430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23422,
											"end": 23437,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 23449,
											"end": 23629,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 23449,
											"end": 23629,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23497,
											"end": 23574,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23494,
											"end": 23495,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23487,
											"end": 23575,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23594,
											"end": 23598,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 23591,
											"end": 23592,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 23584,
											"end": 23599,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23618,
											"end": 23622,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 23615,
											"end": 23616,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23608,
											"end": 23623,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 23635,
											"end": 23826,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 23635,
											"end": 23826,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23675,
											"end": 23678,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23694,
											"end": 23714,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 23712,
											"end": 23713,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23694,
											"end": 23714,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 23694,
											"end": 23714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23694,
											"end": 23714,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 23694,
											"end": 23714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23689,
											"end": 23714,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23689,
											"end": 23714,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23728,
											"end": 23748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 23746,
											"end": 23747,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23728,
											"end": 23748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 23728,
											"end": 23748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23728,
											"end": 23748,
											"name": "tag",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 23728,
											"end": 23748,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23723,
											"end": 23748,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23723,
											"end": 23748,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23771,
											"end": 23772,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23768,
											"end": 23769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23764,
											"end": 23773,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23757,
											"end": 23773,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23757,
											"end": 23773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23792,
											"end": 23795,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 23789,
											"end": 23790,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23786,
											"end": 23796,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 23783,
											"end": 23819,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 23783,
											"end": 23819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 23783,
											"end": 23819,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 23799,
											"end": 23817,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 23799,
											"end": 23817,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 23799,
											"end": 23817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23799,
											"end": 23817,
											"name": "tag",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 23799,
											"end": 23817,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23783,
											"end": 23819,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 23783,
											"end": 23819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23635,
											"end": 23826,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23635,
											"end": 23826,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23635,
											"end": 23826,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23635,
											"end": 23826,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23635,
											"end": 23826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23832,
											"end": 23973,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 23832,
											"end": 23973,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23881,
											"end": 23885,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23904,
											"end": 23907,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23896,
											"end": 23907,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23896,
											"end": 23907,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23927,
											"end": 23930,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23924,
											"end": 23925,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23917,
											"end": 23931,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23961,
											"end": 23965,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23958,
											"end": 23959,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23948,
											"end": 23966,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 23940,
											"end": 23966,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23940,
											"end": 23966,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23832,
											"end": 23973,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23832,
											"end": 23973,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23832,
											"end": 23973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23832,
											"end": 23973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23979,
											"end": 24072,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 23979,
											"end": 24072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24016,
											"end": 24022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24063,
											"end": 24065,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24058,
											"end": 24060,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 24051,
											"end": 24056,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24047,
											"end": 24061,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24043,
											"end": 24066,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24033,
											"end": 24066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23979,
											"end": 24072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23979,
											"end": 24072,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23979,
											"end": 24072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23979,
											"end": 24072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24078,
											"end": 24185,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 24078,
											"end": 24185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24122,
											"end": 24130,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24172,
											"end": 24177,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24166,
											"end": 24170,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24162,
											"end": 24178,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 24141,
											"end": 24178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24141,
											"end": 24178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24078,
											"end": 24185,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24078,
											"end": 24185,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24078,
											"end": 24185,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24078,
											"end": 24185,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24078,
											"end": 24185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24191,
											"end": 24584,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 24191,
											"end": 24584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24260,
											"end": 24266,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24310,
											"end": 24311,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 24298,
											"end": 24308,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24294,
											"end": 24312,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 24333,
											"end": 24430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 24363,
											"end": 24429,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24352,
											"end": 24361,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24333,
											"end": 24430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 24333,
											"end": 24430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24333,
											"end": 24430,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 24333,
											"end": 24430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24451,
											"end": 24490,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 24481,
											"end": 24489,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24470,
											"end": 24479,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24451,
											"end": 24490,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 24451,
											"end": 24490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24451,
											"end": 24490,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 24451,
											"end": 24490,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24439,
											"end": 24490,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 24439,
											"end": 24490,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24523,
											"end": 24527,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 24528,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 24512,
											"end": 24517,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24508,
											"end": 24529,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 24499,
											"end": 24529,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24499,
											"end": 24529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24572,
											"end": 24576,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 24562,
											"end": 24570,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24558,
											"end": 24577,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 24551,
											"end": 24556,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24548,
											"end": 24578,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 24538,
											"end": 24578,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24538,
											"end": 24578,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24267,
											"end": 24584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24267,
											"end": 24584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24191,
											"end": 24584,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24191,
											"end": 24584,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24191,
											"end": 24584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24191,
											"end": 24584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24191,
											"end": 24584,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24191,
											"end": 24584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24590,
											"end": 24650,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 24590,
											"end": 24650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24618,
											"end": 24621,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24639,
											"end": 24644,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24632,
											"end": 24644,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24632,
											"end": 24644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24590,
											"end": 24650,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24590,
											"end": 24650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24590,
											"end": 24650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24590,
											"end": 24650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24656,
											"end": 24798,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 24656,
											"end": 24798,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24706,
											"end": 24715,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24739,
											"end": 24792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 24757,
											"end": 24791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 24766,
											"end": 24790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 24784,
											"end": 24789,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24766,
											"end": 24790,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 24766,
											"end": 24790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24766,
											"end": 24790,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 24766,
											"end": 24790,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24757,
											"end": 24791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 24757,
											"end": 24791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24757,
											"end": 24791,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 24757,
											"end": 24791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24739,
											"end": 24792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 24739,
											"end": 24792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24739,
											"end": 24792,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 24739,
											"end": 24792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24726,
											"end": 24792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24726,
											"end": 24792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24656,
											"end": 24798,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24656,
											"end": 24798,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24656,
											"end": 24798,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24656,
											"end": 24798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24804,
											"end": 24879,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 24804,
											"end": 24879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24847,
											"end": 24850,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24868,
											"end": 24873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24861,
											"end": 24873,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24861,
											"end": 24873,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24804,
											"end": 24879,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24804,
											"end": 24879,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24804,
											"end": 24879,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24804,
											"end": 24879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24885,
											"end": 25154,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 24885,
											"end": 25154,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24995,
											"end": 25034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 25026,
											"end": 25033,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24995,
											"end": 25034,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 24995,
											"end": 25034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24995,
											"end": 25034,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 24995,
											"end": 25034,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25147,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 25105,
											"end": 25146,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 25129,
											"end": 25145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25105,
											"end": 25146,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 25105,
											"end": 25146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25105,
											"end": 25146,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 25105,
											"end": 25146,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25097,
											"end": 25103,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25090,
											"end": 25094,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25084,
											"end": 25095,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25147,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 25056,
											"end": 25147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25056,
											"end": 25147,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 25056,
											"end": 25147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25050,
											"end": 25054,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25043,
											"end": 25148,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 24961,
											"end": 25154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24885,
											"end": 25154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24885,
											"end": 25154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24885,
											"end": 25154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24885,
											"end": 25154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25160,
											"end": 25233,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 25160,
											"end": 25233,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25205,
											"end": 25208,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25160,
											"end": 25233,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25160,
											"end": 25233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25239,
											"end": 25428,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 25239,
											"end": 25428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25316,
											"end": 25348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 25316,
											"end": 25348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 25316,
											"end": 25348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25316,
											"end": 25348,
											"name": "tag",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 25316,
											"end": 25348,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 25415,
											"end": 25421,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25407,
											"end": 25413,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25401,
											"end": 25405,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 25357,
											"end": 25422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25422,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 25357,
											"end": 25422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25292,
											"end": 25428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25239,
											"end": 25428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25239,
											"end": 25428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25239,
											"end": 25428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25434,
											"end": 25620,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 25434,
											"end": 25620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25494,
											"end": 25614,
											"name": "tag",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 25494,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25511,
											"end": 25514,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25504,
											"end": 25509,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25501,
											"end": 25515,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 25494,
											"end": 25614,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 25494,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 25494,
											"end": 25614,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 25565,
											"end": 25604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 25602,
											"end": 25603,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25595,
											"end": 25600,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25565,
											"end": 25604,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 25565,
											"end": 25604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25565,
											"end": 25604,
											"name": "tag",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 25565,
											"end": 25604,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25538,
											"end": 25539,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 25531,
											"end": 25536,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25527,
											"end": 25540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25518,
											"end": 25540,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25518,
											"end": 25540,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25494,
											"end": 25614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 25494,
											"end": 25614,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25494,
											"end": 25614,
											"name": "tag",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 25494,
											"end": 25614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25434,
											"end": 25620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25434,
											"end": 25620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25434,
											"end": 25620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25626,
											"end": 26169,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 25626,
											"end": 26169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25727,
											"end": 25729,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 25722,
											"end": 25725,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25719,
											"end": 25730,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 25716,
											"end": 26162,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 25716,
											"end": 26162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 25716,
											"end": 26162,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 25761,
											"end": 25799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 25793,
											"end": 25798,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25761,
											"end": 25799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 25761,
											"end": 25799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25761,
											"end": 25799,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 25761,
											"end": 25799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25845,
											"end": 25874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 25863,
											"end": 25873,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25845,
											"end": 25874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 25845,
											"end": 25874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25845,
											"end": 25874,
											"name": "tag",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 25845,
											"end": 25874,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25835,
											"end": 25843,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25831,
											"end": 25875,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26028,
											"end": 26030,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26016,
											"end": 26026,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26013,
											"end": 26031,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 26010,
											"end": 26059,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26010,
											"end": 26059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 26010,
											"end": 26059,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26049,
											"end": 26057,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26034,
											"end": 26057,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26034,
											"end": 26057,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26010,
											"end": 26059,
											"name": "tag",
											"source": 14,
											"value": "678"
										},
										{
											"begin": 26010,
											"end": 26059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26072,
											"end": 26152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 26128,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 26146,
											"end": 26149,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26128,
											"end": 26150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 26128,
											"end": 26150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26128,
											"end": 26150,
											"name": "tag",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 26128,
											"end": 26150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26118,
											"end": 26126,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26114,
											"end": 26151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26101,
											"end": 26112,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26072,
											"end": 26152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 26072,
											"end": 26152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26072,
											"end": 26152,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 26072,
											"end": 26152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25731,
											"end": 26162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25731,
											"end": 26162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25716,
											"end": 26162,
											"name": "tag",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 25716,
											"end": 26162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25626,
											"end": 26169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25626,
											"end": 26169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25626,
											"end": 26169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25626,
											"end": 26169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26175,
											"end": 26292,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 26175,
											"end": 26292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26229,
											"end": 26237,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26279,
											"end": 26284,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26273,
											"end": 26277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26269,
											"end": 26285,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 26248,
											"end": 26285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26248,
											"end": 26285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26175,
											"end": 26292,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26175,
											"end": 26292,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26175,
											"end": 26292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26175,
											"end": 26292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26175,
											"end": 26292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26298,
											"end": 26467,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 26298,
											"end": 26467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26342,
											"end": 26348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26375,
											"end": 26426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 26423,
											"end": 26424,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26419,
											"end": 26425,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 26411,
											"end": 26416,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26408,
											"end": 26409,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 26404,
											"end": 26417,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 26375,
											"end": 26426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 26375,
											"end": 26426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26375,
											"end": 26426,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 26375,
											"end": 26426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26371,
											"end": 26427,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 26456,
											"end": 26460,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 26450,
											"end": 26454,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26446,
											"end": 26461,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 26436,
											"end": 26461,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26436,
											"end": 26461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26349,
											"end": 26467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26298,
											"end": 26467,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26298,
											"end": 26467,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26298,
											"end": 26467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26298,
											"end": 26467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26298,
											"end": 26467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26472,
											"end": 26767,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 26472,
											"end": 26767,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26548,
											"end": 26552,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26694,
											"end": 26723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 26719,
											"end": 26722,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26713,
											"end": 26717,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26694,
											"end": 26723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 26694,
											"end": 26723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26694,
											"end": 26723,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 26694,
											"end": 26723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26686,
											"end": 26723,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26686,
											"end": 26723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26756,
											"end": 26759,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26753,
											"end": 26754,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 26749,
											"end": 26760,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 26743,
											"end": 26747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26740,
											"end": 26761,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 26732,
											"end": 26761,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26732,
											"end": 26761,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26472,
											"end": 26767,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26472,
											"end": 26767,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26472,
											"end": 26767,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26472,
											"end": 26767,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26472,
											"end": 26767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26772,
											"end": 28167,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 26772,
											"end": 28167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26889,
											"end": 26926,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 26922,
											"end": 26925,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26889,
											"end": 26926,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 26889,
											"end": 26926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26889,
											"end": 26926,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 26889,
											"end": 26926,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26991,
											"end": 27009,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26983,
											"end": 26989,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26980,
											"end": 27010,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 26977,
											"end": 27033,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26977,
											"end": 27033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 26977,
											"end": 27033,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27013,
											"end": 27031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 27013,
											"end": 27031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 27013,
											"end": 27031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27013,
											"end": 27031,
											"name": "tag",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 27013,
											"end": 27031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26977,
											"end": 27033,
											"name": "tag",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 26977,
											"end": 27033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27057,
											"end": 27095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 27089,
											"end": 27093,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27083,
											"end": 27094,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 27057,
											"end": 27095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 27057,
											"end": 27095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27057,
											"end": 27095,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 27057,
											"end": 27095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27142,
											"end": 27209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 27202,
											"end": 27208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27194,
											"end": 27200,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27188,
											"end": 27192,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27142,
											"end": 27209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 27142,
											"end": 27209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27142,
											"end": 27209,
											"name": "tag",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 27142,
											"end": 27209,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27236,
											"end": 27237,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27260,
											"end": 27264,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27247,
											"end": 27264,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27247,
											"end": 27264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27292,
											"end": 27294,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27284,
											"end": 27290,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27281,
											"end": 27295,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 27309,
											"end": 27310,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 27304,
											"end": 27922,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27304,
											"end": 27922,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 27304,
											"end": 27922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 27304,
											"end": 27922,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27966,
											"end": 27967,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27983,
											"end": 27989,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27980,
											"end": 28057,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27980,
											"end": 28057,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 27980,
											"end": 28057,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28032,
											"end": 28041,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28027,
											"end": 28030,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 28023,
											"end": 28042,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28017,
											"end": 28043,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28008,
											"end": 28043,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28008,
											"end": 28043,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27980,
											"end": 28057,
											"name": "tag",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 27980,
											"end": 28057,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28083,
											"end": 28150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 28143,
											"end": 28149,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28136,
											"end": 28141,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28083,
											"end": 28150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 28083,
											"end": 28150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28083,
											"end": 28150,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 28083,
											"end": 28150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28077,
											"end": 28081,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28070,
											"end": 28151,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 27939,
											"end": 28161,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27274,
											"end": 28161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 27274,
											"end": 28161,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27304,
											"end": 27922,
											"name": "tag",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 27304,
											"end": 27922,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27356,
											"end": 27360,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27352,
											"end": 27361,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 27344,
											"end": 27350,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27340,
											"end": 27362,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 27390,
											"end": 27427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 27422,
											"end": 27426,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 27390,
											"end": 27427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 27390,
											"end": 27427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27390,
											"end": 27427,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 27390,
											"end": 27427,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27449,
											"end": 27450,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27463,
											"end": 27671,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 27463,
											"end": 27671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27477,
											"end": 27484,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27474,
											"end": 27475,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27471,
											"end": 27485,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 27463,
											"end": 27671,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27463,
											"end": 27671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 27463,
											"end": 27671,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27556,
											"end": 27565,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27551,
											"end": 27554,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 27547,
											"end": 27566,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27541,
											"end": 27567,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 27533,
											"end": 27539,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27526,
											"end": 27568,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 27607,
											"end": 27608,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 27599,
											"end": 27605,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27595,
											"end": 27609,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27585,
											"end": 27609,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27585,
											"end": 27609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27654,
											"end": 27656,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27643,
											"end": 27652,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27639,
											"end": 27657,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27626,
											"end": 27657,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 27626,
											"end": 27657,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27500,
											"end": 27504,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27497,
											"end": 27498,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27493,
											"end": 27505,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27488,
											"end": 27505,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27488,
											"end": 27505,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27463,
											"end": 27671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 27463,
											"end": 27671,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27463,
											"end": 27671,
											"name": "tag",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 27463,
											"end": 27671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27699,
											"end": 27705,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 27690,
											"end": 27697,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27687,
											"end": 27706,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 27684,
											"end": 27863,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27684,
											"end": 27863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 27684,
											"end": 27863,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27757,
											"end": 27766,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27752,
											"end": 27755,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 27748,
											"end": 27767,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27742,
											"end": 27768,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 27800,
											"end": 27848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 27842,
											"end": 27846,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27834,
											"end": 27840,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 27830,
											"end": 27847,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 27819,
											"end": 27828,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27800,
											"end": 27848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 27800,
											"end": 27848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27800,
											"end": 27848,
											"name": "tag",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 27800,
											"end": 27848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27792,
											"end": 27798,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27785,
											"end": 27849,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 27707,
											"end": 27863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27684,
											"end": 27863,
											"name": "tag",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 27684,
											"end": 27863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27909,
											"end": 27910,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 27905,
											"end": 27906,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 27897,
											"end": 27903,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 27893,
											"end": 27907,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 27889,
											"end": 27911,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27883,
											"end": 27887,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 27876,
											"end": 27912,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 27311,
											"end": 27922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27311,
											"end": 27922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27311,
											"end": 27922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27274,
											"end": 28161,
											"name": "tag",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 27274,
											"end": 28161,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27274,
											"end": 28161,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26864,
											"end": 28167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26864,
											"end": 28167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26864,
											"end": 28167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26772,
											"end": 28167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26772,
											"end": 28167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26772,
											"end": 28167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28173,
											"end": 28726,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 28173,
											"end": 28726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28350,
											"end": 28354,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28388,
											"end": 28391,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 28377,
											"end": 28386,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28373,
											"end": 28392,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28365,
											"end": 28392,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28365,
											"end": 28392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28402,
											"end": 28473,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 28470,
											"end": 28471,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28459,
											"end": 28468,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28455,
											"end": 28472,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28446,
											"end": 28452,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 28402,
											"end": 28473,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 28402,
											"end": 28473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28402,
											"end": 28473,
											"name": "tag",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 28402,
											"end": 28473,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28483,
											"end": 28555,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 28551,
											"end": 28553,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28540,
											"end": 28549,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28536,
											"end": 28554,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28527,
											"end": 28533,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28483,
											"end": 28555,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 28483,
											"end": 28555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28483,
											"end": 28555,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 28483,
											"end": 28555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28565,
											"end": 28637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 28633,
											"end": 28635,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 28622,
											"end": 28631,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28618,
											"end": 28636,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28609,
											"end": 28615,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28565,
											"end": 28637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 28565,
											"end": 28637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28565,
											"end": 28637,
											"name": "tag",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 28565,
											"end": 28637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28647,
											"end": 28719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 28715,
											"end": 28717,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 28704,
											"end": 28713,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28700,
											"end": 28718,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28691,
											"end": 28697,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28647,
											"end": 28719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 28647,
											"end": 28719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28647,
											"end": 28719,
											"name": "tag",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 28647,
											"end": 28719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28173,
											"end": 28726,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 28173,
											"end": 28726,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 28173,
											"end": 28726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28173,
											"end": 28726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28173,
											"end": 28726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28173,
											"end": 28726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28173,
											"end": 28726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28173,
											"end": 28726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28732,
											"end": 29366,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 28732,
											"end": 29366,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28953,
											"end": 28957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28991,
											"end": 28993,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 28980,
											"end": 28989,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28976,
											"end": 28994,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28968,
											"end": 28994,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28968,
											"end": 28994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29040,
											"end": 29049,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29034,
											"end": 29038,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29030,
											"end": 29050,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29026,
											"end": 29027,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29015,
											"end": 29024,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29011,
											"end": 29028,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29004,
											"end": 29051,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29068,
											"end": 29176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 29171,
											"end": 29175,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29162,
											"end": 29168,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 29068,
											"end": 29176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 29068,
											"end": 29176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29068,
											"end": 29176,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 29068,
											"end": 29176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29060,
											"end": 29176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29060,
											"end": 29176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29223,
											"end": 29232,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29217,
											"end": 29221,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29213,
											"end": 29233,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29208,
											"end": 29210,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29197,
											"end": 29206,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29193,
											"end": 29211,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29186,
											"end": 29234,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29251,
											"end": 29359,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 29354,
											"end": 29358,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29345,
											"end": 29351,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 29251,
											"end": 29359,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 29251,
											"end": 29359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29251,
											"end": 29359,
											"name": "tag",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 29251,
											"end": 29359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29359,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29243,
											"end": 29359,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28732,
											"end": 29366,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 28732,
											"end": 29366,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 28732,
											"end": 29366,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28732,
											"end": 29366,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28732,
											"end": 29366,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28732,
											"end": 29366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29372,
											"end": 29470,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 29372,
											"end": 29470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29423,
											"end": 29429,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29457,
											"end": 29462,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29451,
											"end": 29463,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 29441,
											"end": 29463,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29441,
											"end": 29463,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29372,
											"end": 29470,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29372,
											"end": 29470,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29372,
											"end": 29470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29372,
											"end": 29470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29476,
											"end": 29644,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 29476,
											"end": 29644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29559,
											"end": 29570,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29593,
											"end": 29599,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29588,
											"end": 29591,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29581,
											"end": 29600,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29633,
											"end": 29637,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29628,
											"end": 29631,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29624,
											"end": 29638,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29609,
											"end": 29638,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29609,
											"end": 29638,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29476,
											"end": 29644,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 29476,
											"end": 29644,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29476,
											"end": 29644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29476,
											"end": 29644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29476,
											"end": 29644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29650,
											"end": 30023,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 29650,
											"end": 30023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29736,
											"end": 29739,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29764,
											"end": 29802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 29796,
											"end": 29801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29764,
											"end": 29802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 29764,
											"end": 29802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29764,
											"end": 29802,
											"name": "tag",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 29764,
											"end": 29802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29818,
											"end": 29888,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 29881,
											"end": 29887,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29876,
											"end": 29879,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 29818,
											"end": 29888,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 29818,
											"end": 29888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29818,
											"end": 29888,
											"name": "tag",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 29818,
											"end": 29888,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29811,
											"end": 29888,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 29811,
											"end": 29888,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29897,
											"end": 29962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 29955,
											"end": 29961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29950,
											"end": 29953,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 29943,
											"end": 29947,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29936,
											"end": 29941,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 29932,
											"end": 29948,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29897,
											"end": 29962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 29897,
											"end": 29962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29897,
											"end": 29962,
											"name": "tag",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 29897,
											"end": 29962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29987,
											"end": 30016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 30009,
											"end": 30015,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29987,
											"end": 30016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 29987,
											"end": 30016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29987,
											"end": 30016,
											"name": "tag",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 29987,
											"end": 30016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29982,
											"end": 29985,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 29978,
											"end": 30017,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29971,
											"end": 30017,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29971,
											"end": 30017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29740,
											"end": 30023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29650,
											"end": 30023,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 29650,
											"end": 30023,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29650,
											"end": 30023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29650,
											"end": 30023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29650,
											"end": 30023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30252,
											"end": 30256,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30290,
											"end": 30293,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 30279,
											"end": 30288,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30275,
											"end": 30294,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30267,
											"end": 30294,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30267,
											"end": 30294,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30304,
											"end": 30375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 30372,
											"end": 30373,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30361,
											"end": 30370,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30357,
											"end": 30374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30348,
											"end": 30354,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 30304,
											"end": 30375,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 30304,
											"end": 30375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30304,
											"end": 30375,
											"name": "tag",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 30304,
											"end": 30375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30385,
											"end": 30457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 30453,
											"end": 30455,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30442,
											"end": 30451,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30438,
											"end": 30456,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30429,
											"end": 30435,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 30385,
											"end": 30457,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 30385,
											"end": 30457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30385,
											"end": 30457,
											"name": "tag",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 30385,
											"end": 30457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30467,
											"end": 30539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "720"
										},
										{
											"begin": 30535,
											"end": 30537,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 30524,
											"end": 30533,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30520,
											"end": 30538,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30511,
											"end": 30517,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 30467,
											"end": 30539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 30467,
											"end": 30539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30467,
											"end": 30539,
											"name": "tag",
											"source": 14,
											"value": "720"
										},
										{
											"begin": 30467,
											"end": 30539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30549,
											"end": 30621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 30617,
											"end": 30619,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 30606,
											"end": 30615,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30602,
											"end": 30620,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30593,
											"end": 30599,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 30549,
											"end": 30621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 30549,
											"end": 30621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30549,
											"end": 30621,
											"name": "tag",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 30549,
											"end": 30621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30669,
											"end": 30678,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30663,
											"end": 30667,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30659,
											"end": 30679,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30653,
											"end": 30656,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 30642,
											"end": 30651,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30638,
											"end": 30657,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30631,
											"end": 30680,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30697,
											"end": 30773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 30768,
											"end": 30772,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30759,
											"end": 30765,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 30697,
											"end": 30773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 30697,
											"end": 30773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30697,
											"end": 30773,
											"name": "tag",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 30697,
											"end": 30773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30689,
											"end": 30773,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30689,
											"end": 30773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30029,
											"end": 30780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30786,
											"end": 30927,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 30786,
											"end": 30927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30842,
											"end": 30847,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30873,
											"end": 30879,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30867,
											"end": 30880,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 30858,
											"end": 30880,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30858,
											"end": 30880,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30889,
											"end": 30921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 30915,
											"end": 30920,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30889,
											"end": 30921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 30889,
											"end": 30921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30889,
											"end": 30921,
											"name": "tag",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 30889,
											"end": 30921,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30786,
											"end": 30927,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 30786,
											"end": 30927,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30786,
											"end": 30927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30786,
											"end": 30927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30786,
											"end": 30927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30933,
											"end": 31282,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 30933,
											"end": 31282,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31002,
											"end": 31008,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31051,
											"end": 31053,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31039,
											"end": 31048,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31030,
											"end": 31037,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 31026,
											"end": 31049,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 31022,
											"end": 31054,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 31019,
											"end": 31138,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 31019,
											"end": 31138,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 31019,
											"end": 31138,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 31057,
											"end": 31136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "727"
										},
										{
											"begin": 31057,
											"end": 31136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 31057,
											"end": 31136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31057,
											"end": 31136,
											"name": "tag",
											"source": 14,
											"value": "727"
										},
										{
											"begin": 31057,
											"end": 31136,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31019,
											"end": 31138,
											"name": "tag",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 31019,
											"end": 31138,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31177,
											"end": 31178,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31202,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 31257,
											"end": 31264,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 31248,
											"end": 31254,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31237,
											"end": 31246,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 31233,
											"end": 31255,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31202,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 31202,
											"end": 31265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31202,
											"end": 31265,
											"name": "tag",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 31202,
											"end": 31265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31192,
											"end": 31265,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31192,
											"end": 31265,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31148,
											"end": 31275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30933,
											"end": 31282,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 30933,
											"end": 31282,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30933,
											"end": 31282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30933,
											"end": 31282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30933,
											"end": 31282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31611,
											"end": 31615,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31649,
											"end": 31652,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 31638,
											"end": 31647,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31634,
											"end": 31653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31626,
											"end": 31653,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31626,
											"end": 31653,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31663,
											"end": 31734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 31731,
											"end": 31732,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31720,
											"end": 31729,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31716,
											"end": 31733,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31707,
											"end": 31713,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 31663,
											"end": 31734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 31663,
											"end": 31734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31663,
											"end": 31734,
											"name": "tag",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 31663,
											"end": 31734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31744,
											"end": 31816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 31812,
											"end": 31814,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31801,
											"end": 31810,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31797,
											"end": 31815,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31788,
											"end": 31794,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 31744,
											"end": 31816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 31744,
											"end": 31816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31744,
											"end": 31816,
											"name": "tag",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 31744,
											"end": 31816,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31863,
											"end": 31872,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31857,
											"end": 31861,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31853,
											"end": 31873,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 31848,
											"end": 31850,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 31837,
											"end": 31846,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31833,
											"end": 31851,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31826,
											"end": 31874,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31891,
											"end": 31999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 31994,
											"end": 31998,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31985,
											"end": 31991,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 31891,
											"end": 31999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 31891,
											"end": 31999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31891,
											"end": 31999,
											"name": "tag",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 31891,
											"end": 31999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31883,
											"end": 31999,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31883,
											"end": 31999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32046,
											"end": 32055,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32040,
											"end": 32044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32036,
											"end": 32056,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 32031,
											"end": 32033,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 32020,
											"end": 32029,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32016,
											"end": 32034,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32009,
											"end": 32057,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32074,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 32177,
											"end": 32181,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32168,
											"end": 32174,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 32074,
											"end": 32182,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 32074,
											"end": 32182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32074,
											"end": 32182,
											"name": "tag",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 32074,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32066,
											"end": 32182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32066,
											"end": 32182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32230,
											"end": 32239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32224,
											"end": 32228,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32220,
											"end": 32240,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 32214,
											"end": 32217,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 32203,
											"end": 32212,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32199,
											"end": 32218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32192,
											"end": 32241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32258,
											"end": 32334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 32329,
											"end": 32333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32320,
											"end": 32326,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 32258,
											"end": 32334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 32258,
											"end": 32334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32258,
											"end": 32334,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 32258,
											"end": 32334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32250,
											"end": 32334,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32250,
											"end": 32334,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31288,
											"end": 32341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/common/CapybaraNFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,bytes)": "b510391f",
							"mintBatch(address,uint256,bytes)": "31f0e6c8",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/common/CapybaraNFT.sol\":\"CapybaraNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/common/CapybaraNFT.sol\":{\"keccak256\":\"0xeaf0c297d3756728cc5ae50afe90c416550cdc4e87a880f1986ff3c13417018f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bbdfc76b0ef32fb7c540fd88d257c4b00f885e09efe319f2d1ffe46ac626c66\",\"dweb:/ipfs/QmQcUNZFnpY8XNJeEWcU32ctHVPteEnMTWNcqFvwfy12Ej\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "contracts/common/CapybaraNFT.sol:CapybaraNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "contracts/common/CapybaraNFT.sol:CapybaraNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "contracts/common/CapybaraNFT.sol:CapybaraNFT",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/common/CapybaraNFT.sol:CapybaraNFT",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 3022,
								"contract": "contracts/common/CapybaraNFT.sol:CapybaraNFT",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1779
						],
						"Context": [
							1809
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							1943
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1596
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1955
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1459,
							"src": "135:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "143:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1501,
							"src": "176:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1500,
										"src": "184:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1597,
							"src": "233:73:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1596,
										"src": "241:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1810,
							"src": "307:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1809,
										"src": "315:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1944,
							"src": "356:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1955,
										"src": "364:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 296,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1943,
										"src": "373:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1780,
							"src": "426:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1779,
										"src": "434:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 285,
							"src": "473:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "481:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"756:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1809,
										"src": "756:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"765:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1943,
										"src": "765:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "773:8:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1596,
										"src": "783:19:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 284,
										"src": "804:14:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								284,
								1596,
								1458,
								1943,
								1955,
								1809
							],
							"name": "ERC1155",
							"nameLocation": "745:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 316,
									"libraryName": {
										"id": 313,
										"name": "Arrays",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1779,
										"src": "831:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:2",
									"typeName": {
										"baseType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 315,
										"nodeType": "ArrayTypeName",
										"src": "842:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 320,
									"libraryName": {
										"id": 317,
										"name": "Arrays",
										"nameLocations": [
											"863:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1779,
										"src": "863:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:2",
									"typeName": {
										"baseType": {
											"id": 318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 319,
										"nodeType": "ArrayTypeName",
										"src": "874:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "890:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 325,
										"keyName": "id",
										"keyNameLocation": "906:2:2",
										"keyType": {
											"id": 321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"keyName": "account",
											"keyNameLocation": "928:7:2",
											"keyType": {
												"id": 322,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "973:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 331,
										"keyName": "account",
										"keyNameLocation": "989:7:2",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"keyName": "operator",
											"keyNameLocation": "1016:8:2",
											"keyType": {
												"id": 328,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 329,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1182:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1283:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 340,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1293:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:2"
									},
									"scope": 1335,
									"src": "1251:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1942,
										1954
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1488:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1517:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 358,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "1537:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 357,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1458",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1574:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 364,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "1594:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1596_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1596_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 363,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1596",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1666:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 369,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1335_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1942,
															"src": "1642:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 355,
												"id": 374,
												"nodeType": "Return",
												"src": "1498:180:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 350,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1943,
												"src": "1456:6:2"
											},
											{
												"id": 351,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1955,
												"src": "1464:7:2"
											}
										],
										"src": "1447:25:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1407:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1482:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:2"
									},
									"scope": 1335,
									"src": "1380:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1595
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2159:28:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "2169:11:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:2"
									},
									"scope": 1335,
									"src": "2084:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2333:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2350:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 399,
														"indexExpression": {
															"id": 398,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2360:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 401,
													"indexExpression": {
														"id": 400,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 402,
												"nodeType": "Return",
												"src": "2343:29:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:2",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2266:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2283:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:2"
									},
									"scope": 1335,
									"src": "2247:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2678:410:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 417,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2692:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 419,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "2688:121:2",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "2723:86:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 423,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "2770:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 425,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "2782:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "2744:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 428,
															"nodeType": "RevertStatement",
															"src": "2737:61:2"
														}
													]
												}
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2819:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 433,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 439,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2866:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 436,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 437,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:2"
											},
											{
												"body": {
													"id": 469,
													"nodeType": "Block",
													"src": "2939:112:2",
													"statements": [
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 454,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2953:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 456,
																	"indexExpression": {
																		"id": 455,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "2967:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 460,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3010:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 458,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 408,
																					"src": "2982:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1778,
																				"src": "2982:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 464,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3037:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 462,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "3014:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1765,
																				"src": "3014:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2972:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2913:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 448,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2917:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"initializationExpression": {
													"assignments": [
														444
													],
													"declarations": [
														{
															"constant": false,
															"id": 444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 470,
															"src": "2898:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 446,
													"initialValue": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:2",
														"subExpression": {
															"id": 451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2936:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:2"
											},
											{
												"expression": {
													"id": 471,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3068:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 416,
												"id": 472,
												"nodeType": "Return",
												"src": "3061:20:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2569:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2604:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2660:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:2"
									},
									"scope": 1335,
									"src": "2536:552:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "3231:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "3260:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3274:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3284:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3241:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:2"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3183:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3201:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:2"
									},
									"scope": 1335,
									"src": "3156:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3463:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 500,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3480:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 504,
													"indexExpression": {
														"id": 503,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 505,
												"nodeType": "Return",
												"src": "3473:44:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3410:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3457:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:2"
									},
									"scope": 1335,
									"src": "3367:157:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3704:238:2",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "3714:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 521,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 523,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "3731:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3757:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 527,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "3765:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 530,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3793:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3799:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "3776:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "3753:129:2",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "3808:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3858:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 537,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3866:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3829:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "3822:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3915:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "3891:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:2"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3617:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3631:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3643:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3670:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:2"
									},
									"scope": 1335,
									"src": "3591:351:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4198:245:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "4208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 567,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "4225:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 573,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 576,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "4287:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 577,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4293:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 575,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4270:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "4247:129:2",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "4302:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4352:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 583,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4360:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 581,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4323:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "4316:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4414:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4418:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 592,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4423:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4431:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4385:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4096:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4126:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 560,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4159:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:2"
									},
									"scope": 1335,
									"src": "4014:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5251:1174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 611,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5265:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 613,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5279:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "5261:117:2",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "5294:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 617,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5341:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 619,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "5353:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "5315:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "5308:59:2"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5388:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "5407:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:2"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "5471:650:2",
													"statements": [
														{
															"assignments": [
																642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 642,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5485:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 647,
															"initialValue": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5521:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 643,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "5498:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1765,
																	"src": "5498:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:2"
														},
														{
															"assignments": [
																649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 649,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5537:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"initialValue": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5579:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 650,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "5553:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1765,
																	"src": "5553:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5600:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 656,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "IfStatement",
															"src": "5596:420:2",
															"trueBody": {
																"id": 692,
																"nodeType": "Block",
																"src": "5620:396:2",
																"statements": [
																	{
																		"assignments": [
																			662
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 662,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 692,
																				"src": "5638:19:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 668,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 663,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 326,
																					"src": "5660:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 665,
																				"indexExpression": {
																					"id": 664,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "5670:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 667,
																			"indexExpression": {
																				"id": 666,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "5674:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "5701:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 670,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "5715:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 680,
																		"nodeType": "IfStatement",
																		"src": "5697:129:2",
																		"trueBody": {
																			"id": 679,
																			"nodeType": "Block",
																			"src": "5722:104:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 673,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "5778:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 674,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 662,
																								"src": "5784:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 675,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 649,
																								"src": "5797:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 676,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5804:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 672,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 249,
																							"src": "5751:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																								"typeString": "function (address,uint256,uint256,uint256) pure returns (error)"
																							}
																						},
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_error",
																							"typeString": "error"
																						}
																					},
																					"id": 678,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:2"
																				}
																			]
																		}
																	},
																	{
																		"id": 691,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 681,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 326,
																								"src": "5942:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 684,
																							"indexExpression": {
																								"id": 682,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5952:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 685,
																						"indexExpression": {
																							"id": 683,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 600,
																							"src": "5956:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 686,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 662,
																							"src": "5964:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 687,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 649,
																							"src": "5978:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 690,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:2"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6034:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 709,
															"nodeType": "IfStatement",
															"src": "6030:81:2",
															"trueBody": {
																"id": 708,
																"nodeType": "Block",
																"src": "6052:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 700,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "6070:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 703,
																					"indexExpression": {
																						"id": 701,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "6080:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 704,
																				"indexExpression": {
																					"id": 702,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6084:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 705,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "6091:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 707,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5450:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 635,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5454:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"initializationExpression": {
													"assignments": [
														631
													],
													"declarations": [
														{
															"constant": false,
															"id": 631,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 711,
															"src": "5435:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 630,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 633,
													"initialValue": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:2",
														"subExpression": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5468:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 640,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 712,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6135:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "6343:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6376:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6386:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 742,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6392:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6396:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 744,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6401:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 739,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6362:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "6357:51:2"
														}
													]
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "6131:288:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "6152:185:2",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6166:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 722,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 718,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6179:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1765,
																	"src": "6179:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:2"
														},
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6218:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 729,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 725,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6234:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1765,
																	"src": "6234:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6296:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 732,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6306:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 733,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6312:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 734,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "6316:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "6320:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 730,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6281:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "EmitStatement",
															"src": "6276:50:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5161:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5187:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5209:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:2"
									},
									"scope": 1335,
									"src": "5144:1281:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7195:499:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "7223:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 770,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 766,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "7205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "7249:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 774,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "7245:443:2",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "7267:421:2",
													"statements": [
														{
															"assignments": [
																780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 823,
																	"src": "7281:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 783,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 781,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1791,
																	"src": "7300:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "7330:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 821,
																"nodeType": "Block",
																"src": "7571:107:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7625:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7635:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 815,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7641:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 816,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7645:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 817,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7650:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 818,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7658:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 812,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "7589:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 820,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:2"
																	}
																]
															},
															"id": 822,
															"nodeType": "IfStatement",
															"src": "7326:352:2",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7347:218:2",
																"statements": [
																	{
																		"assignments": [
																			789
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 789,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7365:10:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 788,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 794,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 790,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7378:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1765,
																				"src": "7378:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:2"
																	},
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7421:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 801,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 797,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7437:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1765,
																				"src": "7437:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7514:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 804,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7524:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 805,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7530:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7534:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 807,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "7538:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 808,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7545:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 802,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "7483:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:2",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7071:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7091:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7121:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 760,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7154:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:2"
									},
									"scope": 1335,
									"src": "7004:690:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "8259:355:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "8273:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "8269:88:2",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "8291:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8312:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "8305:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "8370:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "8366:88:2",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "8390:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 861,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8411:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "8404:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													874,
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8464:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8486:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 875,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 879,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8532:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8536:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8513:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 884,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8589:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 887,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "8602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 883,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "8552:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:2"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:2",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8204:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8216:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8231:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:2"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:2"
									},
									"scope": 1335,
									"src": "8151:463:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "9194:266:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9208:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 909,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "9204:88:2",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "9226:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "9247:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 920,
															"nodeType": "RevertStatement",
															"src": "9240:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9305:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "9301:88:2",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "9325:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 929,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "9346:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 935,
															"nodeType": "RevertStatement",
															"src": "9339:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9425:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9431:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9435:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9440:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "9398:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:2"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9078:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9098:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 898,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9128:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9161:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:2"
									},
									"scope": 1335,
									"src": "9015:445:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "10338:30:2",
										"statements": [
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10348:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "10355:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:2"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10299:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:2"
									},
									"scope": 1335,
									"src": "10282:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10828:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "10842:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "10838:88:2",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "10860:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10881:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "10874:41:2"
														}
													]
												}
											},
											{
												"assignments": [
													989,
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10936:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10958:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "11008:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "10985:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11063:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "11067:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "11072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11024:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:2",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10773:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10785:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10800:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:2"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:2"
									},
									"scope": 1335,
									"src": "10746:346:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11630:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "11644:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "11640:88:2",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "11662:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "11683:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1036,
															"nodeType": "RevertStatement",
															"src": "11676:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "11776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "11780:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "11785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "11793:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1039,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11737:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:2"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11543:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11555:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1017,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11602:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:2"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:2"
									},
									"scope": 1335,
									"src": "11523:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "12164:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12178:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1062,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "12174:88:2",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "12198:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1068,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1067,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12219:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1073,
															"nodeType": "RevertStatement",
															"src": "12212:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													1080,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12272:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1079,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12294:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1081,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "12340:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "12344:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "12321:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "12387:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "12405:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1096,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12410:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1089,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12360:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:2"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:2",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12128:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12140:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:2"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:2"
									},
									"scope": 1335,
									"src": "12099:329:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "12874:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "12888:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "12884:88:2",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "12908:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1120,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1119,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12929:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "12922:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "13008:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13026:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1135,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "13031:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1128,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12981:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:2"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12804:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12818:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12840:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:2"
									},
									"scope": 1335,
									"src": "12784:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "13361:222:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "13375:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "13371:94:2",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "13399:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "13420:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "13413:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1165,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "13474:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1168,
															"indexExpression": {
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "13493:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1167,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13500:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "13512:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "13550:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13557:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13567:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1173,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "13535:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "13530:46:2"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13296:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13311:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13329:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:2"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:2"
									},
									"scope": 1335,
									"src": "13268:315:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "13953:782:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1196,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "13967:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "13963:766:2",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "13987:742:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1225,
																		"nodeType": "Block",
																		"src": "14103:206:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1214,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "14125:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1215,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "14137:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1481,
																							"src": "14137:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1224,
																				"nodeType": "IfStatement",
																				"src": "14121:174:2",
																				"trueBody": {
																					"id": 1223,
																					"nodeType": "Block",
																					"src": "14182:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1220,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14273:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1219,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14250:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1222,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1226,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1213,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1212,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1226,
																				"src": "14086:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1211,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:2"
																	},
																	"src": "14077:232:2"
																},
																{
																	"block": {
																		"id": 1242,
																		"nodeType": "Block",
																		"src": "14338:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1230,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1228,
																							"src": "14360:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1240,
																					"nodeType": "Block",
																					"src": "14515:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "14601:86:2",
																								"nodeType": "YulBlock",
																								"src": "14601:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "14638:2:2",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "14642:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "14634:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:2"
																													},
																													"nativeSrc": "14634:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "14657:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "14651:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:2"
																													},
																													"nativeSrc": "14651:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "14627:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:2"
																											},
																											"nativeSrc": "14627:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:2"
																										},
																										"nativeSrc": "14627:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1239,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:2"
																						}
																					]
																				},
																				"id": 1241,
																				"nodeType": "IfStatement",
																				"src": "14356:349:2",
																				"trueBody": {
																					"id": 1238,
																					"nodeType": "Block",
																					"src": "14380:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1235,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14487:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1234,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14464:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1237,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1243,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1229,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1228,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1243,
																				"src": "14317:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1227,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:2"
																	},
																	"src": "14310:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "14044:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "14054:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "14060:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "14064:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "14071:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1202,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "14022:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1201,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "14005:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1481,
																	"src": "14005:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1244,
															"nodeType": "TryStatement",
															"src": "14001:718:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:2",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13810:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13836:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13878:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13921:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:2"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:2"
									},
									"scope": 1335,
									"src": "13761:974:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "15140:824:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1266,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "15154:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "15150:808:2",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "15174:784:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1295,
																		"nodeType": "Block",
																		"src": "15327:211:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1284,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "15349:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1285,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "15361:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1499,
																							"src": "15361:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1294,
																				"nodeType": "IfStatement",
																				"src": "15345:179:2",
																				"trueBody": {
																					"id": 1293,
																					"nodeType": "Block",
																					"src": "15411:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1290,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15502:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1289,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15479:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1291,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1292,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1296,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1283,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1282,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1296,
																				"src": "15297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1281,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:2"
																	},
																	"src": "15271:267:2"
																},
																{
																	"block": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "15567:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1300,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "15589:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1310,
																					"nodeType": "Block",
																					"src": "15744:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "15830:86:2",
																								"nodeType": "YulBlock",
																								"src": "15830:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "15867:2:2",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "15871:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "15863:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:2"
																													},
																													"nativeSrc": "15863:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "15886:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "15880:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:2"
																													},
																													"nativeSrc": "15880:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "15856:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:2"
																											},
																											"nativeSrc": "15856:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:2"
																										},
																										"nativeSrc": "15856:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1309,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:2"
																						}
																					]
																				},
																				"id": 1311,
																				"nodeType": "IfStatement",
																				"src": "15585:349:2",
																				"trueBody": {
																					"id": 1308,
																					"nodeType": "Block",
																					"src": "15609:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1305,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15716:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1304,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15693:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1307,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1313,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1299,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1298,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1313,
																				"src": "15546:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1297,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:2"
																	},
																	"src": "15539:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "15236:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "15246:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "15252:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1278,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "15257:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "15265:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1272,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "15209:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1271,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "15192:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1499,
																	"src": "15192:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1314,
															"nodeType": "TryStatement",
															"src": "15188:760:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:2",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "14977:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15045:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15075:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15108:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:2"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:2"
									},
									"scope": 1335,
									"src": "14923:1041:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "16238:691:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16300:623:2",
													"nodeType": "YulBlock",
													"src": "16300:623:2",
													"statements": [
														{
															"nativeSrc": "16358:21:2",
															"nodeType": "YulAssignment",
															"src": "16358:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16374:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16368:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:2"
																},
																"nativeSrc": "16368:11:2",
																"nodeType": "YulFunctionCall",
																"src": "16368:11:2"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "16358:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16436:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16444:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16429:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:2"
																},
																"nativeSrc": "16429:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16429:17:2"
															},
															"nativeSrc": "16429:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "16567:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16575:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16563:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:2"
																		},
																		"nativeSrc": "16563:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:2"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "16582:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16556:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:2"
																},
																"nativeSrc": "16556:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16556:35:2"
															},
															"nativeSrc": "16556:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:2"
														},
														{
															"nativeSrc": "16682:27:2",
															"nodeType": "YulAssignment",
															"src": "16682:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "16696:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16704:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16692:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:2"
																},
																"nativeSrc": "16692:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16692:17:2"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "16682:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "16729:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16737:1:2",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16722:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:2"
																},
																"nativeSrc": "16722:17:2",
																"nodeType": "YulFunctionCall",
																"src": "16722:17:2"
															},
															"nativeSrc": "16722:17:2",
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16763:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16771:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:2"
																		},
																		"nativeSrc": "16759:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:2"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "16778:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16752:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:2"
																},
																"nativeSrc": "16752:35:2",
																"nodeType": "YulFunctionCall",
																"src": "16752:35:2"
															},
															"nativeSrc": "16752:35:2",
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16889:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "16899:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16907:4:2",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16895:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:2"
																		},
																		"nativeSrc": "16895:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16882:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:2"
																},
																"nativeSrc": "16882:31:2",
																"nodeType": "YulFunctionCall",
																"src": "16882:31:2"
															},
															"nativeSrc": "16882:31:2",
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:2",
														"valueSize": 1
													}
												],
												"id": 1332,
												"nodeType": "InlineAssembly",
												"src": "16291:632:2"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:2",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16117:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:2"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16188:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1325,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1326,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16213:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1328,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1329,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:2"
									},
									"scope": 1335,
									"src": "16080:849:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1336,
							"src": "727:16204:2",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "109:16823:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC165": [
							1955
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 1956,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1338,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1955,
										"src": "144:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1341,
										"name": "IERC165",
										"nameLocations": [
											"358:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1955,
										"src": "358:7:3"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								1955
							],
							"name": "IERC1155",
							"nameLocation": "346:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1355,
									"name": "TransferSingle",
									"nameLocation": "508:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "523:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "549:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "571:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "591:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:3"
									},
									"src": "502:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1370,
									"name": "TransferBatch",
									"nameLocation": "779:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "802:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "836:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "866:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "894:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "894:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "917:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "917:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:3"
									},
									"src": "773:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1379,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1119:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1144:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1170:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:3"
									},
									"src": "1098:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1386,
									"name": "URI",
									"nameLocation": "1545:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1549:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1563:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:3"
									},
									"src": "1539:44:3"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1785:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1802:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:3"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1837:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:3"
									},
									"scope": 1458,
									"src": "1766:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2078:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2115:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2167:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:3"
									},
									"scope": 1458,
									"src": "2045:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2471:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2489:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:3"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:3"
									},
									"scope": 1458,
									"src": "2444:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2685:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2702:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:3"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2743:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:3"
									},
									"scope": 1458,
									"src": "2659:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3696:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3722:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3734:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3749:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:3"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:3"
									},
									"scope": 1458,
									"src": "3670:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4644:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4666:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4686:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4718:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1450,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1451,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4753:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:3"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:3"
									},
									"scope": 1458,
									"src": "4604:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "336:4454:3",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "110:4681:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1955
						]
					},
					"id": 1501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1501,
							"sourceUnit": 1956,
							"src": "144:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1955,
										"src": "152:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1464,
										"name": "IERC165",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1955,
										"src": "357:7:4"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1500,
							"linearizedBaseContracts": [
								1500,
								1955
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1238:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1264:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1286:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1306:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1329:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1373:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:4"
									},
									"scope": 1500,
									"src": "1202:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2427:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2453:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2475:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1487,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1488,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2507:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2542:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2586:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:4"
									},
									"scope": 1500,
									"src": "2386:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1501,
							"src": "327:2269:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
					"exportedSymbols": {
						"ERC1155": [
							1335
						],
						"ERC1155Burnable": [
							1580
						]
					},
					"id": 1581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1581,
							"sourceUnit": 1336,
							"src": "154:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1503,
										"name": "ERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1335,
										"src": "162:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1506,
										"name": "ERC1155",
										"nameLocations": [
											"380:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "380:7:5"
									},
									"id": 1507,
									"nodeType": "InheritanceSpecifier",
									"src": "380:7:5"
								}
							],
							"canonicalName": "ERC1155Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1505,
								"nodeType": "StructuredDocumentation",
								"src": "195:147:5",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use."
							},
							"fullyImplemented": true,
							"id": 1580,
							"linearizedBaseContracts": [
								1580,
								1335,
								284,
								1596,
								1458,
								1943,
								1955,
								1809
							],
							"name": "ERC1155Burnable",
							"nameLocation": "361:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "467:208:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "481:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1517,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "492:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "492:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "481:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "508:40:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1521,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "526:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1522,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1791,
																		"src": "535:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "535:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1520,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "509:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "509:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "481:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "477:156:5",
												"trueBody": {
													"id": 1533,
													"nodeType": "Block",
													"src": "550:83:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1528,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "600:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "600:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1530,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "614:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1527,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "571:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "571:51:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1532,
															"nodeType": "RevertStatement",
															"src": "564:58:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1536,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "649:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "658:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1538,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "662:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1535,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "643:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "643:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "643:25:5"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "403:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "416:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "408:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "433:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "425:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "445:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "437:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:44:5"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:0:5"
									},
									"scope": 1580,
									"src": "394:281:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "779:215:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1553,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "793:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1554,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "804:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "793:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "820:40:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1558,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "838:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1559,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1791,
																		"src": "847:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "847:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1557,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "821:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "793:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1571,
												"nodeType": "IfStatement",
												"src": "789:156:5",
												"trueBody": {
													"id": 1570,
													"nodeType": "Block",
													"src": "862:83:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1565,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "912:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "912:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1567,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1544,
																		"src": "926:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1564,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "883:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "883:51:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1569,
															"nodeType": "RevertStatement",
															"src": "876:58:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1573,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "966:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "975:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1575,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "980:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1572,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "955:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "955:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "955:32:5"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "690:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "708:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "700:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "734:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "717:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1545,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "717:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1546,
													"nodeType": "ArrayTypeName",
													"src": "717:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "756:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "739:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1548,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1549,
													"nodeType": "ArrayTypeName",
													"src": "739:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:64:5"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:5"
									},
									"scope": 1580,
									"src": "681:313:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1581,
							"src": "343:653:5",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "128:869:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC1155MetadataURI": [
							1596
						]
					},
					"id": 1597,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1597,
							"sourceUnit": 1459,
							"src": "158:41:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1583,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "166:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1586,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "399:8:6"
									},
									"id": 1587,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:6"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1585,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:6",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1596,
							"linearizedBaseContracts": [
								1596,
								1458,
								1955
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:6",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "624:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:6"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "659:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1592,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:6"
									},
									"scope": 1596,
									"src": "611:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1597,
							"src": "366:310:6",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "132:545:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1779
						],
						"Math": [
							3009
						],
						"StorageSlot": [
							1919
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1598,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1600,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 1920,
							"src": "126:46:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1599,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1919,
										"src": "134:11:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1602,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 3010,
							"src": "173:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1601,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3009,
										"src": "181:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1603,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:7",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "Arrays",
							"nameLocation": "284:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1606,
									"libraryName": {
										"id": 1604,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1919,
										"src": "303:11:7"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:7",
									"typeName": {
										"id": 1605,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "843:834:7",
										"statements": [
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "853:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1620,
												"initialValue": {
													"hexValue": "30",
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:7"
											},
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "878:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"expression": {
														"id": 1623,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "893:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1626,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "920:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1632,
												"nodeType": "IfStatement",
												"src": "916:48:7",
												"trueBody": {
													"id": 1631,
													"nodeType": "Block",
													"src": "931:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1616,
															"id": 1630,
															"nodeType": "Return",
															"src": "945:8:7"
														}
													]
												}
											},
											{
												"body": {
													"id": 1664,
													"nodeType": "Block",
													"src": "993:423:7",
													"statements": [
														{
															"assignments": [
																1637
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1637,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1664,
																	"src": "1007:11:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1636,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1643,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1640,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1618,
																		"src": "1034:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1641,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "1039:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1638,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3009,
																		"src": "1021:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3009_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:7",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2183,
																	"src": "1021:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1645,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1610,
																				"src": "1282:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1646,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1637,
																				"src": "1289:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1644,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1710,
																				1731,
																				1752
																			],
																			"referencedDeclaration": 1752,
																			"src": "1269:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1824_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1824_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1823,
																	"src": "1269:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1649,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "1302:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1662,
																"nodeType": "Block",
																"src": "1360:46:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1656,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1618,
																				"src": "1378:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1657,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1637,
																					"src": "1384:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1658,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1661,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:7"
																	}
																]
															},
															"id": 1663,
															"nodeType": "IfStatement",
															"src": "1265:141:7",
															"trueBody": {
																"id": 1655,
																"nodeType": "Block",
																"src": "1311:43:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1651,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1622,
																				"src": "1329:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1652,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1637,
																				"src": "1336:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1654,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1633,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "981:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1634,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "987:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1665,
												"nodeType": "WhileStatement",
												"src": "974:442:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1666,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "1533:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1670,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1610,
																		"src": "1557:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1671,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1618,
																			"src": "1564:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1669,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1710,
																		1731,
																		1752
																	],
																	"referencedDeclaration": 1752,
																	"src": "1544:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1824_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1824_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1823,
															"src": "1544:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1676,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "1582:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1686,
													"nodeType": "Block",
													"src": "1636:35:7",
													"statements": [
														{
															"expression": {
																"id": 1684,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "1657:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1616,
															"id": 1685,
															"nodeType": "Return",
															"src": "1650:10:7"
														}
													]
												},
												"id": 1687,
												"nodeType": "IfStatement",
												"src": "1529:142:7",
												"trueBody": {
													"id": 1683,
													"nodeType": "Block",
													"src": "1591:39:7",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1679,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "1612:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1616,
															"id": 1682,
															"nodeType": "Return",
															"src": "1605:14:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:7",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "769:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1609,
													"nodeType": "ArrayTypeName",
													"src": "769:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "794:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:7"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "834:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:7"
									},
									"scope": 1779,
									"src": "745:932:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "1993:459:7",
										"statements": [
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "2003:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1701,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1703,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:7"
											},
											{
												"AST": {
													"nativeSrc": "2316:92:7",
													"nodeType": "YulBlock",
													"src": "2316:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2337:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "2340:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2330:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:7"
																},
																"nativeSrc": "2330:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2330:19:7"
															},
															"nativeSrc": "2330:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:7"
														},
														{
															"nativeSrc": "2362:36:7",
															"nodeType": "YulAssignment",
															"src": "2362:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2384:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2374:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:7"
																		},
																		"nativeSrc": "2374:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2394:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2370:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:7"
																},
																"nativeSrc": "2370:28:7",
																"nodeType": "YulFunctionCall",
																"src": "2370:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "2362:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1693,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1695,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1702,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:7",
														"valueSize": 1
													}
												],
												"id": 1704,
												"nodeType": "InlineAssembly",
												"src": "2307:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1705,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "2424:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:7",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1841,
														"src": "2424:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1815_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1815_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1700,
												"id": 1708,
												"nodeType": "Return",
												"src": "2417:28:7"
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1901:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1691,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1692,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1924:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:7"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1960:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1815_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1698,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1697,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:7",
															"1972:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1815,
														"src": "1960:23:7"
													},
													"referencedDeclaration": 1815,
													"src": "1960:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1815_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:7"
									},
									"scope": 1779,
									"src": "1879:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "2768:459:7",
										"statements": [
											{
												"assignments": [
													1723
												],
												"declarations": [
													{
														"constant": false,
														"id": 1723,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1730,
														"src": "2778:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1722,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1724,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:7"
											},
											{
												"AST": {
													"nativeSrc": "3091:92:7",
													"nodeType": "YulBlock",
													"src": "3091:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3112:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3115:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:7"
																},
																"nativeSrc": "3105:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3105:19:7"
															},
															"nativeSrc": "3105:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:7"
														},
														{
															"nativeSrc": "3137:36:7",
															"nodeType": "YulAssignment",
															"src": "3137:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3159:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3149:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:7"
																		},
																		"nativeSrc": "3149:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3169:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3145:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:7"
																},
																"nativeSrc": "3145:28:7",
																"nodeType": "YulFunctionCall",
																"src": "3145:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3137:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1714,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1716,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1723,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:7",
														"valueSize": 1
													}
												],
												"id": 1725,
												"nodeType": "InlineAssembly",
												"src": "3082:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1726,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "3199:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:7",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1863,
														"src": "3199:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1821_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1821_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1721,
												"id": 1729,
												"nodeType": "Return",
												"src": "3192:28:7"
											}
										]
									},
									"documentation": {
										"id": 1711,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2676:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1712,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1713,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2699:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:7"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "2735:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1821_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1718,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:7",
															"2747:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1821,
														"src": "2735:23:7"
													},
													"referencedDeclaration": 1821,
													"src": "2735:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1821_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:7"
									},
									"scope": 1779,
									"src": "2654:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "3543:459:7",
										"statements": [
											{
												"assignments": [
													1744
												],
												"declarations": [
													{
														"constant": false,
														"id": 1744,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "3553:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1743,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1745,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:7"
											},
											{
												"AST": {
													"nativeSrc": "3866:92:7",
													"nodeType": "YulBlock",
													"src": "3866:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "3890:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:7"
																},
																"nativeSrc": "3880:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3880:19:7"
															},
															"nativeSrc": "3880:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:7"
														},
														{
															"nativeSrc": "3912:36:7",
															"nodeType": "YulAssignment",
															"src": "3912:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3934:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3937:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "3924:9:7",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:7"
																		},
																		"nativeSrc": "3924:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3944:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:7"
																},
																"nativeSrc": "3920:28:7",
																"nodeType": "YulFunctionCall",
																"src": "3920:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "3912:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1735,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1737,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1744,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:7",
														"valueSize": 1
													}
												],
												"id": 1746,
												"nodeType": "InlineAssembly",
												"src": "3857:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1747,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "3974:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:7",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1874,
														"src": "3974:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1824_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1824_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1750,
												"nodeType": "Return",
												"src": "3967:28:7"
											}
										]
									},
									"documentation": {
										"id": 1732,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "3451:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1733,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1734,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "3474:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:7"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "3510:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1824_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1739,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:7",
															"3522:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1824,
														"src": "3510:23:7"
													},
													"referencedDeclaration": 1824,
													"src": "3510:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1824_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:7"
									},
									"scope": 1779,
									"src": "3429:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "4303:98:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4322:73:7",
													"nodeType": "YulBlock",
													"src": "4322:73:7",
													"statements": [
														{
															"nativeSrc": "4336:49:7",
															"nodeType": "YulAssignment",
															"src": "4336:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4357:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4362:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4353:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:7"
																				},
																				"nativeSrc": "4353:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4373:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4378:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4369:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:7"
																				},
																				"nativeSrc": "4369:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4349:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:7"
																		},
																		"nativeSrc": "4349:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4343:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:7"
																},
																"nativeSrc": "4343:42:7",
																"nodeType": "YulFunctionCall",
																"src": "4343:42:7"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4336:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1756,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1758,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1761,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:7",
														"valueSize": 1
													}
												],
												"id": 1763,
												"nodeType": "InlineAssembly",
												"src": "4313:82:7"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4232:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1754,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1755,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4254:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:7"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4290:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:7"
									},
									"scope": 1779,
									"src": "4204:197:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "4702:98:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4721:73:7",
													"nodeType": "YulBlock",
													"src": "4721:73:7",
													"statements": [
														{
															"nativeSrc": "4735:49:7",
															"nodeType": "YulAssignment",
															"src": "4735:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "4756:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4761:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4752:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:7"
																				},
																				"nativeSrc": "4752:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4772:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4777:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4768:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:7"
																				},
																				"nativeSrc": "4768:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4748:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:7"
																		},
																		"nativeSrc": "4748:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4742:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:7"
																},
																"nativeSrc": "4742:42:7",
																"nodeType": "YulFunctionCall",
																"src": "4742:42:7"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "4735:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1769,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1771,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1774,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:7",
														"valueSize": 1
													}
												],
												"id": 1776,
												"nodeType": "InlineAssembly",
												"src": "4712:82:7"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "4631:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1767,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1768,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "4653:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:7"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "4689:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:7"
									},
									"scope": 1779,
									"src": "4603:197:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1780,
							"src": "276:4526:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1809
						]
					},
					"id": 1810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1809,
							"linearizedBaseContracts": [
								1809
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1790,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1786,
												"id": 1789,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1809,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1795,
												"id": 1798,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1809,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1804,
												"id": 1806,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1809,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1810,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1919
						]
					},
					"id": 1920,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1812,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1919,
							"linearizedBaseContracts": [
								1919
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1815,
									"members": [
										{
											"constant": false,
											"id": 1814,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1815,
											"src": "1300:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1813,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:9",
									"nodeType": "StructDefinition",
									"scope": 1919,
									"src": "1271:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1818,
									"members": [
										{
											"constant": false,
											"id": 1817,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1818,
											"src": "1355:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1816,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:9",
									"nodeType": "StructDefinition",
									"scope": 1919,
									"src": "1326:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1821,
									"members": [
										{
											"constant": false,
											"id": 1820,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1821,
											"src": "1407:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1819,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:9",
									"nodeType": "StructDefinition",
									"scope": 1919,
									"src": "1378:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1824,
									"members": [
										{
											"constant": false,
											"id": 1823,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1824,
											"src": "1462:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1822,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:9",
									"nodeType": "StructDefinition",
									"scope": 1919,
									"src": "1433:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1827,
									"members": [
										{
											"constant": false,
											"id": 1826,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1827,
											"src": "1516:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1825,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:9",
									"nodeType": "StructDefinition",
									"scope": 1919,
									"src": "1488:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1830,
									"members": [
										{
											"constant": false,
											"id": 1829,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1830,
											"src": "1568:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1828,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:9",
									"nodeType": "StructDefinition",
									"scope": 1919,
									"src": "1541:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "1768:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:9",
													"nodeType": "YulBlock",
													"src": "1830:38:9",
													"statements": [
														{
															"nativeSrc": "1844:14:9",
															"nodeType": "YulAssignment",
															"src": "1844:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:9",
																"nodeType": "YulIdentifier",
																"src": "1854:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1837,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1833,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:9",
														"valueSize": 1
													}
												],
												"id": 1839,
												"nodeType": "InlineAssembly",
												"src": "1821:47:9"
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1708:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1832,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:9"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1745:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1815_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1836,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1835,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1815,
														"src": "1745:11:9"
													},
													"referencedDeclaration": 1815,
													"src": "1745:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1815_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:9"
									},
									"scope": 1919,
									"src": "1684:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "2056:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:9",
													"nodeType": "YulBlock",
													"src": "2118:38:9",
													"statements": [
														{
															"nativeSrc": "2132:14:9",
															"nodeType": "YulAssignment",
															"src": "2132:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:9",
																"nodeType": "YulIdentifier",
																"src": "2142:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1848,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1844,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:9",
														"valueSize": 1
													}
												],
												"id": 1850,
												"nodeType": "InlineAssembly",
												"src": "2109:47:9"
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:9",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "1996:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:9"
									},
									"returnParameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "2033:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1818_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1847,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1846,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1818,
														"src": "2033:11:9"
													},
													"referencedDeclaration": 1818,
													"src": "2033:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1818_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:9"
									},
									"scope": 1919,
									"src": "1972:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "2344:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:9",
													"nodeType": "YulBlock",
													"src": "2406:38:9",
													"statements": [
														{
															"nativeSrc": "2420:14:9",
															"nodeType": "YulAssignment",
															"src": "2420:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:9",
																"nodeType": "YulIdentifier",
																"src": "2430:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1859,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1855,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:9",
														"valueSize": 1
													}
												],
												"id": 1861,
												"nodeType": "InlineAssembly",
												"src": "2397:47:9"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:9",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "2284:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1854,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:9"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "2321:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1821_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1858,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1857,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1821,
														"src": "2321:11:9"
													},
													"referencedDeclaration": 1821,
													"src": "2321:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1821_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:9"
									},
									"scope": 1919,
									"src": "2260:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "2632:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:9",
													"nodeType": "YulBlock",
													"src": "2694:38:9",
													"statements": [
														{
															"nativeSrc": "2708:14:9",
															"nodeType": "YulAssignment",
															"src": "2708:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:9",
																"nodeType": "YulIdentifier",
																"src": "2718:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1870,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1866,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:9",
														"valueSize": 1
													}
												],
												"id": 1872,
												"nodeType": "InlineAssembly",
												"src": "2685:47:9"
											}
										]
									},
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:9",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2572:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1865,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:9"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "2609:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1824_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1869,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1868,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1824,
														"src": "2609:11:9"
													},
													"referencedDeclaration": 1824,
													"src": "2609:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1824_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:9"
									},
									"scope": 1919,
									"src": "2548:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "2917:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:9",
													"nodeType": "YulBlock",
													"src": "2979:38:9",
													"statements": [
														{
															"nativeSrc": "2993:14:9",
															"nodeType": "YulAssignment",
															"src": "2993:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:9",
																"nodeType": "YulIdentifier",
																"src": "3003:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1881,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1877,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:9",
														"valueSize": 1
													}
												],
												"id": 1883,
												"nodeType": "InlineAssembly",
												"src": "2970:47:9"
											}
										]
									},
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:9",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "2858:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1876,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:9"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "2895:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1827_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1880,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1879,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1827,
														"src": "2895:10:9"
													},
													"referencedDeclaration": 1827,
													"src": "2895:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1827_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:9"
									},
									"scope": 1919,
									"src": "2835:188:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "3225:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:9",
													"nodeType": "YulBlock",
													"src": "3287:44:9",
													"statements": [
														{
															"nativeSrc": "3301:20:9",
															"nodeType": "YulAssignment",
															"src": "3301:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:9",
																"nodeType": "YulIdentifier",
																"src": "3311:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1892,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1888,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1894,
												"nodeType": "InlineAssembly",
												"src": "3278:53:9"
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "3158:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:9"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "3203:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1827_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1891,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1890,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1827,
														"src": "3203:10:9"
													},
													"referencedDeclaration": 1827,
													"src": "3203:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1827_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:9"
									},
									"scope": 1919,
									"src": "3135:202:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "3513:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:9",
													"nodeType": "YulBlock",
													"src": "3575:38:9",
													"statements": [
														{
															"nativeSrc": "3589:14:9",
															"nodeType": "YulAssignment",
															"src": "3589:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:9",
																"nodeType": "YulIdentifier",
																"src": "3599:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1903,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1899,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:9",
														"valueSize": 1
													}
												],
												"id": 1905,
												"nodeType": "InlineAssembly",
												"src": "3566:47:9"
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:9",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "3455:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1898,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:9"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "3492:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1830_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1901,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1830,
														"src": "3492:9:9"
													},
													"referencedDeclaration": 1830,
													"src": "3492:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1830_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:9"
									},
									"scope": 1919,
									"src": "3433:186:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "3816:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:9",
													"nodeType": "YulBlock",
													"src": "3878:44:9",
													"statements": [
														{
															"nativeSrc": "3892:20:9",
															"nodeType": "YulAssignment",
															"src": "3892:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:9",
																"nodeType": "YulIdentifier",
																"src": "3902:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1914,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1910,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1916,
												"nodeType": "InlineAssembly",
												"src": "3869:53:9"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "3751:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1909,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:9"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "3795:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1830_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1912,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1830,
														"src": "3795:9:9"
													},
													"referencedDeclaration": 1830,
													"src": "3795:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1830_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:9"
									},
									"scope": 1919,
									"src": "3729:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1920,
							"src": "1245:2685:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1943
						],
						"IERC165": [
							1955
						]
					},
					"id": 1944,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1921,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1923,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1944,
							"sourceUnit": 1956,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1922,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1955,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1925,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1955,
										"src": "687:7:10"
									},
									"id": 1926,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1924,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1943,
							"linearizedBaseContracts": [
								1943,
								1955
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1954
									],
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1934,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1936,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1955,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1955_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1955_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1935,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1955",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1933,
												"id": 1940,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1928,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 1943,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1944,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1955
						]
					},
					"id": 1956,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1945,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1946,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1955,
							"linearizedBaseContracts": [
								1955
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 1955,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1956,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3009
						]
					},
					"id": 3010,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1957,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1958,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3009,
							"linearizedBaseContracts": [
								3009
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1961,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1966,
									"members": [
										{
											"id": 1962,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 1963,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 1964,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 1965,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 1996,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															1979
														],
														"declarations": [
															{
																"constant": false,
																"id": 1979,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 1996,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1978,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1983,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1980,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1981,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1984,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1979,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1985,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1991,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1989,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1977,
															"id": 1990,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1993,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1994,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1977,
														"id": 1995,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1973,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3009,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2025,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2024,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2010,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2011,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2001,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2017,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2015,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2009,
															"id": 2016,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2019,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2020,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2003,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2022,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2009,
														"id": 2023,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3009,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2066,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2038,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2029,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2045,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2043,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2037,
															"id": 2044,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2047
														],
														"declarations": [
															{
																"constant": false,
																"id": 2047,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2066,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2046,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2051,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2048,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2029,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2049,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2031,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2052,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2053,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2029,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2055,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2031,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2061,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2059,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2037,
															"id": 2060,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2063,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2064,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2037,
														"id": 2065,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2027,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2033,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3009,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2094,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2080,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2087,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2085,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2079,
															"id": 2086,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2089,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2071,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2090,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2092,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2079,
														"id": 2093,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2075,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3009,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2122,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2108,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2115,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2113,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2107,
															"id": 2114,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2117,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2099,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2118,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2101,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2120,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2107,
														"id": 2121,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3009,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2134,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2135,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2138,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2129,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2137,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2127,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2133,
												"id": 2140,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2125,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3009,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2152,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2153,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2147,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2156,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2155,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2145,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2151,
												"id": 2158,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3009,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2170,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2171,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2165,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2173,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2174,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2175,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2177,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2169,
												"id": 2181,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3009,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2216,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2193,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2201,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2200,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2196,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2186,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2197,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2188,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2192,
															"id": 2199,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2202,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2206,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2186,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2209,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2210,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2188,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2192,
												"id": 2215,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3009,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2342,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2341,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2230
														],
														"declarations": [
															{
																"constant": false,
																"id": 2230,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2341,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2229,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2234,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2231,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2232,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2222,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2236
														],
														"declarations": [
															{
																"constant": false,
																"id": 2236,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2341,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2235,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2237,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2230,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2230,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2236,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2220,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2222,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2238,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2239,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2246,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2242,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2230,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2243,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2224,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2228,
																	"id": 2245,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2248,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2249,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2236,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2255,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2254,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2251,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1961,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2253,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2257
														],
														"declarations": [
															{
																"constant": false,
																"id": 2257,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2341,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2256,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2258,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2224,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2230,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2230,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2230,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2236,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2236,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2257,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2257,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2257,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2220,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2222,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2259,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2261
														],
														"declarations": [
															{
																"constant": false,
																"id": 2261,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2341,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2260,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2268,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2262,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2224,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2264,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2224,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2266,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2224,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2224,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2230,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2230,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2261,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2261,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2261,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2261,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2261,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2269,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2270,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2230,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2271,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2236,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2272,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2275,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2277
														],
														"declarations": [
															{
																"constant": false,
																"id": 2277,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2341,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2276,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2279,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2224,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2281,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2285,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2287,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2288,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2292,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2293,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2295,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2296,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2300,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2301,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2303,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2304,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2308,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2309,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2311,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2312,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2316,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2317,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2319,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2320,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2324,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2325,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2277,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2327,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2224,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2328,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2332,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2333,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2227,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2334,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2230,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2335,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2338,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2339,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2228,
														"id": 2340,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2218,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3009,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2359
												],
												"declarations": [
													{
														"constant": false,
														"id": 2359,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2385,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2365,
												"initialValue": {
													"arguments": [
														{
															"id": 2361,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2362,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2348,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2363,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2360,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2343,
															2386
														],
														"referencedDeclaration": 2343,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2367,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2353,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1966",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1966",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2366,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3008,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1966_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2370,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2371,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2348,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2372,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2369,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2382,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2381,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2377,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2359,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2380,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2383,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2359,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2357,
												"id": 2384,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2344,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1966",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2352,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2351,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1966,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 1966,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1966",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3009,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2497,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2394,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2400,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2399,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2393,
															"id": 2398,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2402
												],
												"declarations": [
													{
														"constant": false,
														"id": 2402,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2497,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2411,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2405,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2389,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2404,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2665,
																			2700
																		],
																		"referencedDeclaration": 2665,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2409,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2496,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2412,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2413,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2402,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2414,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2415,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2402,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2418,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2422,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2423,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2424,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2402,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2425,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2426,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2402,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2429,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2433,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2434,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2435,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2402,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2436,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2437,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2402,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2440,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2444,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2445,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2446,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2402,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2447,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2448,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2402,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2451,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2455,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2456,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2457,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2402,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2458,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2459,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2402,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2462,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2466,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2467,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2468,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2402,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2469,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2470,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2402,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2477,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2478,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2479,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2402,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2480,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2481,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2402,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2484,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2488,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2490,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2402,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2491,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2389,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2492,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2402,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2489,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2160,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2393,
														"id": 2495,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2498,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3009,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2531,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2510
														],
														"declarations": [
															{
																"constant": false,
																"id": 2510,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2531,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2509,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2514,
														"initialValue": {
															"arguments": [
																{
																	"id": 2512,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2501,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2511,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2498,
																	2533
																],
																"referencedDeclaration": 2498,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2515,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2510,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2517,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2504,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1966",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1966",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2516,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3008,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1966_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2521,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2519,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2510,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2520,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2510,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2522,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2501,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2528,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2508,
														"id": 2530,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2499,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1966",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2502,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1966,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 1966,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1966",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3009,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2542
												],
												"declarations": [
													{
														"constant": false,
														"id": 2542,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2664,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2544,
												"initialValue": {
													"hexValue": "30",
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2661,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2545,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2559,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2558,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2553,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2554,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2557,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2560,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2574,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2573,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2568,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2569,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2572,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2575,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2589,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2588,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2580,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2583,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2584,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2587,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2590,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2604,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2603,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2595,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2598,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2599,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2602,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2605,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2619,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2618,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2610,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2613,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2614,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2617,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2620,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2634,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2633,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2627,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2625,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2628,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2629,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2632,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2635,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2649,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2648,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2644,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2647,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2660,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2659,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2655,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2658,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2662,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2542,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2540,
												"id": 2663,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2534,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3009,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2699,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2698,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2677
														],
														"declarations": [
															{
																"constant": false,
																"id": 2677,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2698,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2676,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2681,
														"initialValue": {
															"arguments": [
																{
																	"id": 2679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2678,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2665,
																	2700
																],
																"referencedDeclaration": 2665,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2682,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2677,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2684,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2671,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1966",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1966",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2683,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3008,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1966_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2688,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2686,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2687,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2677,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2689,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2668,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2693,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2695,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2675,
														"id": 2697,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1966",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2669,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1966,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 1966,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1966",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3009,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2828,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2709
												],
												"declarations": [
													{
														"constant": false,
														"id": 2709,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2828,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2711,
												"initialValue": {
													"hexValue": "30",
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2825,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2712,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2703,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2728,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2727,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2717,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2722,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2723,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2726,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2729,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2703,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2745,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2744,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2734,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2739,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2740,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2743,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2746,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2703,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2762,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2761,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2751,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2756,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2757,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2760,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2763,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2703,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2779,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2778,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2768,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2773,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2774,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2777,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2780,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2703,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2796,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2795,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2785,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2787,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2791,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2794,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2797,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2703,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2813,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2812,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2802,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2807,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2808,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2811,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2814,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2703,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2824,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2823,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2819,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2822,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2826,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2709,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2707,
												"id": 2827,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2701,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3009,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2863,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2862,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2841
														],
														"declarations": [
															{
																"constant": false,
																"id": 2841,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2862,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2840,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2845,
														"initialValue": {
															"arguments": [
																{
																	"id": 2843,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2832,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2842,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2829,
																	2864
																],
																"referencedDeclaration": 2829,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2846,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2841,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2848,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2835,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1966",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1966",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2847,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3008,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1966_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2852,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2850,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2851,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2841,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2853,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2832,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2859,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2839,
														"id": 2861,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1966",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2833,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1966,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 1966,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1966",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3009,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2950,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2873
												],
												"declarations": [
													{
														"constant": false,
														"id": 2873,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2950,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2875,
												"initialValue": {
													"hexValue": "30",
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 2947,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2876,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2867,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2890,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 2889,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2881,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2884,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2885,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2888,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2891,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2867,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2905,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 2904,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2896,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2899,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 2902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2900,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2903,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2906,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2867,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2920,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 2919,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2911,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2914,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2915,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2918,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2921,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2867,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2935,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 2934,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2926,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2929,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 2932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2930,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2933,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2936,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2867,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2946,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 2945,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2941,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2944,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2948,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2873,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2871,
												"id": 2949,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2865,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2951,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3009,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2988,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 2987,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															2963
														],
														"declarations": [
															{
																"constant": false,
																"id": 2963,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2987,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2962,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2967,
														"initialValue": {
															"arguments": [
																{
																	"id": 2965,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2954,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2964,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2951,
																	2989
																],
																"referencedDeclaration": 2951,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2968,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2963,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2980,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2970,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2957,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1966",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1966",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2969,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3008,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1966_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2972,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2975,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2973,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2963,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2974,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2976,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2978,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2954,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2984,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2961,
														"id": 2986,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2952,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1966",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2956,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2955,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1966,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 1966,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1966",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3009,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3007,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3000,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2993,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1966",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1966",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2998,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2997,
												"id": 3006,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 2990,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1966",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2992,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2991,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1966,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 1966,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1966",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3009,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3010,
							"src": "203:14914:12",
							"usedErrors": [
								1961
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"contracts/common/CapybaraNFT.sol": {
				"ast": {
					"absolutePath": "contracts/common/CapybaraNFT.sol",
					"exportedSymbols": {
						"Arrays": [
							1779
						],
						"CapybaraNFT": [
							3107
						],
						"Context": [
							1809
						],
						"ERC1155": [
							1335
						],
						"ERC1155Burnable": [
							1580
						],
						"ERC165": [
							1943
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1596
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							1955
						],
						"Ownable": [
							147
						]
					},
					"id": 3108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3011,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 3012,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3108,
							"sourceUnit": 1336,
							"src": "107:59:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3013,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3108,
							"sourceUnit": 148,
							"src": "167:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"id": 3014,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3108,
							"sourceUnit": 1581,
							"src": "220:78:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3015,
										"name": "ERC1155",
										"nameLocations": [
											"324:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "324:7:13"
									},
									"id": 3016,
									"nodeType": "InheritanceSpecifier",
									"src": "324:7:13"
								},
								{
									"baseName": {
										"id": 3017,
										"name": "Ownable",
										"nameLocations": [
											"333:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "333:7:13"
									},
									"id": 3018,
									"nodeType": "InheritanceSpecifier",
									"src": "333:7:13"
								},
								{
									"baseName": {
										"id": 3019,
										"name": "ERC1155Burnable",
										"nameLocations": [
											"342:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1580,
										"src": "342:15:13"
									},
									"id": 3020,
									"nodeType": "InheritanceSpecifier",
									"src": "342:15:13"
								}
							],
							"canonicalName": "CapybaraNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3107,
							"linearizedBaseContracts": [
								3107,
								1580,
								147,
								1335,
								284,
								1596,
								1458,
								1943,
								1955,
								1809
							],
							"name": "CapybaraNFT",
							"nameLocation": "309:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3022,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "380:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 3107,
									"src": "364:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3021,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "364:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3039,
										"nodeType": "Block",
										"src": "515:33:13",
										"statements": [
											{
												"expression": {
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3035,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3022,
														"src": "525:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "540:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "525:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3038,
												"nodeType": "ExpressionStatement",
												"src": "525:16:13"
											}
										]
									},
									"id": 3040,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3029,
													"name": "newuri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3026,
													"src": "485:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3030,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3028,
												"name": "ERC1155",
												"nameLocations": [
													"477:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "477:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "477:15:13"
										},
										{
											"arguments": [
												{
													"id": 3032,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3024,
													"src": "501:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3033,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3031,
												"name": "Ownable",
												"nameLocations": [
													"493:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "493:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "493:21:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "428:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "420:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "464:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "450:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3025,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "450:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:66:13"
									},
									"returnParameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "515:0:13"
									},
									"scope": 3107,
									"src": "399:149:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3051,
										"nodeType": "Block",
										"src": "609:32:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3048,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3042,
															"src": "627:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3047,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "619:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 3049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "619:15:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3050,
												"nodeType": "ExpressionStatement",
												"src": "619:15:13"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 3052,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3045,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3044,
												"name": "onlyOwner",
												"nameLocations": [
													"599:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "599:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "599:9:13"
										}
									],
									"name": "setURI",
									"nameLocation": "563:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "584:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "570:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "570:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:22:13"
									},
									"returnParameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:0:13"
									},
									"scope": 3107,
									"src": "554:87:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3076,
										"nodeType": "Block",
										"src": "714:116:13",
										"statements": [
											{
												"assignments": [
													3062
												],
												"declarations": [
													{
														"constant": false,
														"id": 3062,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "732:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 3076,
														"src": "724:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3061,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "724:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3064,
												"initialValue": {
													"id": 3063,
													"name": "_nextTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3022,
													"src": "742:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "724:30:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3066,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3054,
															"src": "770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3062,
															"src": "779:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 3068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "788:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 3069,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3056,
															"src": "791:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3065,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "764:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3071,
												"nodeType": "ExpressionStatement",
												"src": "764:32:13"
											},
											{
												"expression": {
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3072,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3022,
														"src": "806:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "822:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "806:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3075,
												"nodeType": "ExpressionStatement",
												"src": "806:17:13"
											}
										]
									},
									"functionSelector": "b510391f",
									"id": 3077,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3059,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3058,
												"name": "onlyOwner",
												"nameLocations": [
													"704:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "704:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "704:9:13"
										}
									],
									"name": "mint",
									"nameLocation": "656:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "669:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "661:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "691:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "678:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3055,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "678:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:36:13"
									},
									"returnParameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:0:13"
									},
									"scope": 3107,
									"src": "647:183:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3105,
										"nodeType": "Block",
										"src": "948:91:13",
										"statements": [
											{
												"body": {
													"id": 3103,
													"nodeType": "Block",
													"src": "994:39:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3099,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3079,
																		"src": "1013:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3100,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3083,
																		"src": "1017:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 3098,
																	"name": "mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "1008:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,bytes memory)"
																	}
																},
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1008:14:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3102,
															"nodeType": "ExpressionStatement",
															"src": "1008:14:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3092,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3089,
														"src": "978:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3093,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "982:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "978:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3104,
												"initializationExpression": {
													"assignments": [
														3089
													],
													"declarations": [
														{
															"constant": false,
															"id": 3089,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "971:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3104,
															"src": "963:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3088,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "963:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3091,
													"initialValue": {
														"hexValue": "30",
														"id": 3090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "975:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "963:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "989:3:13",
														"subExpression": {
															"id": 3095,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3089,
															"src": "989:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3097,
													"nodeType": "ExpressionStatement",
													"src": "989:3:13"
												},
												"nodeType": "ForStatement",
												"src": "958:75:13"
											}
										]
									},
									"functionSelector": "31f0e6c8",
									"id": 3106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3086,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3085,
												"name": "onlyOwner",
												"nameLocations": [
													"938:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "938:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "938:9:13"
										}
									],
									"name": "mintBatch",
									"nameLocation": "845:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "872:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "864:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "count",
												"nameLocation": "892:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "884:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "920:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "907:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3082,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "907:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:76:13"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:0:13"
									},
									"scope": 3107,
									"src": "836:203:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3108,
							"src": "300:741:13",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								24,
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "81:961:13"
				},
				"id": 13
			}
		}
	}
}